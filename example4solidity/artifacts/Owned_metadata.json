{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "- solidity支持多重继承, 即一个合约可以继承多个合约 - 如果出现重写, 将调用子类的函数, 除非使用super关键字 - 当一个合约从多个合约继承时，在区块链上只有一个合约被创建，所有基类合约（或称为父合约）的代码被编译到创建的合约中。 这意味着对基类合约函数的所有内部调用也只是使用内部函数调用（super.f（..）将使用JUMP跳转而不是消息调用）。 - 子类不能覆盖父类的状态变量",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"合约\\_10_合约_继承.sol": "Owned"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"合约\\_10_合约_继承.sol": {
			"keccak256": "0x1e8e504ad508a716209b3b62537edaddb7d6e23e400f8787e9d7df82260981f4",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://8f0856ba6cce3ccedd4a704ccc7bc194239940ffd2cb3337f677752cd21cee6e",
				"dweb:/ipfs/QmbaMeyHbCEWJ82WQbq8mJdMY3TA4WFV5viTftPQLGNrX9"
			]
		}
	},
	"version": 1
}