{
	"id": "37ed3644b81e4b722839622636dfb35c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol": {
				"content": "// SPDX-License-Identifier:GPL-3.0\r\n\r\npragma solidity ^0.8.17;\r\n\r\ncontract A {\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    event Log(string message);\r\n\r\n    function log(string memory message) internal {\r\n        emit Log(message);\r\n    }\r\n\r\n    address payable owner;\r\n}\r\n\r\ncontract Destructible1 is A {\r\n    function destroy() public virtual {\r\n        log(\"1111 before\");\r\n        if (msg.sender == owner) {\r\n            // selfdestruct(owner);\r\n        }\r\n        log(\"1111 after\");\r\n    }\r\n}\r\n\r\ncontract Base1 is Destructible1 {\r\n    function destroy() public virtual override {\r\n        /* 清除操作 1 */\r\n        log(\"base1 before\");\r\n        super.destroy();\r\n        log(\"base1 after\");\r\n    }\r\n}\r\n\r\ncontract Base2 is Destructible1 {\r\n    function destroy() public virtual override {\r\n        /* 清除操作 2 */\r\n        log(\"base2 before\");\r\n        super.destroy();\r\n        log(\"base2 after\");\r\n    }\r\n}\r\n\r\ncontract Final is Base1, Base2 {\r\n    function destroy() public override(Base1, Base2) {\r\n        log(\"final before\");\r\n        Base2.destroy();\r\n        log(\"final after\");\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol": {
				"A": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":66:300  contract A {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":84:144  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":125:135  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:114  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:136  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":66:300  contract A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":66:300  contract A {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122025d2c2ef88877c1fb80b8392183a4c2f22cc18cb976200527bc3e07de149c87b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea264697066735822122025d2c2ef88877c1fb80b8392183a4c2f22cc18cb976200527bc3e07de149c87b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xD2 0xC2 0xEF DUP9 DUP8 PUSH29 0x1FB80B8392183A4C2F22CC18CB976200527BC3E07DE149C87B64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "66:234:0:-:0;;;84:60;;;;;;;;;;125:10;109:5;;:27;;;;;;;;;;;;;;;;;;66:234;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122025d2c2ef88877c1fb80b8392183a4c2f22cc18cb976200527bc3e07de149c87b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xD2 0xC2 0xEF DUP9 DUP8 PUSH29 0x1FB80B8392183A4C2F22CC18CB976200527BC3E07DE149C87B64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "66:234:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "24332",
								"totalCost": "36932"
							},
							"internal": {
								"log(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 300,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 300,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 300,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 84,
									"end": 144,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 84,
									"end": 144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 84,
									"end": 144,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 84,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 84,
									"end": 144,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 84,
									"end": 144,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 84,
									"end": 144,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 84,
									"end": 144,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 84,
									"end": 144,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 84,
									"end": 144,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 109,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 300,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 300,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 300,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 300,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 300,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 300,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 300,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122025d2c2ef88877c1fb80b8392183a4c2f22cc18cb976200527bc3e07de149c87b64736f6c63430008110033",
									".code": [
										{
											"begin": 66,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 300,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":\"A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":{\"keccak256\":\"0x81509091e80c94eb78ef0fef62cfd961fd52356aa5ac69de9c46bea2c79b5038\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://07dc7334679f1748351c3a9120f06bf8d8829c44aa51cec686cebe2355e7edb4\",\"dweb:/ipfs/Qmaw6MGfrNfDxsTM2134DtDvSx1WqVpw6B2o3rdH9UzoDM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol:A",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Base1": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":529:737  contract Base1 is Destructible1 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":125:135  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:114  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:136  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":529:737  contract Base1 is Destructible1 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":529:737  contract Base1 is Destructible1 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83197ef0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":568:734  function destroy() public virtual override {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":652:671  log(\"base1 before\") */\n      tag_7\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      0x6261736531206265666f72650000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":652:655  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":652:671  log(\"base1 before\") */\n      jump\t// in\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":682:697  super.destroy() */\n      tag_9\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":682:695  super.destroy */\n      tag_10\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":682:697  super.destroy() */\n      jump\t// in\n    tag_9:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":708:726  log(\"base1 after\") */\n      tag_11\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x6261736531206166746572000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":708:711  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":708:726  log(\"base1 after\") */\n      jump\t// in\n    tag_11:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":568:734  function destroy() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":186:267  function log(string memory message) internal {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":247:259  Log(message) */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":251:258  message */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":247:259  Log(message) */\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":186:267  function log(string memory message) internal {... */\n      pop\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":339:522  function destroy() public virtual {... */\n    tag_10:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:402  log(\"1111 before\") */\n      tag_16\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x31313131206265666f7265000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:387  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:402  log(\"1111 before\") */\n      jump\t// in\n    tag_16:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":431:436  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      pop\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:514  log(\"1111 after\") */\n      tag_18\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x3131313120616674657200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:500  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:514  log(\"1111 after\") */\n      jump\t// in\n    tag_18:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":339:522  function destroy() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_19:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_20:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_21:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_28:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_28)\n    tag_30:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_22:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_23:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_33\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_19\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":818:889   */\n      tag_34\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_20\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_35\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_21\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":988:1017   */\n      tag_36\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_22\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_14:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_38\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_23\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122032a33a855a4f675d53e4fd175f935b8ef7c88a3759a98915cfd38a850c5d787864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061026c806100606000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600c81526020017f6261736531206265666f726500000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600b81526020017f62617365312061667465720000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef9190610214565b60405180910390a150565b6101386040518060400160405280600b81526020017f31313131206265666f72650000000000000000000000000000000000000000008152506100c0565b60008054906101000a9050506101826040518060400160405280600a81526020017f31313131206166746572000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156101be5780820151818401526020810190506101a3565b60008484015250505050565b6000601f19601f8301169050919050565b60006101e682610184565b6101f0818561018f565b93506102008185602086016101a0565b610209816101ca565b840191505092915050565b6000602082019050818103600083015261022e81846101db565b90509291505056fea264697066735822122032a33a855a4f675d53e4fd175f935b8ef7c88a3759a98915cfd38a850c5d787864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x26C DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736531206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736531206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31313131206265666F7265000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH2 0x182 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131313120616674657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6 DUP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x1F0 DUP2 DUP6 PUSH2 0x18F JUMP JUMPDEST SWAP4 POP PUSH2 0x200 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22E DUP2 DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN LOG3 GASPRICE DUP6 GAS 0x4F PUSH8 0x5D53E4FD175F935B DUP15 0xF7 0xC8 DUP11 CALLDATACOPY MSIZE 0xA9 DUP10 ISZERO 0xCF 0xD3 DUP11 DUP6 0xC 0x5D PUSH25 0x7864736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "529:208:0:-:0;;;;;;;;;;;;;125:10;109:5;;:27;;;;;;;;;;;;;;;;;;529:208;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@destroy_50": {
									"entryPoint": 250,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@destroy_71": {
									"entryPoint": 58,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_27": {
									"entryPoint": 192,
									"id": 27,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600c81526020017f6261736531206265666f726500000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600b81526020017f62617365312061667465720000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef9190610214565b60405180910390a150565b6101386040518060400160405280600b81526020017f31313131206265666f72650000000000000000000000000000000000000000008152506100c0565b60008054906101000a9050506101826040518060400160405280600a81526020017f31313131206166746572000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156101be5780820151818401526020810190506101a3565b60008484015250505050565b6000601f19601f8301169050919050565b60006101e682610184565b6101f0818561018f565b93506102008185602086016101a0565b610209816101ca565b840191505092915050565b6000602082019050818103600083015261022e81846101db565b90509291505056fea264697066735822122032a33a855a4f675d53e4fd175f935b8ef7c88a3759a98915cfd38a850c5d787864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736531206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736531206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31313131206265666F7265000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH2 0x182 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131313120616674657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6 DUP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x1F0 DUP2 DUP6 PUSH2 0x18F JUMP JUMPDEST SWAP4 POP PUSH2 0x200 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22E DUP2 DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN LOG3 GASPRICE DUP6 GAS 0x4F PUSH8 0x5D53E4FD175F935B DUP15 0xF7 0xC8 DUP11 CALLDATACOPY MSIZE 0xA9 DUP10 ISZERO 0xCF 0xD3 DUP11 DUP6 0xC 0x5D PUSH25 0x7864736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "529:208:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:166;;;:::i;:::-;;;652:19;;;;;;;;;;;;;;;;;;:3;:19::i;:::-;682:15;:13;:15::i;:::-;708:18;;;;;;;;;;;;;;;;;;:3;:18::i;:::-;568:166::o;186:81::-;247:12;251:7;247:12;;;;;;:::i;:::-;;;;;;;;186:81;:::o;339:183::-;384:18;;;;;;;;;;;;;;;;;;:3;:18::i;:::-;431:5;;;;;;;;;497:17;;;;;;;;;;;;;;;;;;:3;:17::i;:::-;339:183::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "124000",
								"executionCost": "24437",
								"totalCost": "148437"
							},
							"external": {
								"destroy()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 529,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 529,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 529,
									"end": 737,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 529,
									"end": 737,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 529,
									"end": 737,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 109,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 529,
									"end": 737,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 529,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 529,
									"end": 737,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 529,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 529,
									"end": 737,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122032a33a855a4f675d53e4fd175f935b8ef7c88a3759a98915cfd38a850c5d787864736f6c63430008110033",
									".code": [
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "83197EF0"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 568,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 568,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 568,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 568,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 568,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 734,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 568,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "6261736531206265666F72650000000000000000000000000000000000000000"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 652,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 682,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 682,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 682,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "6261736531206166746572000000000000000000000000000000000000000000"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 708,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 251,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 247,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 339,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "31313131206265666F7265000000000000000000000000000000000000000000"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "3131313120616674657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 497,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"destroy()": "83197ef0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":\"Base1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":{\"keccak256\":\"0x81509091e80c94eb78ef0fef62cfd961fd52356aa5ac69de9c46bea2c79b5038\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://07dc7334679f1748351c3a9120f06bf8d8829c44aa51cec686cebe2355e7edb4\",\"dweb:/ipfs/Qmaw6MGfrNfDxsTM2134DtDvSx1WqVpw6B2o3rdH9UzoDM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol:Base1",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Base2": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":741:949  contract Base2 is Destructible1 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":125:135  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:114  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:136  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":741:949  contract Base2 is Destructible1 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":741:949  contract Base2 is Destructible1 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83197ef0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":780:946  function destroy() public virtual override {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":864:883  log(\"base2 before\") */\n      tag_7\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      0x6261736532206265666f72650000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":864:867  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":864:883  log(\"base2 before\") */\n      jump\t// in\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":894:909  super.destroy() */\n      tag_9\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":894:907  super.destroy */\n      tag_10\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":894:909  super.destroy() */\n      jump\t// in\n    tag_9:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":920:938  log(\"base2 after\") */\n      tag_11\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x6261736532206166746572000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":920:923  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":920:938  log(\"base2 after\") */\n      jump\t// in\n    tag_11:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":780:946  function destroy() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":186:267  function log(string memory message) internal {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":247:259  Log(message) */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":251:258  message */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":247:259  Log(message) */\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":186:267  function log(string memory message) internal {... */\n      pop\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":339:522  function destroy() public virtual {... */\n    tag_10:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:402  log(\"1111 before\") */\n      tag_16\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x31313131206265666f7265000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:387  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:402  log(\"1111 before\") */\n      jump\t// in\n    tag_16:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":431:436  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      pop\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:514  log(\"1111 after\") */\n      tag_18\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x3131313120616674657200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:500  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:514  log(\"1111 after\") */\n      jump\t// in\n    tag_18:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":339:522  function destroy() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_19:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_20:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_21:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_28:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_28)\n    tag_30:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_22:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_23:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_33\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_19\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":818:889   */\n      tag_34\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_20\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_35\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_21\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":988:1017   */\n      tag_36\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_22\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_14:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_38\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_23\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203916c90265ad5284f8d98fab2bf01388941fc95e7bf012c1ebdb9e2fda07b68d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061026c806100606000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600c81526020017f6261736532206265666f726500000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600b81526020017f62617365322061667465720000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef9190610214565b60405180910390a150565b6101386040518060400160405280600b81526020017f31313131206265666f72650000000000000000000000000000000000000000008152506100c0565b60008054906101000a9050506101826040518060400160405280600a81526020017f31313131206166746572000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156101be5780820151818401526020810190506101a3565b60008484015250505050565b6000601f19601f8301169050919050565b60006101e682610184565b6101f0818561018f565b93506102008185602086016101a0565b610209816101ca565b840191505092915050565b6000602082019050818103600083015261022e81846101db565b90509291505056fea26469706673582212203916c90265ad5284f8d98fab2bf01388941fc95e7bf012c1ebdb9e2fda07b68d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x26C DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736532206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736532206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31313131206265666F7265000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH2 0x182 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131313120616674657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6 DUP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x1F0 DUP2 DUP6 PUSH2 0x18F JUMP JUMPDEST SWAP4 POP PUSH2 0x200 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22E DUP2 DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY AND 0xC9 MUL PUSH6 0xAD5284F8D98F 0xAB 0x2B CREATE SGT DUP9 SWAP5 0x1F 0xC9 0x5E PUSH28 0xF012C1EBDB9E2FDA07B68D64736F6C63430008110033000000000000 ",
							"sourceMap": "741:208:0:-:0;;;;;;;;;;;;;125:10;109:5;;:27;;;;;;;;;;;;;;;;;;741:208;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@destroy_50": {
									"entryPoint": 250,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@destroy_92": {
									"entryPoint": 58,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_27": {
									"entryPoint": 192,
									"id": 27,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600c81526020017f6261736532206265666f726500000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600b81526020017f62617365322061667465720000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef9190610214565b60405180910390a150565b6101386040518060400160405280600b81526020017f31313131206265666f72650000000000000000000000000000000000000000008152506100c0565b60008054906101000a9050506101826040518060400160405280600a81526020017f31313131206166746572000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156101be5780820151818401526020810190506101a3565b60008484015250505050565b6000601f19601f8301169050919050565b60006101e682610184565b6101f0818561018f565b93506102008185602086016101a0565b610209816101ca565b840191505092915050565b6000602082019050818103600083015261022e81846101db565b90509291505056fea26469706673582212203916c90265ad5284f8d98fab2bf01388941fc95e7bf012c1ebdb9e2fda07b68d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736532206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736532206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31313131206265666F7265000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH2 0x182 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131313120616674657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6 DUP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x1F0 DUP2 DUP6 PUSH2 0x18F JUMP JUMPDEST SWAP4 POP PUSH2 0x200 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22E DUP2 DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY AND 0xC9 MUL PUSH6 0xAD5284F8D98F 0xAB 0x2B CREATE SGT DUP9 SWAP5 0x1F 0xC9 0x5E PUSH28 0xF012C1EBDB9E2FDA07B68D64736F6C63430008110033000000000000 ",
							"sourceMap": "741:208:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;780:166;;;:::i;:::-;;;864:19;;;;;;;;;;;;;;;;;;:3;:19::i;:::-;894:15;:13;:15::i;:::-;920:18;;;;;;;;;;;;;;;;;;:3;:18::i;:::-;780:166::o;186:81::-;247:12;251:7;247:12;;;;;;:::i;:::-;;;;;;;;186:81;:::o;339:183::-;384:18;;;;;;;;;;;;;;;;;;:3;:18::i;:::-;431:5;;;;;;;;;497:17;;;;;;;;;;;;;;;;;;:3;:17::i;:::-;339:183::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "124000",
								"executionCost": "24437",
								"totalCost": "148437"
							},
							"external": {
								"destroy()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 741,
									"end": 949,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 741,
									"end": 949,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 741,
									"end": 949,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 741,
									"end": 949,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 949,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 741,
									"end": 949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 109,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 741,
									"end": 949,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 741,
									"end": 949,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 949,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 741,
									"end": 949,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 949,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203916c90265ad5284f8d98fab2bf01388941fc95e7bf012c1ebdb9e2fda07b68d64736f6c63430008110033",
									".code": [
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "83197EF0"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 949,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 780,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 780,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 780,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 946,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 780,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "6261736532206265666F72650000000000000000000000000000000000000000"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 864,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 894,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "6261736532206166746572000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 920,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 251,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 247,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 339,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "31313131206265666F7265000000000000000000000000000000000000000000"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "3131313120616674657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 497,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"destroy()": "83197ef0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":\"Base2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":{\"keccak256\":\"0x81509091e80c94eb78ef0fef62cfd961fd52356aa5ac69de9c46bea2c79b5038\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://07dc7334679f1748351c3a9120f06bf8d8829c44aa51cec686cebe2355e7edb4\",\"dweb:/ipfs/Qmaw6MGfrNfDxsTM2134DtDvSx1WqVpw6B2o3rdH9UzoDM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol:Base2",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Destructible1": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":304:525  contract Destructible1 is A {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":125:135  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:114  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:136  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":304:525  contract Destructible1 is A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":304:525  contract Destructible1 is A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83197ef0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":339:522  function destroy() public virtual {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:402  log(\"1111 before\") */\n      tag_7\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x31313131206265666f7265000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:387  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:402  log(\"1111 before\") */\n      jump\t// in\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":431:436  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      pop\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:514  log(\"1111 after\") */\n      tag_10\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x3131313120616674657200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:500  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:514  log(\"1111 after\") */\n      jump\t// in\n    tag_10:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":339:522  function destroy() public virtual {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":186:267  function log(string memory message) internal {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":247:259  Log(message) */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":251:258  message */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":247:259  Log(message) */\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":186:267  function log(string memory message) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_14:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_15:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_16:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_23:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_23)\n    tag_25:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_17:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_18:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_28\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_14\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":818:889   */\n      tag_29\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_15\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_30\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_16\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":988:1017   */\n      tag_31\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_17\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_13:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_33\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_18\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122000917640af1f994280a813b07f6f08ad2ef3f75233d02d84839bcc66453fe08764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101e6806100606000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600b81526020017f31313131206265666f72650000000000000000000000000000000000000000008152506100c4565b60008054906101000a9050506100c26040518060400160405280600a81526020017f31313131206166746572000000000000000000000000000000000000000000008152506100c4565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100f3919061018e565b60405180910390a150565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013857808201518184015260208101905061011d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610160826100fe565b61016a8185610109565b935061017a81856020860161011a565b61018381610144565b840191505092915050565b600060208201905081810360008301526101a88184610155565b90509291505056fea264697066735822122000917640af1f994280a813b07f6f08ad2ef3f75233d02d84839bcc66453fe08764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1E6 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31313131206265666F7265000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH2 0xC2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131313120616674657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC4 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x138 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x16A DUP2 DUP6 PUSH2 0x109 JUMP JUMPDEST SWAP4 POP PUSH2 0x17A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x183 DUP2 PUSH2 0x144 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8 DUP2 DUP5 PUSH2 0x155 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP SWAP2 PUSH23 0x40AF1F994280A813B07F6F08AD2EF3F75233D02D84839B 0xCC PUSH7 0x453FE08764736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "304:221:0:-:0;;;;;;;;;;;;;125:10;109:5;;:27;;;;;;;;;;;;;;;;;;304:221;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@destroy_50": {
									"entryPoint": 58,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_27": {
									"entryPoint": 196,
									"id": 27,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600b81526020017f31313131206265666f72650000000000000000000000000000000000000000008152506100c4565b60008054906101000a9050506100c26040518060400160405280600a81526020017f31313131206166746572000000000000000000000000000000000000000000008152506100c4565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100f3919061018e565b60405180910390a150565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013857808201518184015260208101905061011d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610160826100fe565b61016a8185610109565b935061017a81856020860161011a565b61018381610144565b840191505092915050565b600060208201905081810360008301526101a88184610155565b90509291505056fea264697066735822122000917640af1f994280a813b07f6f08ad2ef3f75233d02d84839bcc66453fe08764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31313131206265666F7265000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH2 0xC2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131313120616674657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC4 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x138 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x16A DUP2 DUP6 PUSH2 0x109 JUMP JUMPDEST SWAP4 POP PUSH2 0x17A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x183 DUP2 PUSH2 0x144 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8 DUP2 DUP5 PUSH2 0x155 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP SWAP2 PUSH23 0x40AF1F994280A813B07F6F08AD2EF3F75233D02D84839B 0xCC PUSH7 0x453FE08764736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "304:221:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:183;;;:::i;:::-;;;384:18;;;;;;;;;;;;;;;;;;:3;:18::i;:::-;431:5;;;;;;;;;497:17;;;;;;;;;;;;;;;;;;:3;:17::i;:::-;339:183::o;186:81::-;247:12;251:7;247:12;;;;;;:::i;:::-;;;;;;;;186:81;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "97200",
								"executionCost": "24413",
								"totalCost": "121613"
							},
							"external": {
								"destroy()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 304,
									"end": 525,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 304,
									"end": 525,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 304,
									"end": 525,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 304,
									"end": 525,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 304,
									"end": 525,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 109,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 525,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 525,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 304,
									"end": 525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 525,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000917640af1f994280a813b07f6f08ad2ef3f75233d02d84839bcc66453fe08764736f6c63430008110033",
									".code": [
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "83197EF0"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 525,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 339,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "31313131206265666F7265000000000000000000000000000000000000000000"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "3131313120616674657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 497,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 251,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"destroy()": "83197ef0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":\"Destructible1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":{\"keccak256\":\"0x81509091e80c94eb78ef0fef62cfd961fd52356aa5ac69de9c46bea2c79b5038\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://07dc7334679f1748351c3a9120f06bf8d8829c44aa51cec686cebe2355e7edb4\",\"dweb:/ipfs/Qmaw6MGfrNfDxsTM2134DtDvSx1WqVpw6B2o3rdH9UzoDM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol:Destructible1",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Final": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":953:1136  contract Final is Base1, Base2 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":125:135  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:114  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":109:136  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":953:1136  contract Final is Base1, Base2 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":953:1136  contract Final is Base1, Base2 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83197ef0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":991:1133  function destroy() public override(Base1, Base2) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1051:1070  log(\"final before\") */\n      tag_7\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      0x66696e616c206265666f72650000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1051:1054  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1051:1070  log(\"final before\") */\n      jump\t// in\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1081:1096  Base2.destroy() */\n      tag_9\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1081:1094  Base2.destroy */\n      tag_10\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1081:1096  Base2.destroy() */\n      jump\t// in\n    tag_9:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1107:1125  log(\"final after\") */\n      tag_11\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x66696e616c206166746572000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1107:1110  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1107:1125  log(\"final after\") */\n      jump\t// in\n    tag_11:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":991:1133  function destroy() public override(Base1, Base2) {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":186:267  function log(string memory message) internal {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":247:259  Log(message) */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":251:258  message */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":247:259  Log(message) */\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":186:267  function log(string memory message) internal {... */\n      pop\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":780:946  function destroy() public virtual override {... */\n    tag_10:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":864:883  log(\"base2 before\") */\n      tag_16\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      0x6261736532206265666f72650000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":864:867  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":864:883  log(\"base2 before\") */\n      jump\t// in\n    tag_16:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":894:909  super.destroy() */\n      tag_17\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":894:907  super.destroy */\n      tag_18\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":894:909  super.destroy() */\n      jump\t// in\n    tag_17:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":920:938  log(\"base2 after\") */\n      tag_19\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x6261736532206166746572000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":920:923  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":920:938  log(\"base2 after\") */\n      jump\t// in\n    tag_19:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":780:946  function destroy() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":568:734  function destroy() public virtual override {... */\n    tag_18:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":652:671  log(\"base1 before\") */\n      tag_21\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      0x6261736531206265666f72650000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":652:655  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":652:671  log(\"base1 before\") */\n      jump\t// in\n    tag_21:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":682:697  super.destroy() */\n      tag_22\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":682:695  super.destroy */\n      tag_23\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":682:697  super.destroy() */\n      jump\t// in\n    tag_22:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":708:726  log(\"base1 after\") */\n      tag_24\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x6261736531206166746572000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":708:711  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":708:726  log(\"base1 after\") */\n      jump\t// in\n    tag_24:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":568:734  function destroy() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":339:522  function destroy() public virtual {... */\n    tag_23:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:402  log(\"1111 before\") */\n      tag_26\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x31313131206265666f7265000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:387  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":384:402  log(\"1111 before\") */\n      jump\t// in\n    tag_26:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":431:436  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      pop\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:514  log(\"1111 after\") */\n      tag_28\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x3131313120616674657200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:500  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":497:514  log(\"1111 after\") */\n      jump\t// in\n    tag_28:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_19_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe5\\x90\\x8d\\xe5\\x92\\x8csuper\\xe8\\xb0\\x83\\xe7\\x94\\xa8\\xe7\\x88\\xb6\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":339:522  function destroy() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_29:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_30:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_31:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_38:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_38)\n    tag_40:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_32:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_33:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_43\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_29\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":818:889   */\n      tag_44\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_30\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_45\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_31\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":988:1017   */\n      tag_46\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_32\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_14:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_48\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_33\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122084928993713f09386cc9253c780860b83b38c181991724d2efa7a6592f4732e864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610378806100606000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600c81526020017f66696e616c206265666f726500000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600b81526020017f66696e616c2061667465720000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef9190610320565b60405180910390a150565b6101386040518060400160405280600c81526020017f6261736532206265666f726500000000000000000000000000000000000000008152506100c0565b610140610180565b61017e6040518060400160405280600b81526020017f62617365322061667465720000000000000000000000000000000000000000008152506100c0565b565b6101be6040518060400160405280600c81526020017f6261736531206265666f726500000000000000000000000000000000000000008152506100c0565b6101c6610206565b6102046040518060400160405280600b81526020017f62617365312061667465720000000000000000000000000000000000000000008152506100c0565b565b6102446040518060400160405280600b81526020017f31313131206265666f72650000000000000000000000000000000000000000008152506100c0565b60008054906101000a90505061028e6040518060400160405280600a81526020017f31313131206166746572000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156102ca5780820151818401526020810190506102af565b60008484015250505050565b6000601f19601f8301169050919050565b60006102f282610290565b6102fc818561029b565b935061030c8185602086016102ac565b610315816102d6565b840191505092915050565b6000602082019050818103600083015261033a81846102e7565b90509291505056fea264697066735822122084928993713f09386cc9253c780860b83b38c181991724d2efa7a6592f4732e864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x378 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x66696E616C206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x66696E616C206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736532206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736532206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736531206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x204 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736531206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x244 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31313131206265666F7265000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH2 0x28E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131313120616674657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 DUP3 PUSH2 0x290 JUMP JUMPDEST PUSH2 0x2FC DUP2 DUP6 PUSH2 0x29B JUMP JUMPDEST SWAP4 POP PUSH2 0x30C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x315 DUP2 PUSH2 0x2D6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A DUP2 DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SWAP3 DUP10 SWAP4 PUSH18 0x3F09386CC9253C780860B83B38C181991724 0xD2 0xEF 0xA7 0xA6 MSIZE 0x2F SELFBALANCE ORIGIN 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "953:183:0:-:0;;;;;;;;;;;;;125:10;109:5;;:27;;;;;;;;;;;;;;;;;;953:183;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@destroy_117": {
									"entryPoint": 58,
									"id": 117,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@destroy_50": {
									"entryPoint": 518,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@destroy_71": {
									"entryPoint": 384,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@destroy_92": {
									"entryPoint": 250,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_27": {
									"entryPoint": 192,
									"id": 27,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600c81526020017f66696e616c206265666f726500000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600b81526020017f66696e616c2061667465720000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef9190610320565b60405180910390a150565b6101386040518060400160405280600c81526020017f6261736532206265666f726500000000000000000000000000000000000000008152506100c0565b610140610180565b61017e6040518060400160405280600b81526020017f62617365322061667465720000000000000000000000000000000000000000008152506100c0565b565b6101be6040518060400160405280600c81526020017f6261736531206265666f726500000000000000000000000000000000000000008152506100c0565b6101c6610206565b6102046040518060400160405280600b81526020017f62617365312061667465720000000000000000000000000000000000000000008152506100c0565b565b6102446040518060400160405280600b81526020017f31313131206265666f72650000000000000000000000000000000000000000008152506100c0565b60008054906101000a90505061028e6040518060400160405280600a81526020017f31313131206166746572000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156102ca5780820151818401526020810190506102af565b60008484015250505050565b6000601f19601f8301169050919050565b60006102f282610290565b6102fc818561029b565b935061030c8185602086016102ac565b610315816102d6565b840191505092915050565b6000602082019050818103600083015261033a81846102e7565b90509291505056fea264697066735822122084928993713f09386cc9253c780860b83b38c181991724d2efa7a6592f4732e864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x66696E616C206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x66696E616C206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736532206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736532206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736531206265666F72650000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x204 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261736531206166746572000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x244 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31313131206265666F7265000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP PUSH2 0x28E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3131313120616674657200000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 DUP3 PUSH2 0x290 JUMP JUMPDEST PUSH2 0x2FC DUP2 DUP6 PUSH2 0x29B JUMP JUMPDEST SWAP4 POP PUSH2 0x30C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x315 DUP2 PUSH2 0x2D6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A DUP2 DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SWAP3 DUP10 SWAP4 PUSH18 0x3F09386CC9253C780860B83B38C181991724 0xD2 0xEF 0xA7 0xA6 MSIZE 0x2F SELFBALANCE ORIGIN 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "953:183:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:142;;;:::i;:::-;;;1051:19;;;;;;;;;;;;;;;;;;:3;:19::i;:::-;1081:15;:13;:15::i;:::-;1107:18;;;;;;;;;;;;;;;;;;:3;:18::i;:::-;991:142::o;186:81::-;247:12;251:7;247:12;;;;;;:::i;:::-;;;;;;;;186:81;:::o;780:166::-;864:19;;;;;;;;;;;;;;;;;;:3;:19::i;:::-;894:15;:13;:15::i;:::-;920:18;;;;;;;;;;;;;;;;;;:3;:18::i;:::-;780:166::o;568:::-;652:19;;;;;;;;;;;;;;;;;;:3;:19::i;:::-;682:15;:13;:15::i;:::-;708:18;;;;;;;;;;;;;;;;;;:3;:18::i;:::-;568:166::o;339:183::-;384:18;;;;;;;;;;;;;;;;;;:3;:18::i;:::-;431:5;;;;;;;;;497:17;;;;;;;;;;;;;;;;;;:3;:17::i;:::-;339:183::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "177600",
								"executionCost": "24486",
								"totalCost": "202086"
							},
							"external": {
								"destroy()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 953,
									"end": 1136,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 109,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 109,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 1136,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122084928993713f09386cc9253c780860b83b38c181991724d2efa7a6592f4732e864736f6c63430008110033",
									".code": [
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "83197EF0"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1136,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 991,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 991,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 991,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 991,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1133,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 991,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "66696E616C206265666F72650000000000000000000000000000000000000000"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1051,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1051,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1081,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1096,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1081,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "66696E616C206166746572000000000000000000000000000000000000000000"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1107,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 251,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 247,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 259,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 780,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "6261736532206265666F72650000000000000000000000000000000000000000"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 864,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 894,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 894,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 894,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "6261736532206166746572000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 920,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 568,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "6261736531206265666F72650000000000000000000000000000000000000000"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 652,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 682,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 682,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 682,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "6261736531206166746572000000000000000000000000000000000000000000"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 708,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 708,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 339,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "31313131206265666F7265000000000000000000000000000000000000000000"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "3131313120616674657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 497,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 497,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"destroy()": "83197ef0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":\"Final\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_19_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u901a\\u8fc7\\u5408\\u7ea6\\u540d\\u548csuper\\u8c03\\u7528\\u7236\\u5408\\u7ea6\\u7684\\u533a\\u522b.sol\":{\"keccak256\":\"0x81509091e80c94eb78ef0fef62cfd961fd52356aa5ac69de9c46bea2c79b5038\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://07dc7334679f1748351c3a9120f06bf8d8829c44aa51cec686cebe2355e7edb4\",\"dweb:/ipfs/Qmaw6MGfrNfDxsTM2134DtDvSx1WqVpw6B2o3rdH9UzoDM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol:Final",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol": {
				"ast": {
					"absolutePath": "合约/_19_合约_继承_通过合约名和super调用父合约的区别.sol",
					"exportedSymbols": {
						"A": [
							30
						],
						"Base1": [
							72
						],
						"Base2": [
							93
						],
						"Destructible1": [
							51
						],
						"Final": [
							118
						]
					},
					"id": 119,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "A",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "A",
							"nameLocation": "75:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "98:46:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "109:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 7,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "125:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "129:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "125:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 6,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "117:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 5,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "117:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "117:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "109:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "109:27:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "95:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "98:0:0"
									},
									"scope": 30,
									"src": "84:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
									"id": 17,
									"name": "Log",
									"nameLocation": "158:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "169:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "162:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 14,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "162:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "161:16:0"
									},
									"src": "152:26:0"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "231:36:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 23,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "251:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 22,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "247:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "247:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "EmitStatement",
												"src": "242:17:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log",
									"nameLocation": "195:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "213:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "199:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "199:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:23:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:0:0"
									},
									"scope": 30,
									"src": "186:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "291:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 30,
									"src": "275:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "275:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 119,
							"src": "66:234:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 31,
										"name": "A",
										"nameLocations": [
											"330:1:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 30,
										"src": "330:1:0"
									},
									"id": 32,
									"nodeType": "InheritanceSpecifier",
									"src": "330:1:0"
								}
							],
							"canonicalName": "Destructible1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 51,
							"linearizedBaseContracts": [
								51,
								30
							],
							"name": "Destructible1",
							"nameLocation": "313:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "373:149:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31313131206265666f7265",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "388:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f5434585271ce4f7b263ed2c158572c6754a2a73789a11f7037a307ed913f2d",
																"typeString": "literal_string \"1111 before\""
															},
															"value": "1111 before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_4f5434585271ce4f7b263ed2c158572c6754a2a73789a11f7037a307ed913f2d",
																"typeString": "literal_string \"1111 before\""
															}
														],
														"id": 35,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "384:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "384:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "384:18:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 39,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "417:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "421:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "417:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 41,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "431:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "417:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "413:74:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "438:49:0",
													"statements": []
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31313131206166746572",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "501:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b947b22e97c4b4d151b5878547974c51d0eb9000cf81d212c8a36c066d5c3b91",
																"typeString": "literal_string \"1111 after\""
															},
															"value": "1111 after"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_b947b22e97c4b4d151b5878547974c51d0eb9000cf81d212c8a36c066d5c3b91",
																"typeString": "literal_string \"1111 after\""
															}
														],
														"id": 45,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "497:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "497:17:0"
											}
										]
									},
									"functionSelector": "83197ef0",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destroy",
									"nameLocation": "348:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:0:0"
									},
									"scope": 51,
									"src": "339:183:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 119,
							"src": "304:221:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 52,
										"name": "Destructible1",
										"nameLocations": [
											"547:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 51,
										"src": "547:13:0"
									},
									"id": 53,
									"nodeType": "InheritanceSpecifier",
									"src": "547:13:0"
								}
							],
							"canonicalName": "Base1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 72,
							"linearizedBaseContracts": [
								72,
								51,
								30
							],
							"name": "Base1",
							"nameLocation": "538:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "611:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "6261736531206265666f7265",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "656:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b26192891c89d4ef220e8a068e946544dbe90bcc9d33fa47e129eea60b416844",
																"typeString": "literal_string \"base1 before\""
															},
															"value": "base1 before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_b26192891c89d4ef220e8a068e946544dbe90bcc9d33fa47e129eea60b416844",
																"typeString": "literal_string \"base1 before\""
															}
														],
														"id": 57,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "652:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "652:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "652:19:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 61,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "682:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Base1_$72_$",
																"typeString": "type(contract super Base1)"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "688:7:0",
														"memberName": "destroy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 50,
														"src": "682:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "682:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "682:15:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "6261736531206166746572",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "712:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_804e82248c45cbf34239f93915a9c30f7832a8f0ae2e32396a57eb17fbe1507a",
																"typeString": "literal_string \"base1 after\""
															},
															"value": "base1 after"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_804e82248c45cbf34239f93915a9c30f7832a8f0ae2e32396a57eb17fbe1507a",
																"typeString": "literal_string \"base1 after\""
															}
														],
														"id": 66,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "708:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "708:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "708:18:0"
											}
										]
									},
									"functionSelector": "83197ef0",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destroy",
									"nameLocation": "577:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 55,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "602:8:0"
									},
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:0"
									},
									"scope": 72,
									"src": "568:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 119,
							"src": "529:208:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 73,
										"name": "Destructible1",
										"nameLocations": [
											"759:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 51,
										"src": "759:13:0"
									},
									"id": 74,
									"nodeType": "InheritanceSpecifier",
									"src": "759:13:0"
								}
							],
							"canonicalName": "Base2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 93,
							"linearizedBaseContracts": [
								93,
								51,
								30
							],
							"name": "Base2",
							"nameLocation": "750:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "823:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "6261736532206265666f7265",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "868:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d673838ac931d9398f19dc16e7dbdd0c7281a1ffa23d143c8d678bb28fa9e52",
																"typeString": "literal_string \"base2 before\""
															},
															"value": "base2 before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6d673838ac931d9398f19dc16e7dbdd0c7281a1ffa23d143c8d678bb28fa9e52",
																"typeString": "literal_string \"base2 before\""
															}
														],
														"id": 78,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "864:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "864:19:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 82,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "894:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Base2_$93_$",
																"typeString": "type(contract super Base2)"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "900:7:0",
														"memberName": "destroy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 50,
														"src": "894:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "894:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "894:15:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "6261736532206166746572",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "924:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dc3f792eb87532198cdf0ffcb413e462e079dd9b75b40a7093e5cfd11f9ab55",
																"typeString": "literal_string \"base2 after\""
															},
															"value": "base2 after"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_9dc3f792eb87532198cdf0ffcb413e462e079dd9b75b40a7093e5cfd11f9ab55",
																"typeString": "literal_string \"base2 after\""
															}
														],
														"id": 87,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "920:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "920:18:0"
											}
										]
									},
									"functionSelector": "83197ef0",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destroy",
									"nameLocation": "789:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 76,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "814:8:0"
									},
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:0:0"
									},
									"scope": 93,
									"src": "780:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 119,
							"src": "741:208:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 94,
										"name": "Base1",
										"nameLocations": [
											"971:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 72,
										"src": "971:5:0"
									},
									"id": 95,
									"nodeType": "InheritanceSpecifier",
									"src": "971:5:0"
								},
								{
									"baseName": {
										"id": 96,
										"name": "Base2",
										"nameLocations": [
											"978:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 93,
										"src": "978:5:0"
									},
									"id": 97,
									"nodeType": "InheritanceSpecifier",
									"src": "978:5:0"
								}
							],
							"canonicalName": "Final",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 118,
							"linearizedBaseContracts": [
								118,
								93,
								72,
								51,
								30
							],
							"name": "Final",
							"nameLocation": "962:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										71,
										92
									],
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "1040:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "66696e616c206265666f7265",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbdb7f777d91efd8624b9849b3004c48fd1d5dbb203d657f21c6ecc785ee2675",
																"typeString": "literal_string \"final before\""
															},
															"value": "final before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_fbdb7f777d91efd8624b9849b3004c48fd1d5dbb203d657f21c6ecc785ee2675",
																"typeString": "literal_string \"final before\""
															}
														],
														"id": 103,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1051:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1051:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1051:19:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 107,
															"name": "Base2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1081:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Base2_$93_$",
																"typeString": "type(contract Base2)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1087:7:0",
														"memberName": "destroy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "1081:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1081:15:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "66696e616c206166746572",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1111:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c80edfa04d05b47d4ba23b89698cfb8aff2e0c7adc313b5fcbe045894844429a",
																"typeString": "literal_string \"final after\""
															},
															"value": "final after"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c80edfa04d05b47d4ba23b89698cfb8aff2e0c7adc313b5fcbe045894844429a",
																"typeString": "literal_string \"final after\""
															}
														],
														"id": 112,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1107:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1107:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1107:18:0"
											}
										]
									},
									"functionSelector": "83197ef0",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destroy",
									"nameLocation": "1000:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 101,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 99,
												"name": "Base1",
												"nameLocations": [
													"1026:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "1026:5:0"
											},
											{
												"id": 100,
												"name": "Base2",
												"nameLocations": [
													"1033:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 93,
												"src": "1033:5:0"
											}
										],
										"src": "1017:22:0"
									},
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:0"
									},
									"scope": 118,
									"src": "991:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 119,
							"src": "953:183:0",
							"usedErrors": []
						}
					],
					"src": "38:1098:0"
				},
				"id": 0
			}
		}
	}
}