{
	"id": "28cfe2e23db93c53e21f22ff7dd92e19",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"合约/_08_合约_事件.sol": {
				"content": "// SPDX-License-Identifier:GPL-3.0\r\n\r\npragma solidity ^0.8.17;\r\n\r\n/**\r\n    - Solidity 事件是EVM的日志功能之上的抽象。 \r\n        应用程序可以 **通过以太坊客户端的RPC接口订阅和监听** 这些事件。\r\n    - 事件在合约中可被继承。当他们被调用时，会使参数被存储到交易的日志中 —— 一种区块链中的特殊数据结构。 \r\n        这些日志与地址相关联，被并入区块链中，只要区块可以访问就一直存在（现在开始会被永久保存，在 Serenity 版本中可能会改动)。 \r\n        日志和事件在合约内不可直接被访问（甚至是创建日志的合约也不能访问）。\r\n    - 参考资料: \r\n        https://www.cnblogs.com/tinyxiong/p/9045274.html\r\n        https://learnblockchain.cn/2018/04/15/web3-html/\r\n\r\n */\r\n\r\ncontract ClientReceipt {\r\n    // 定义一个事件\r\n    event Deposit(address indexed from, bytes32 indexed id, uint256 value);\r\n\r\n    function deposit(bytes32 id) public payable {\r\n        // 事件使用 emit 触发事件。\r\n        // 可以使用web3.js中的函数来监听这个事件\r\n        emit Deposit(msg.sender, id, msg.value);\r\n    }\r\n}\r\n/**\r\n    js代码监听上面的Deposit事件:\r\n\r\n    // 获取合约的abi, 编译之后点击Compilation Details查看\r\n    var abi = \"从编译界面copy过来的合约的abi\";\r\n    var ClientReceipt = web3.eth.contract(abi);\r\n    // 传入合约的地址\r\n    var clientReceipt = ClientReceipt.at(\"0x1234...xlb67\");\r\n    \r\n    var depositEvent = clientReceipt.Deposit();\r\n\r\n    // 监听变化\r\n    depositEvent.watch(function(error, result) {\r\n        // 结果包含 非索引参数 以及 主题 topic\r\n        if (!error)\r\n            console.log(result);\r\n    });\r\n\r\n    // 或者通过传入回调函数，立即开始听监\r\n    var depositEvent = clientReceipt.Deposit(function(error, result) {\r\n        if (!error)\r\n            console.log(result);\r\n    });\r\n */\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"合约/_08_合约_事件.sol": {
				"ClientReceipt": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_08_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe4\\xba\\x8b\\xe4\\xbb\\xb6.sol\":835:1187  contract ClientReceipt {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_08_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe4\\xba\\x8b\\xe4\\xbb\\xb6.sol\":835:1187  contract ClientReceipt {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb214faa5\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_08_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe4\\xba\\x8b\\xe4\\xbb\\xb6.sol\":971:1184  function deposit(bytes32 id) public payable {... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_4\n      swap2\n      swap1\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      stop\n    tag_6:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_08_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe4\\xba\\x8b\\xe4\\xbb\\xb6.sol\":1162:1164  id */\n      dup1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_08_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe4\\xba\\x8b\\xe4\\xbb\\xb6.sol\":1150:1160  msg.sender */\n      caller\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_08_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe4\\xba\\x8b\\xe4\\xbb\\xb6.sol\":1142:1176  Deposit(msg.sender, id, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x19dacbf83c5de6658e14cbf7bcae5c15eca2eedecf1c66fbca928e4d351bea0f\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_08_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe4\\xba\\x8b\\xe4\\xbb\\xb6.sol\":1166:1175  msg.value */\n      callvalue\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_08_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe4\\xba\\x8b\\xe4\\xbb\\xb6.sol\":1142:1176  Deposit(msg.sender, id, msg.value) */\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_08_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe4\\xba\\x8b\\xe4\\xbb\\xb6.sol\":971:1184  function deposit(bytes32 id) public payable {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_11:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_13:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_14:\n        /* \"#utility.yul\":490:514   */\n      tag_24\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_13\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_25\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_25:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_15:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_27\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_14\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_5:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_30\n      tag_11\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":766:885   */\n    tag_29:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_31\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_15\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1102   */\n    tag_16:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1091:1096   */\n      dup2\n        /* \"#utility.yul\":1080:1096   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1108:1226   */\n    tag_17:\n        /* \"#utility.yul\":1195:1219   */\n      tag_34\n        /* \"#utility.yul\":1213:1218   */\n      dup2\n        /* \"#utility.yul\":1195:1219   */\n      tag_16\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1190:1193   */\n      dup3\n        /* \"#utility.yul\":1183:1220   */\n      mstore\n        /* \"#utility.yul\":1108:1226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1232:1454   */\n    tag_9:\n        /* \"#utility.yul\":1325:1329   */\n      0x00\n        /* \"#utility.yul\":1363:1365   */\n      0x20\n        /* \"#utility.yul\":1352:1361   */\n      dup3\n        /* \"#utility.yul\":1348:1366   */\n      add\n        /* \"#utility.yul\":1340:1366   */\n      swap1\n      pop\n        /* \"#utility.yul\":1376:1447   */\n      tag_36\n        /* \"#utility.yul\":1444:1445   */\n      0x00\n        /* \"#utility.yul\":1433:1442   */\n      dup4\n        /* \"#utility.yul\":1429:1446   */\n      add\n        /* \"#utility.yul\":1420:1426   */\n      dup5\n        /* \"#utility.yul\":1376:1447   */\n      tag_17\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1232:1454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220325d22a650372ee3180b847bfcbbbad14c39c03ef73ac0b915ef430909994feb64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610163806100206000396000f3fe60806040526004361061001e5760003560e01c8063b214faa514610023575b600080fd5b61003d600480360381019061003891906100cc565b61003f565b005b803373ffffffffffffffffffffffffffffffffffffffff167f19dacbf83c5de6658e14cbf7bcae5c15eca2eedecf1c66fbca928e4d351bea0f346040516100869190610112565b60405180910390a350565b600080fd5b6000819050919050565b6100a981610096565b81146100b457600080fd5b50565b6000813590506100c6816100a0565b92915050565b6000602082840312156100e2576100e1610091565b5b60006100f0848285016100b7565b91505092915050565b6000819050919050565b61010c816100f9565b82525050565b60006020820190506101276000830184610103565b9291505056fea2646970667358221220325d22a650372ee3180b847bfcbbbad14c39c03ef73ac0b915ef430909994feb64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB214FAA5 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x3F JUMP JUMPDEST STOP JUMPDEST DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x19DACBF83C5DE6658E14CBF7BCAE5C15ECA2EEDECF1C66FBCA928E4D351BEA0F CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9 DUP2 PUSH2 0x96 JUMP JUMPDEST DUP2 EQ PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC6 DUP2 PUSH2 0xA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2 JUMPI PUSH2 0xE1 PUSH2 0x91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF0 DUP5 DUP3 DUP6 ADD PUSH2 0xB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x5D 0x22 0xA6 POP CALLDATACOPY 0x2E 0xE3 XOR SIGNEXTEND DUP5 PUSH28 0xFCBBBAD14C39C03EF73AC0B915EF430909994FEB64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "835:352:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_24": {
									"entryPoint": 63,
									"id": 24,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1457:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1091:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:1",
														"type": ""
													}
												],
												"src": "1025:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1190:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1213:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1195:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1195:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1183:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1161:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1168:3:1",
														"type": ""
													}
												],
												"src": "1108:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1330:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1340:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1340:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1420:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1433:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1429:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1429:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1376:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1376:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1302:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1314:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1325:4:1",
														"type": ""
													}
												],
												"src": "1232:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c8063b214faa514610023575b600080fd5b61003d600480360381019061003891906100cc565b61003f565b005b803373ffffffffffffffffffffffffffffffffffffffff167f19dacbf83c5de6658e14cbf7bcae5c15eca2eedecf1c66fbca928e4d351bea0f346040516100869190610112565b60405180910390a350565b600080fd5b6000819050919050565b6100a981610096565b81146100b457600080fd5b50565b6000813590506100c6816100a0565b92915050565b6000602082840312156100e2576100e1610091565b5b60006100f0848285016100b7565b91505092915050565b6000819050919050565b61010c816100f9565b82525050565b60006020820190506101276000830184610103565b9291505056fea2646970667358221220325d22a650372ee3180b847bfcbbbad14c39c03ef73ac0b915ef430909994feb64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB214FAA5 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x3F JUMP JUMPDEST STOP JUMPDEST DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x19DACBF83C5DE6658E14CBF7BCAE5C15ECA2EEDECF1C66FBCA928E4D351BEA0F CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9 DUP2 PUSH2 0x96 JUMP JUMPDEST DUP2 EQ PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC6 DUP2 PUSH2 0xA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2 JUMPI PUSH2 0xE1 PUSH2 0x91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF0 DUP5 DUP3 DUP6 ADD PUSH2 0xB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x5D 0x22 0xA6 POP CALLDATACOPY 0x2E 0xE3 XOR SIGNEXTEND DUP5 PUSH28 0xFCBBBAD14C39C03EF73AC0B915EF430909994FEB64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "835:352:0:-:0;;;;;;;;;;;;;;;;;;;;;971:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1162:2;1150:10;1142:34;;;1166:9;1142:34;;;;;;:::i;:::-;;;;;;;;971:213;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:118::-;1195:24;1213:5;1195:24;:::i;:::-;1190:3;1183:37;1108:118;;:::o;1232:222::-;1325:4;1363:2;1352:9;1348:18;1340:26;;1376:71;1444:1;1433:9;1429:17;1420:6;1376:71;:::i;:::-;1232:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "71000",
								"executionCost": "123",
								"totalCost": "71123"
							},
							"external": {
								"deposit(bytes32)": "2311"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 835,
									"end": 1187,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 835,
									"end": 1187,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220325d22a650372ee3180b847bfcbbbad14c39c03ef73ac0b915ef430909994feb64736f6c63430008110033",
									".code": [
										{
											"begin": 835,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "B214FAA5"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 835,
											"end": 1187,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 971,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 971,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1160,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "PUSH",
											"source": 0,
											"value": "19DACBF83C5DE6658E14CBF7BCAE5C15ECA2EEDECF1C66FBCA928E4D351BEA0F"
										},
										{
											"begin": 1166,
											"end": 1175,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1142,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1176,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1108,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1195,
											"end": 1219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1219,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1195,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1444,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1376,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1447,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1376,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_08_合约_事件.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit(bytes32)": "b214faa5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"- Solidity \\u4e8b\\u4ef6\\u662fEVM\\u7684\\u65e5\\u5fd7\\u529f\\u80fd\\u4e4b\\u4e0a\\u7684\\u62bd\\u8c61\\u3002  \\u5e94\\u7528\\u7a0b\\u5e8f\\u53ef\\u4ee5 **\\u901a\\u8fc7\\u4ee5\\u592a\\u574a\\u5ba2\\u6237\\u7aef\\u7684RPC\\u63a5\\u53e3\\u8ba2\\u9605\\u548c\\u76d1\\u542c** \\u8fd9\\u4e9b\\u4e8b\\u4ef6\\u3002 - \\u4e8b\\u4ef6\\u5728\\u5408\\u7ea6\\u4e2d\\u53ef\\u88ab\\u7ee7\\u627f\\u3002\\u5f53\\u4ed6\\u4eec\\u88ab\\u8c03\\u7528\\u65f6\\uff0c\\u4f1a\\u4f7f\\u53c2\\u6570\\u88ab\\u5b58\\u50a8\\u5230\\u4ea4\\u6613\\u7684\\u65e5\\u5fd7\\u4e2d \\u2014\\u2014 \\u4e00\\u79cd\\u533a\\u5757\\u94fe\\u4e2d\\u7684\\u7279\\u6b8a\\u6570\\u636e\\u7ed3\\u6784\\u3002  \\u8fd9\\u4e9b\\u65e5\\u5fd7\\u4e0e\\u5730\\u5740\\u76f8\\u5173\\u8054\\uff0c\\u88ab\\u5e76\\u5165\\u533a\\u5757\\u94fe\\u4e2d\\uff0c\\u53ea\\u8981\\u533a\\u5757\\u53ef\\u4ee5\\u8bbf\\u95ee\\u5c31\\u4e00\\u76f4\\u5b58\\u5728\\uff08\\u73b0\\u5728\\u5f00\\u59cb\\u4f1a\\u88ab\\u6c38\\u4e45\\u4fdd\\u5b58\\uff0c\\u5728 Serenity \\u7248\\u672c\\u4e2d\\u53ef\\u80fd\\u4f1a\\u6539\\u52a8)\\u3002  \\u65e5\\u5fd7\\u548c\\u4e8b\\u4ef6\\u5728\\u5408\\u7ea6\\u5185\\u4e0d\\u53ef\\u76f4\\u63a5\\u88ab\\u8bbf\\u95ee\\uff08\\u751a\\u81f3\\u662f\\u521b\\u5efa\\u65e5\\u5fd7\\u7684\\u5408\\u7ea6\\u4e5f\\u4e0d\\u80fd\\u8bbf\\u95ee\\uff09\\u3002 - \\u53c2\\u8003\\u8d44\\u6599:  https://www.cnblogs.com/tinyxiong/p/9045274.html https://learnblockchain.cn/2018/04/15/web3-html/\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_08_\\u5408\\u7ea6_\\u4e8b\\u4ef6.sol\":\"ClientReceipt\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_08_\\u5408\\u7ea6_\\u4e8b\\u4ef6.sol\":{\"keccak256\":\"0x59202e54d043a90a854dc41a810eecc85b9de0ebfa5ccb3f9c14b28b063d6cc6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6a5751b229d02ec7a860e5e8085ee8bab17b34e55243b9359e4042332ba2d5d2\",\"dweb:/ipfs/QmYgQC5rrA45Uatz8sGaog3WbssCdsqSJuZSoc2MU7bu2X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "- Solidity 事件是EVM的日志功能之上的抽象。  应用程序可以 **通过以太坊客户端的RPC接口订阅和监听** 这些事件。 - 事件在合约中可被继承。当他们被调用时，会使参数被存储到交易的日志中 —— 一种区块链中的特殊数据结构。  这些日志与地址相关联，被并入区块链中，只要区块可以访问就一直存在（现在开始会被永久保存，在 Serenity 版本中可能会改动)。  日志和事件在合约内不可直接被访问（甚至是创建日志的合约也不能访问）。 - 参考资料:  https://www.cnblogs.com/tinyxiong/p/9045274.html https://learnblockchain.cn/2018/04/15/web3-html/",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"合约/_08_合约_事件.sol": {
				"ast": {
					"absolutePath": "合约/_08_合约_事件.sol",
					"exportedSymbols": {
						"ClientReceipt": [
							25
						]
					},
					"id": 26,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ClientReceipt",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:765:0",
								"text": "- Solidity 事件是EVM的日志功能之上的抽象。 \n应用程序可以 **通过以太坊客户端的RPC接口订阅和监听** 这些事件。\n- 事件在合约中可被继承。当他们被调用时，会使参数被存储到交易的日志中 —— 一种区块链中的特殊数据结构。 \n这些日志与地址相关联，被并入区块链中，只要区块可以访问就一直存在（现在开始会被永久保存，在 Serenity 版本中可能会改动)。 \n日志和事件在合约内不可直接被访问（甚至是创建日志的合约也不能访问）。\n- 参考资料: \nhttps://www.cnblogs.com/tinyxiong/p/9045274.html\nhttps://learnblockchain.cn/2018/04/15/web3-html/"
							},
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "ClientReceipt",
							"nameLocation": "844:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "19dacbf83c5de6658e14cbf7bcae5c15eca2eedecf1c66fbca928e4d351bea0f",
									"id": 10,
									"name": "Deposit",
									"nameLocation": "898:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "922:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "906:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "928:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 5,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "956:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:57:0"
									},
									"src": "892:71:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "1015:169:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 16,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1150:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1154:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1150:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 18,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1162:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 19,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1166:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1170:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1166:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 15,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1142:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes32,uint256)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1142:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "EmitStatement",
												"src": "1137:39:0"
											}
										]
									},
									"functionSelector": "b214faa5",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "980:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "996:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "988:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:12:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1015:0:0"
									},
									"scope": 25,
									"src": "971:213:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 26,
							"src": "835:352:0",
							"usedErrors": []
						}
					],
					"src": "38:1928:0"
				},
				"id": 0
			}
		}
	}
}