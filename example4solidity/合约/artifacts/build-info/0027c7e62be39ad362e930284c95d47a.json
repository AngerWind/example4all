{
	"id": "0027c7e62be39ad362e930284c95d47a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"合约/_11_错误和异常处理_抛出异常.sol": {
				"content": "// SPDX-License-Identifier:GPL-3.0\r\n\r\npragma solidity ^0.8.17;\r\n\r\nerror InsufficientBalance(uint256 available, uint256 required);\r\n\r\ncontract TestToken {\r\n    /** \r\n        - Solidity 中的错误（关键字error）提供了一种方便且省gas的方式来向用户解释为什么一个操作会失败。\r\n            它们可以被定义在合约（包括接口和库）内部和外部。\r\n\r\n        - 使用revert语句来抛出一个异常, 它会还原当前调用中的发生的所有变化，并将错误数据传回给调用者。\r\n            revert语句接受一个自定义错误作为不带括号的直接参数: revert CustomError(arg1, arg2);\r\n            出于向后兼容的原因，还有revert()函数，它使用圆括号并接受一个字符串:revert(); revert(“description”);\r\n\r\n        - 在EVM内部定义了两个内建的error, 分别是Panic(uint256)和Error(string)\r\n            Panic这类error的含义与java中的RuntimeException类似, 即正常的函数代码永远不会产生 Panic , \r\n            甚至是基于一个无效的外部输入时。如果发生了，那就说明出现了一个需要你修复的 bug。\r\n            Error这类error的含义与java中的非RuntimeException类似\r\n\r\n        - 使用自定义错误实例通常比使用字符串描述便宜得多，因为你可以使用错误名称来描述它，该名称仅用4个字节编码。\r\n\r\n        - 错误不能被重写或覆盖，但是可以继承。\r\n        - 在内部， Solidity 对异常执行回退操作（指令 0xfd ），从而让 EVM 回退对状态所做的所有更改。\r\n    */\r\n    function check(uint256 available, uint256 required) public pure {\r\n        // 检查可用余额是否小于要求的余额\r\n        if (available < required) {\r\n            // 抛出自定义的异常\r\n            revert InsufficientBalance({\r\n                available: available,\r\n                required: required\r\n            });\r\n        } else if (available == required) {\r\n            // 抛出内建的Error异常\r\n            revert(unicode\"余额不足啦....\");\r\n        } else {\r\n            // do something...\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"合约/_11_错误和异常处理_抛出异常.sol": {
				"TestToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								}
							],
							"name": "check",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":133:2167  contract TestToken {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":133:2167  contract TestToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8fefd8ea\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1622:2164  function check(uint256 available, uint256 required) public pure {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1771:1779  required */\n      dup1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1759:1768  available */\n      dup3\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1759:1779  available < required */\n      lt\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1755:2157  if (available < required) {... */\n      iszero\n      tag_9\n      jumpi\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1894:1903  available */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1932:1940  required */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1844:1956  InsufficientBalance({... */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_10\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1755:2157  if (available < required) {... */\n    tag_9:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1991:1999  required */\n      dup1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1978:1987  available */\n      dup3\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1978:1999  available == required */\n      sub\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1974:2157  if (available == required) {... */\n      tag_13\n      jumpi\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":2059:2095  revert(unicode\"余额不足啦....\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_14\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1974:2157  if (available == required) {... */\n    tag_13:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_11_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe5\\x92\\x8c\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_\\xe6\\x8a\\x9b\\xe5\\x87\\xba\\xe5\\xbc\\x82\\xe5\\xb8\\xb8.sol\":1622:2164  function check(uint256 available, uint256 required) public pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_18:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_20:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_21:\n        /* \"#utility.yul\":490:514   */\n      tag_33\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_20\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_34\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_34:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_22:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_36\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_21\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_6:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_39\n      tag_18\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":783:902   */\n    tag_38:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_40\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_22\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_41\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_22\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1288   */\n    tag_23:\n        /* \"#utility.yul\":1257:1281   */\n      tag_43\n        /* \"#utility.yul\":1275:1280   */\n      dup2\n        /* \"#utility.yul\":1257:1281   */\n      tag_20\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1252:1255   */\n      dup3\n        /* \"#utility.yul\":1245:1282   */\n      mstore\n        /* \"#utility.yul\":1170:1288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1626   */\n    tag_11:\n        /* \"#utility.yul\":1415:1419   */\n      0x00\n        /* \"#utility.yul\":1453:1455   */\n      0x40\n        /* \"#utility.yul\":1442:1451   */\n      dup3\n        /* \"#utility.yul\":1438:1456   */\n      add\n        /* \"#utility.yul\":1430:1456   */\n      swap1\n      pop\n        /* \"#utility.yul\":1466:1537   */\n      tag_45\n        /* \"#utility.yul\":1534:1535   */\n      0x00\n        /* \"#utility.yul\":1523:1532   */\n      dup4\n        /* \"#utility.yul\":1519:1536   */\n      add\n        /* \"#utility.yul\":1510:1516   */\n      dup6\n        /* \"#utility.yul\":1466:1537   */\n      tag_23\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1547:1619   */\n      tag_46\n        /* \"#utility.yul\":1615:1617   */\n      0x20\n        /* \"#utility.yul\":1604:1613   */\n      dup4\n        /* \"#utility.yul\":1600:1618   */\n      add\n        /* \"#utility.yul\":1591:1597   */\n      dup5\n        /* \"#utility.yul\":1547:1619   */\n      tag_23\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1294:1626   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1632:1801   */\n    tag_24:\n        /* \"#utility.yul\":1716:1727   */\n      0x00\n        /* \"#utility.yul\":1750:1756   */\n      dup3\n        /* \"#utility.yul\":1745:1748   */\n      dup3\n        /* \"#utility.yul\":1738:1757   */\n      mstore\n        /* \"#utility.yul\":1790:1794   */\n      0x20\n        /* \"#utility.yul\":1785:1788   */\n      dup3\n        /* \"#utility.yul\":1781:1795   */\n      add\n        /* \"#utility.yul\":1766:1795   */\n      swap1\n      pop\n        /* \"#utility.yul\":1632:1801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1807:2021   */\n    tag_25:\n        /* \"#utility.yul\":1947:2013   */\n      0xe4bd99e9a29de4b88de8b6b3e595a62e2e2e2e00000000000000000000000000\n        /* \"#utility.yul\":1943:1944   */\n      0x00\n        /* \"#utility.yul\":1935:1941   */\n      dup3\n        /* \"#utility.yul\":1931:1945   */\n      add\n        /* \"#utility.yul\":1924:2014   */\n      mstore\n        /* \"#utility.yul\":1807:2021   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2027:2393   */\n    tag_26:\n        /* \"#utility.yul\":2169:2172   */\n      0x00\n        /* \"#utility.yul\":2190:2257   */\n      tag_50\n        /* \"#utility.yul\":2254:2256   */\n      0x13\n        /* \"#utility.yul\":2249:2252   */\n      dup4\n        /* \"#utility.yul\":2190:2257   */\n      tag_24\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2183:2257   */\n      swap2\n      pop\n        /* \"#utility.yul\":2266:2359   */\n      tag_51\n        /* \"#utility.yul\":2355:2358   */\n      dup3\n        /* \"#utility.yul\":2266:2359   */\n      tag_25\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":2384:2386   */\n      0x20\n        /* \"#utility.yul\":2379:2382   */\n      dup3\n        /* \"#utility.yul\":2375:2387   */\n      add\n        /* \"#utility.yul\":2368:2387   */\n      swap1\n      pop\n        /* \"#utility.yul\":2027:2393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2399:2818   */\n    tag_15:\n        /* \"#utility.yul\":2565:2569   */\n      0x00\n        /* \"#utility.yul\":2603:2605   */\n      0x20\n        /* \"#utility.yul\":2592:2601   */\n      dup3\n        /* \"#utility.yul\":2588:2606   */\n      add\n        /* \"#utility.yul\":2580:2606   */\n      swap1\n      pop\n        /* \"#utility.yul\":2652:2661   */\n      dup2\n        /* \"#utility.yul\":2646:2650   */\n      dup2\n        /* \"#utility.yul\":2642:2662   */\n      sub\n        /* \"#utility.yul\":2638:2639   */\n      0x00\n        /* \"#utility.yul\":2627:2636   */\n      dup4\n        /* \"#utility.yul\":2623:2640   */\n      add\n        /* \"#utility.yul\":2616:2663   */\n      mstore\n        /* \"#utility.yul\":2680:2811   */\n      tag_53\n        /* \"#utility.yul\":2806:2810   */\n      dup2\n        /* \"#utility.yul\":2680:2811   */\n      tag_26\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2672:2811   */\n      swap1\n      pop\n        /* \"#utility.yul\":2399:2818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220764325331c38464db2317bad15f01277d74b86c709ec0a0c4cfbf623dcb73c8364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061023f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638fefd8ea14610030575b600080fd5b61004a60048036038101906100459190610114565b61004c565b005b808210156100935781816040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161008a929190610163565b60405180910390fd5b8082036100d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cc906101e9565b60405180910390fd5b5050565b600080fd5b6000819050919050565b6100f1816100de565b81146100fc57600080fd5b50565b60008135905061010e816100e8565b92915050565b6000806040838503121561012b5761012a6100d9565b5b6000610139858286016100ff565b925050602061014a858286016100ff565b9150509250929050565b61015d816100de565b82525050565b60006040820190506101786000830185610154565b6101856020830184610154565b9392505050565b600082825260208201905092915050565b7fe4bd99e9a29de4b88de8b6b3e595a62e2e2e2e00000000000000000000000000600082015250565b60006101d360138361018c565b91506101de8261019d565b602082019050919050565b60006020820190508181036000830152610202816101c6565b905091905056fea2646970667358221220764325331c38464db2317bad15f01277d74b86c709ec0a0c4cfbf623dcb73c8364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8FEFD8EA EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x114 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x93 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A SWAP3 SWAP2 SWAP1 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB PUSH2 0xD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xDE JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B JUMPI PUSH2 0x12A PUSH2 0xD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x139 DUP6 DUP3 DUP7 ADD PUSH2 0xFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A DUP6 DUP3 DUP7 ADD PUSH2 0xFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D DUP2 PUSH2 0xDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x178 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x185 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x154 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE4BD99E9A29DE4B88DE8B6B3E595A62E2E2E2E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D3 PUSH1 0x13 DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE DUP3 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x202 DUP2 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x4325331C38464DB2317BAD15F01277D74B86C709EC0A0C 0x4C 0xFB 0xF6 0x23 0xDC 0xB7 EXTCODECOPY DUP4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "133:2034:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@check_36": {
									"entryPoint": 76,
									"id": 36,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2821:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1235:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1252:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1275:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1257:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1257:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1223:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1230:3:1",
														"type": ""
													}
												],
												"src": "1170:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1420:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1430:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1442:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1453:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1430:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1510:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1523:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1534:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1466:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1591:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1604:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1615:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1600:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1547:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1547:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1396:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1404:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1415:4:1",
														"type": ""
													}
												],
												"src": "1294:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1728:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1745:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1750:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1738:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1766:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1785:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1790:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1781:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1766:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1700:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1705:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1716:11:1",
														"type": ""
													}
												],
												"src": "1632:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1913:108:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1935:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1943:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1931:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1931:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1947:66:1",
																		"type": "",
																		"value": "0xe4bd99e9a29de4b88de8b6b3e595a62e2e2e2e00000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1924:90:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1924:90:1"
														}
													]
												},
												"name": "store_literal_in_memory_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1905:6:1",
														"type": ""
													}
												],
												"src": "1807:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2173:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2183:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2249:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2254:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2190:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2190:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2183:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f",
																	"nodeType": "YulIdentifier",
																	"src": "2266:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2266:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2368:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2379:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2375:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2375:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2368:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2161:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2169:3:1",
														"type": ""
													}
												],
												"src": "2027:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2570:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2580:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2592:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2603:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2588:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2580:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2638:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2646:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2616:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2672:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2806:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2680:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2672:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2550:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2565:4:1",
														"type": ""
													}
												],
												"src": "2399:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f(memPtr) {\n\n        mstore(add(memPtr, 0), 0xe4bd99e9a29de4b88de8b6b3e595a62e2e2e2e00000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638fefd8ea14610030575b600080fd5b61004a60048036038101906100459190610114565b61004c565b005b808210156100935781816040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161008a929190610163565b60405180910390fd5b8082036100d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cc906101e9565b60405180910390fd5b5050565b600080fd5b6000819050919050565b6100f1816100de565b81146100fc57600080fd5b50565b60008135905061010e816100e8565b92915050565b6000806040838503121561012b5761012a6100d9565b5b6000610139858286016100ff565b925050602061014a858286016100ff565b9150509250929050565b61015d816100de565b82525050565b60006040820190506101786000830185610154565b6101856020830184610154565b9392505050565b600082825260208201905092915050565b7fe4bd99e9a29de4b88de8b6b3e595a62e2e2e2e00000000000000000000000000600082015250565b60006101d360138361018c565b91506101de8261019d565b602082019050919050565b60006020820190508181036000830152610202816101c6565b905091905056fea2646970667358221220764325331c38464db2317bad15f01277d74b86c709ec0a0c4cfbf623dcb73c8364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8FEFD8EA EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x114 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x93 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A SWAP3 SWAP2 SWAP1 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB PUSH2 0xD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xDE JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B JUMPI PUSH2 0x12A PUSH2 0xD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x139 DUP6 DUP3 DUP7 ADD PUSH2 0xFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A DUP6 DUP3 DUP7 ADD PUSH2 0xFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D DUP2 PUSH2 0xDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x178 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x185 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x154 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE4BD99E9A29DE4B88DE8B6B3E595A62E2E2E2E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D3 PUSH1 0x13 DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE DUP3 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x202 DUP2 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x4325331C38464DB2317BAD15F01277D74B86C709EC0A0C 0x4C 0xFB 0xF6 0x23 0xDC 0xB7 EXTCODECOPY DUP4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "133:2034:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:542;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1771:8;1759:9;:20;1755:402;;;1894:9;1932:8;1844:112;;;;;;;;;;;;:::i;:::-;;;;;;;;1755:402;1991:8;1978:9;:21;1974:183;;2059:36;;;;;;;;;;:::i;:::-;;;;;;;;1974:183;1622:542;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:332::-;1415:4;1453:2;1442:9;1438:18;1430:26;;1466:71;1534:1;1523:9;1519:17;1510:6;1466:71;:::i;:::-;1547:72;1615:2;1604:9;1600:18;1591:6;1547:72;:::i;:::-;1294:332;;;;;:::o;1632:169::-;1716:11;1750:6;1745:3;1738:19;1790:4;1785:3;1781:14;1766:29;;1632:169;;;;:::o;1807:214::-;1947:66;1943:1;1935:6;1931:14;1924:90;1807:214;:::o;2027:366::-;2169:3;2190:67;2254:2;2249:3;2190:67;:::i;:::-;2183:74;;2266:93;2355:3;2266:93;:::i;:::-;2384:2;2379:3;2375:12;2368:19;;2027:366;;;:::o;2399:419::-;2565:4;2603:2;2592:9;2588:18;2580:26;;2652:9;2646:4;2642:20;2638:1;2627:9;2623:17;2616:47;2680:131;2806:4;2680:131;:::i;:::-;2672:139;;2399:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "115000",
								"executionCost": "159",
								"totalCost": "115159"
							},
							"external": {
								"check(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 2167,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 2167,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220764325331c38464db2317bad15f01277d74b86c709ec0a0c4cfbf623dcb73c8364736f6c63430008110033",
									".code": [
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "8FEFD8EA"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 2167,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1622,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1622,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1779,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 2157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1755,
											"end": 2157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1844,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 2157,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1755,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1978,
											"end": 1999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1974,
											"end": 2157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2059,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2157,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1974,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1534,
											"end": 1535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1516,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1466,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1615,
											"end": 1617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1547,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1619,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1547,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1801,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1632,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1801,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1807,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "E4BD99E9A29DE4B88DE8B6B3E595A62E2E2E2E00000000000000000000000000"
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 2014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 2021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2393,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2027,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2249,
											"end": 2252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2190,
											"end": 2257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2257,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2190,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2266,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2359,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2266,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2818,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2399,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2636,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2680,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2811,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2680,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_11_错误和异常处理_抛出异常.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"check(uint256,uint256)": "8fefd8ea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"check(uint256,uint256)\":{\"notice\":\"- Solidity \\u4e2d\\u7684\\u9519\\u8bef\\uff08\\u5173\\u952e\\u5b57error\\uff09\\u63d0\\u4f9b\\u4e86\\u4e00\\u79cd\\u65b9\\u4fbf\\u4e14\\u7701gas\\u7684\\u65b9\\u5f0f\\u6765\\u5411\\u7528\\u6237\\u89e3\\u91ca\\u4e3a\\u4ec0\\u4e48\\u4e00\\u4e2a\\u64cd\\u4f5c\\u4f1a\\u5931\\u8d25\\u3002 \\u5b83\\u4eec\\u53ef\\u4ee5\\u88ab\\u5b9a\\u4e49\\u5728\\u5408\\u7ea6\\uff08\\u5305\\u62ec\\u63a5\\u53e3\\u548c\\u5e93\\uff09\\u5185\\u90e8\\u548c\\u5916\\u90e8\\u3002 - \\u4f7f\\u7528revert\\u8bed\\u53e5\\u6765\\u629b\\u51fa\\u4e00\\u4e2a\\u5f02\\u5e38, \\u5b83\\u4f1a\\u8fd8\\u539f\\u5f53\\u524d\\u8c03\\u7528\\u4e2d\\u7684\\u53d1\\u751f\\u7684\\u6240\\u6709\\u53d8\\u5316\\uff0c\\u5e76\\u5c06\\u9519\\u8bef\\u6570\\u636e\\u4f20\\u56de\\u7ed9\\u8c03\\u7528\\u8005\\u3002 revert\\u8bed\\u53e5\\u63a5\\u53d7\\u4e00\\u4e2a\\u81ea\\u5b9a\\u4e49\\u9519\\u8bef\\u4f5c\\u4e3a\\u4e0d\\u5e26\\u62ec\\u53f7\\u7684\\u76f4\\u63a5\\u53c2\\u6570: revert CustomError(arg1, arg2); \\u51fa\\u4e8e\\u5411\\u540e\\u517c\\u5bb9\\u7684\\u539f\\u56e0\\uff0c\\u8fd8\\u6709revert()\\u51fd\\u6570\\uff0c\\u5b83\\u4f7f\\u7528\\u5706\\u62ec\\u53f7\\u5e76\\u63a5\\u53d7\\u4e00\\u4e2a\\u5b57\\u7b26\\u4e32:revert(); revert(\\u201cdescription\\u201d); - \\u5728EVM\\u5185\\u90e8\\u5b9a\\u4e49\\u4e86\\u4e24\\u4e2a\\u5185\\u5efa\\u7684error, \\u5206\\u522b\\u662fPanic(uint256)\\u548cError(string) Panic\\u8fd9\\u7c7berror\\u7684\\u542b\\u4e49\\u4e0ejava\\u4e2d\\u7684RuntimeException\\u7c7b\\u4f3c, \\u5373\\u6b63\\u5e38\\u7684\\u51fd\\u6570\\u4ee3\\u7801\\u6c38\\u8fdc\\u4e0d\\u4f1a\\u4ea7\\u751f Panic ,  \\u751a\\u81f3\\u662f\\u57fa\\u4e8e\\u4e00\\u4e2a\\u65e0\\u6548\\u7684\\u5916\\u90e8\\u8f93\\u5165\\u65f6\\u3002\\u5982\\u679c\\u53d1\\u751f\\u4e86\\uff0c\\u90a3\\u5c31\\u8bf4\\u660e\\u51fa\\u73b0\\u4e86\\u4e00\\u4e2a\\u9700\\u8981\\u4f60\\u4fee\\u590d\\u7684 bug\\u3002 Error\\u8fd9\\u7c7berror\\u7684\\u542b\\u4e49\\u4e0ejava\\u4e2d\\u7684\\u975eRuntimeException\\u7c7b\\u4f3c - \\u4f7f\\u7528\\u81ea\\u5b9a\\u4e49\\u9519\\u8bef\\u5b9e\\u4f8b\\u901a\\u5e38\\u6bd4\\u4f7f\\u7528\\u5b57\\u7b26\\u4e32\\u63cf\\u8ff0\\u4fbf\\u5b9c\\u5f97\\u591a\\uff0c\\u56e0\\u4e3a\\u4f60\\u53ef\\u4ee5\\u4f7f\\u7528\\u9519\\u8bef\\u540d\\u79f0\\u6765\\u63cf\\u8ff0\\u5b83\\uff0c\\u8be5\\u540d\\u79f0\\u4ec5\\u75284\\u4e2a\\u5b57\\u8282\\u7f16\\u7801\\u3002 - \\u9519\\u8bef\\u4e0d\\u80fd\\u88ab\\u91cd\\u5199\\u6216\\u8986\\u76d6\\uff0c\\u4f46\\u662f\\u53ef\\u4ee5\\u7ee7\\u627f\\u3002 - \\u5728\\u5185\\u90e8\\uff0c Solidity \\u5bf9\\u5f02\\u5e38\\u6267\\u884c\\u56de\\u9000\\u64cd\\u4f5c\\uff08\\u6307\\u4ee4 0xfd \\uff09\\uff0c\\u4ece\\u800c\\u8ba9 EVM \\u56de\\u9000\\u5bf9\\u72b6\\u6001\\u6240\\u505a\\u7684\\u6240\\u6709\\u66f4\\u6539\\u3002\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_11_\\u9519\\u8bef\\u548c\\u5f02\\u5e38\\u5904\\u7406_\\u629b\\u51fa\\u5f02\\u5e38.sol\":\"TestToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_11_\\u9519\\u8bef\\u548c\\u5f02\\u5e38\\u5904\\u7406_\\u629b\\u51fa\\u5f02\\u5e38.sol\":{\"keccak256\":\"0x046c00787600bcd2d3bb3eafb1fab0eec7c84f891f793f75d6acf1b96b30d2d3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://16995bf333d94b3c4869113f10a52be701061c2693de94b15585b40a41cb8c9d\",\"dweb:/ipfs/QmaBi34ebsPPwxEBuoRinuZCgPHfzVkg64dzFY18vKCk32\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"check(uint256,uint256)": {
								"notice": "- Solidity 中的错误（关键字error）提供了一种方便且省gas的方式来向用户解释为什么一个操作会失败。 它们可以被定义在合约（包括接口和库）内部和外部。 - 使用revert语句来抛出一个异常, 它会还原当前调用中的发生的所有变化，并将错误数据传回给调用者。 revert语句接受一个自定义错误作为不带括号的直接参数: revert CustomError(arg1, arg2); 出于向后兼容的原因，还有revert()函数，它使用圆括号并接受一个字符串:revert(); revert(“description”); - 在EVM内部定义了两个内建的error, 分别是Panic(uint256)和Error(string) Panic这类error的含义与java中的RuntimeException类似, 即正常的函数代码永远不会产生 Panic ,  甚至是基于一个无效的外部输入时。如果发生了，那就说明出现了一个需要你修复的 bug。 Error这类error的含义与java中的非RuntimeException类似 - 使用自定义错误实例通常比使用字符串描述便宜得多，因为你可以使用错误名称来描述它，该名称仅用4个字节编码。 - 错误不能被重写或覆盖，但是可以继承。 - 在内部， Solidity 对异常执行回退操作（指令 0xfd ），从而让 EVM 回退对状态所做的所有更改。"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"合约/_11_错误和异常处理_抛出异常.sol": {
				"ast": {
					"absolutePath": "合约/_11_错误和异常处理_抛出异常.sol",
					"exportedSymbols": {
						"InsufficientBalance": [
							7
						],
						"TestToken": [
							37
						]
					},
					"id": 38,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:0"
						},
						{
							"errorSelector": "cf479181",
							"id": 7,
							"name": "InsufficientBalance",
							"nameLocation": "72:19:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 6,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3,
										"mutability": "mutable",
										"name": "available",
										"nameLocation": "100:9:0",
										"nodeType": "VariableDeclaration",
										"scope": 7,
										"src": "92:17:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "92:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 5,
										"mutability": "mutable",
										"name": "required",
										"nameLocation": "119:8:0",
										"nodeType": "VariableDeclaration",
										"scope": 7,
										"src": "111:16:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 4,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "91:37:0"
							},
							"src": "66:63:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TestToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 37,
							"linearizedBaseContracts": [
								37
							],
							"name": "TestToken",
							"nameLocation": "142:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "1686:478:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 15,
														"name": "available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1759:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 16,
														"name": "required",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1759:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 24,
															"name": "available",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1978:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 25,
															"name": "required",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1991:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1978:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 32,
														"nodeType": "Block",
														"src": "2113:44:0",
														"statements": []
													},
													"id": 33,
													"nodeType": "IfStatement",
													"src": "1974:183:0",
													"trueBody": {
														"id": 31,
														"nodeType": "Block",
														"src": "2001:106:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "e4bd99e9a29de4b88de8b6b3e595a62e2e2e2e",
																			"id": 28,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "unicodeString",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2066:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f",
																				"typeString": "literal_string hex\"e4bd99e9a29de4b88de8b6b3e595a62e2e2e2e\""
																			},
																			"value": "余额不足啦...."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_27d474dcaa129f5d38df9aa44779f591d1cabcf527a66146ad7cf5a90c59636f",
																				"typeString": "literal_string hex\"e4bd99e9a29de4b88de8b6b3e595a62e2e2e2e\""
																			}
																		],
																		"id": 27,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "2059:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2059:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 30,
																"nodeType": "ExpressionStatement",
																"src": "2059:36:0"
															}
														]
													}
												},
												"id": 34,
												"nodeType": "IfStatement",
												"src": "1755:402:0",
												"trueBody": {
													"id": 23,
													"nodeType": "Block",
													"src": "1781:187:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 19,
																		"name": "available",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "1894:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 20,
																		"name": "required",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "1932:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 18,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "1844:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"1883:9:0",
																	"1922:8:0"
																],
																"names": [
																	"available",
																	"required"
																],
																"nodeType": "FunctionCall",
																"src": "1844:112:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 22,
															"nodeType": "RevertStatement",
															"src": "1837:119:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "159:1457:0",
										"text": "- Solidity 中的错误（关键字error）提供了一种方便且省gas的方式来向用户解释为什么一个操作会失败。\n它们可以被定义在合约（包括接口和库）内部和外部。\n- 使用revert语句来抛出一个异常, 它会还原当前调用中的发生的所有变化，并将错误数据传回给调用者。\nrevert语句接受一个自定义错误作为不带括号的直接参数: revert CustomError(arg1, arg2);\n出于向后兼容的原因，还有revert()函数，它使用圆括号并接受一个字符串:revert(); revert(“description”);\n- 在EVM内部定义了两个内建的error, 分别是Panic(uint256)和Error(string)\nPanic这类error的含义与java中的RuntimeException类似, 即正常的函数代码永远不会产生 Panic , \n甚至是基于一个无效的外部输入时。如果发生了，那就说明出现了一个需要你修复的 bug。\nError这类error的含义与java中的非RuntimeException类似\n- 使用自定义错误实例通常比使用字符串描述便宜得多，因为你可以使用错误名称来描述它，该名称仅用4个字节编码。\n- 错误不能被重写或覆盖，但是可以继承。\n- 在内部， Solidity 对异常执行回退操作（指令 0xfd ），从而让 EVM 回退对状态所做的所有更改。"
									},
									"functionSelector": "8fefd8ea",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "check",
									"nameLocation": "1631:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "available",
												"nameLocation": "1645:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1637:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "required",
												"nameLocation": "1664:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1656:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:37:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1686:0:0"
									},
									"scope": 37,
									"src": "1622:542:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 38,
							"src": "133:2034:0",
							"usedErrors": [
								7
							]
						}
					],
					"src": "38:2131:0"
				},
				"id": 0
			}
		}
	}
}