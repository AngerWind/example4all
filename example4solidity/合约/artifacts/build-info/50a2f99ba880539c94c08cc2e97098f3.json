{
	"id": "50a2f99ba880539c94c08cc2e97098f3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"合约/_14_合约_继承_多重继承与线性化.sol": {
				"content": "// SPDX-License-Identifier:GPL-3.0\r\n\r\npragma solidity ^0.8.17;\r\n\r\n/**\r\n    在多重继承中, 一个子类可以有多个父类, 父类有可以有多个父类, 最终构成一个DAG图\r\n    如下图:  O\r\n            A -> O\r\n            B -> O\r\n            C -> O\r\n            K1 -> B, A\r\n            K2 -> C, A\r\n            Z -> K2, K1\r\n        1. 在构造的时候, 不能同时构造两个同层级的父类, 那么应该按照什么顺序来构造父类对象\r\n        2. 在调用super.foo()的时候, 这里的super到底是指的哪一个\r\n        3. 那么在调用方法的时候, 子类往上寻找父类方法的顺序是什么？\r\n    \r\n    在python中使用C3 线性化来确定方法的调用顺序，也叫方法解析顺序（Method Resolution Order，MRO）\r\n    约定以下符号\r\n        - 如果A继承自B,C, 记为A->B, C\r\n        - merge()表示merge算法\r\n        - L(A)表示A的线性化结果的简写\r\n        - [B, C, D] : 某个类的线性化结果的具体值\r\n    利用以上符号，该算法归纳如下：\r\n        - 对于继承单个基类的情况 A->B, 则有L(A) = [A, B]\r\n        - 对于继承多个基类的情况 A->B,C,D,则有 L(A) = [A] + merge(L(B), L(C), L(D) , [B,C,D])\r\n        - 对于merge([X], [Y], [Z]),遍历XYZ序列的第一个元素，若该元素是其他序列中的第一个元素，或不在其他序列出现，\r\n            则从所有序列中删除这个元素，合并到MRO中，继续遍历X的下一个元素；否则保留该元素，并查看下一个序列的第一个元素是否符合规则。\r\n        - 直到merge操作的序列为空\r\n        - 如果merge操作的序列无法为空，则说明不合法。\r\n\r\n    在python中, 确定Z的父类方法调用顺序的算法计算如下:\r\n    L(O) := [O]\r\nL(A) := [A] + merge(L(O), [O])\r\n      = [A] + merge([O], [O])\r\n      = [A, O]\r\n\r\nL(B) := [B, O]//计算过程类似L(A)\r\nL(C) := [C, O]//计算过程类似L(A)\r\n\r\nL(K1) := [K1] + merge(L(B), L(A), [B, A])\r\n       = [K1] + merge([B, O], [A, O], [B, A])\r\n       //取一个序列的第一个元素，是其他序列中的第一个元素，或不在其他序列出现，符合条件是B\r\n       = [K1, B] + merge([O], [A, O], [A])\r\n       = [K1, B, A] + merge([O], [O])\r\n       = [K1, B, A, O]\r\n\r\n L(K2) := [K2, C, A, O]//计算过程类似L(K1)\r\n\r\n L(Z) := [Z] + merge(L(K2), L(K1), [K2, K1])\r\n       = [Z] + merge([K2, C, A, O], [K1, B, A, O], [K2, K1])\r\n       = [Z, K2] + merge([C, A, O], [K1, B, A, O], [K1])\r\n       = [Z, K2, C] + merge([A, O], [K1, B, A, O], [K1])\r\n       = [Z, K2, C, K1] + merge([A, O], [B, A, O])\r\n       = [Z, K2, C, K1, B] + merge([A, O], [A, O])\r\n       = [Z, K2, C, K1, B, A] + merge([O], [O])\r\n       = [Z, K2, C, K1, B, A, O]\r\n\r\n*/\r\n\r\ncontract O {\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    event Log(string message);\r\n\r\n    function log(string memory message) internal {\r\n        emit Log(message);\r\n    }\r\n\r\n    address payable owner;\r\n}\r\n\r\ncontract A is O {\r\n    constructor(){\r\n        log(\"A constrctor\");\r\n    }\r\n    function foo() public virtual {\r\n        log(\"foo\");\r\n    }\r\n}\r\n\r\ncontract B is A {\r\n    constructor() {\r\n        log(\"B constrctor\");\r\n    }\r\n    function foo() public virtual override {\r\n        /* 清除操作 1 */\r\n        log(\"B before\");\r\n        super.foo();\r\n        log(\"B after\");\r\n    }\r\n}\r\n\r\ncontract E is A {\r\n    constructor() {\r\n        log(\"E constrctor\");\r\n    }\r\n    function foo() public virtual override {\r\n        /* 清除操作 2 */\r\n        log(\"E before\");\r\n        super.foo();\r\n        log(\"E after\");\r\n    }\r\n}\r\n\r\ncontract C is E {\r\n    constructor() {\r\n        log(\"C constrctor\");\r\n    }\r\n    function foo() public virtual override {\r\n        /* 清除操作 2 */\r\n        log(\"C before\");\r\n        super.foo();\r\n        log(\"C after\");\r\n    }\r\n}\r\n\r\n\r\ncontract D is B, C {\r\n    constructor() {\r\n        log(\"D constrctor\");  // 构造顺序为: ABECD\r\n    }\r\n    // dceb foo becd\r\n    function foo() public override(B, C) {\r\n        log(\"D before\");\r\n        super.foo();\r\n        log(\"D after\");\r\n    } \r\n    // 查找foo函数的顺序为: \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"合约/_14_合约_继承_多重继承与线性化.sol": {
				"A": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "foo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2996:3138  contract A is O {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3019:3070  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2817:2827  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2806  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2828  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  tag_6\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4120636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3046  log */\n  shl(0x20, tag_7)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2996:3138  contract A is O {... */\n  jump(tag_8)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\ntag_7:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n  dup2\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  mload(0x40)\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_12:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:281   */\ntag_13:\n    /* \"#utility.yul\":196:207   */\n  0x00\n    /* \"#utility.yul\":230:236   */\n  dup3\n    /* \"#utility.yul\":225:228   */\n  dup3\n    /* \"#utility.yul\":218:237   */\n  mstore\n    /* \"#utility.yul\":270:274   */\n  0x20\n    /* \"#utility.yul\":265:268   */\n  dup3\n    /* \"#utility.yul\":261:275   */\n  add\n    /* \"#utility.yul\":246:275   */\n  swap1\n  pop\n    /* \"#utility.yul\":112:281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":287:533   */\ntag_14:\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":378:491   */\ntag_21:\n    /* \"#utility.yul\":392:398   */\n  dup4\n    /* \"#utility.yul\":389:390   */\n  dup2\n    /* \"#utility.yul\":386:399   */\n  lt\n    /* \"#utility.yul\":378:491   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":477:478   */\n  dup1\n    /* \"#utility.yul\":472:475   */\n  dup3\n    /* \"#utility.yul\":468:479   */\n  add\n    /* \"#utility.yul\":462:480   */\n  mload\n    /* \"#utility.yul\":458:459   */\n  dup2\n    /* \"#utility.yul\":453:456   */\n  dup5\n    /* \"#utility.yul\":449:460   */\n  add\n    /* \"#utility.yul\":442:481   */\n  mstore\n    /* \"#utility.yul\":414:416   */\n  0x20\n    /* \"#utility.yul\":411:412   */\n  dup2\n    /* \"#utility.yul\":407:417   */\n  add\n    /* \"#utility.yul\":402:417   */\n  swap1\n  pop\n    /* \"#utility.yul\":378:491   */\n  jump(tag_21)\ntag_23:\n    /* \"#utility.yul\":525:526   */\n  0x00\n    /* \"#utility.yul\":516:522   */\n  dup5\n    /* \"#utility.yul\":511:514   */\n  dup5\n    /* \"#utility.yul\":507:523   */\n  add\n    /* \"#utility.yul\":500:527   */\n  mstore\n    /* \"#utility.yul\":349:533   */\n  pop\n    /* \"#utility.yul\":287:533   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":539:641   */\ntag_15:\n    /* \"#utility.yul\":580:586   */\n  0x00\n    /* \"#utility.yul\":631:633   */\n  0x1f\n    /* \"#utility.yul\":627:634   */\n  not\n    /* \"#utility.yul\":622:624   */\n  0x1f\n    /* \"#utility.yul\":615:620   */\n  dup4\n    /* \"#utility.yul\":611:625   */\n  add\n    /* \"#utility.yul\":607:635   */\n  and\n    /* \"#utility.yul\":597:635   */\n  swap1\n  pop\n    /* \"#utility.yul\":539:641   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":647:1024   */\ntag_16:\n    /* \"#utility.yul\":735:738   */\n  0x00\n    /* \"#utility.yul\":763:802   */\n  tag_26\n    /* \"#utility.yul\":796:801   */\n  dup3\n    /* \"#utility.yul\":763:802   */\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":818:889   */\n  tag_27\n    /* \"#utility.yul\":882:888   */\n  dup2\n    /* \"#utility.yul\":877:880   */\n  dup6\n    /* \"#utility.yul\":818:889   */\n  tag_13\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":811:889   */\n  swap4\n  pop\n    /* \"#utility.yul\":898:963   */\n  tag_28\n    /* \"#utility.yul\":956:962   */\n  dup2\n    /* \"#utility.yul\":951:954   */\n  dup6\n    /* \"#utility.yul\":944:948   */\n  0x20\n    /* \"#utility.yul\":937:942   */\n  dup7\n    /* \"#utility.yul\":933:949   */\n  add\n    /* \"#utility.yul\":898:963   */\n  tag_14\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":988:1017   */\n  tag_29\n    /* \"#utility.yul\":1010:1016   */\n  dup2\n    /* \"#utility.yul\":988:1017   */\n  tag_15\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":983:986   */\n  dup5\n    /* \"#utility.yul\":979:1018   */\n  add\n    /* \"#utility.yul\":972:1018   */\n  swap2\n  pop\n    /* \"#utility.yul\":739:1024   */\n  pop\n    /* \"#utility.yul\":647:1024   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1030:1343   */\ntag_11:\n    /* \"#utility.yul\":1143:1147   */\n  0x00\n    /* \"#utility.yul\":1181:1183   */\n  0x20\n    /* \"#utility.yul\":1170:1179   */\n  dup3\n    /* \"#utility.yul\":1166:1184   */\n  add\n    /* \"#utility.yul\":1158:1184   */\n  swap1\n  pop\n    /* \"#utility.yul\":1230:1239   */\n  dup2\n    /* \"#utility.yul\":1224:1228   */\n  dup2\n    /* \"#utility.yul\":1220:1240   */\n  sub\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1205:1214   */\n  dup4\n    /* \"#utility.yul\":1201:1218   */\n  add\n    /* \"#utility.yul\":1194:1241   */\n  mstore\n    /* \"#utility.yul\":1258:1336   */\n  tag_31\n    /* \"#utility.yul\":1331:1335   */\n  dup2\n    /* \"#utility.yul\":1322:1328   */\n  dup5\n    /* \"#utility.yul\":1258:1336   */\n  tag_16\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1250:1336   */\n  swap1\n  pop\n    /* \"#utility.yul\":1030:1343   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2996:3138  contract A is O {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2996:3138  contract A is O {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc2985578\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      tag_7\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x666f6f0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3120  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      jump\t// in\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_12:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_13:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_14:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_21:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_23\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_21)\n    tag_23:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_15:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_16:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_26\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_12\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":818:889   */\n      tag_27\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_13\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_28\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_14\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":988:1017   */\n      tag_29\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_15\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_11:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_31\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_16\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f5ed93e95691d32c86a2d4d0cd32d2b20060dd3e6249aecc09dc6ecd13630a2b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 154,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100956040518060400160405280600c81526020017f4120636f6e73747263746f72000000000000000000000000000000000000000081525061009a60201b60201c565b610186565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100c99190610164565b60405180910390a150565b600081519050919050565b600082825260208201905092915050565b60005b8381101561010e5780820151818401526020810190506100f3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610136826100d4565b61014081856100df565b93506101508185602086016100f0565b6101598161011a565b840191505092915050565b6000602082019050818103600083015261017e818461012b565b905092915050565b61019c806101956000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600381526020017f666f6f000000000000000000000000000000000000000000000000000000000081525061007a565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100a99190610144565b60405180910390a150565b600081519050919050565b600082825260208201905092915050565b60005b838110156100ee5780820151818401526020810190506100d3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610116826100b4565b61012081856100bf565b93506101308185602086016100d0565b610139816100fa565b840191505092915050565b6000602082019050818103600083015261015e818461010b565b90509291505056fea2646970667358221220f5ed93e95691d32c86a2d4d0cd32d2b20060dd3e6249aecc09dc6ecd13630a2b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x95 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4120636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x9A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x186 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP3 PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x140 DUP2 DUP6 PUSH2 0xDF JUMP JUMPDEST SWAP4 POP PUSH2 0x150 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x159 DUP2 PUSH2 0x11A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17E DUP2 DUP5 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19C DUP1 PUSH2 0x195 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x7A JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116 DUP3 PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x120 DUP2 DUP6 PUSH2 0xBF JUMP JUMPDEST SWAP4 POP PUSH2 0x130 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD0 JUMP JUMPDEST PUSH2 0x139 DUP2 PUSH2 0xFA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15E DUP2 DUP5 PUSH2 0x10B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xED SWAP4 0xE9 JUMP SWAP2 0xD3 0x2C DUP7 LOG2 0xD4 0xD0 0xCD ORIGIN 0xD2 0xB2 STOP PUSH1 0xDD RETURNDATACOPY PUSH3 0x49AECC MULMOD 0xDC PUSH15 0xCD13630A2B64736F6C634300081100 CALLER ",
							"sourceMap": "2996:142:0:-:0;;;3019:51;;;;;;;;;;2817:10;2801:5;;:27;;;;;;;;;;;;;;;;;;3043:19;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;2996:142;;2878:81;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;2996:142:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@foo_49": {
									"entryPoint": 58,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 122,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600381526020017f666f6f000000000000000000000000000000000000000000000000000000000081525061007a565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100a99190610144565b60405180910390a150565b600081519050919050565b600082825260208201905092915050565b60005b838110156100ee5780820151818401526020810190506100d3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610116826100b4565b61012081856100bf565b93506101308185602086016100d0565b610139816100fa565b840191505092915050565b6000602082019050818103600083015261015e818461010b565b90509291505056fea2646970667358221220f5ed93e95691d32c86a2d4d0cd32d2b20060dd3e6249aecc09dc6ecd13630a2b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x7A JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116 DUP3 PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x120 DUP2 DUP6 PUSH2 0xBF JUMP JUMPDEST SWAP4 POP PUSH2 0x130 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD0 JUMP JUMPDEST PUSH2 0x139 DUP2 PUSH2 0xFA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15E DUP2 DUP5 PUSH2 0x10B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xED SWAP4 0xE9 JUMP SWAP2 0xD3 0x2C DUP7 LOG2 0xD4 0xD0 0xCD ORIGIN 0xD2 0xB2 STOP PUSH1 0xDD RETURNDATACOPY PUSH3 0x49AECC MULMOD 0xDC PUSH15 0xCD13630A2B64736F6C634300081100 CALLER ",
							"sourceMap": "2996:142:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3076:59;;;:::i;:::-;;;3117:10;;;;;;;;;;;;;;;;;;:3;:10::i;:::-;3076:59::o;2878:81::-;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "82400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"foo()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2996,
									"end": 3138,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3070,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2817,
									"end": 2827,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "4120636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
								},
								{
									"begin": 2943,
									"end": 2950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2939,
									"end": 2951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 112,
									"end": 281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 196,
									"end": 207,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 236,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 225,
									"end": 228,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 218,
									"end": 237,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 270,
									"end": 274,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 265,
									"end": 268,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 261,
									"end": 275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 287,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 392,
									"end": 398,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 389,
									"end": 390,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 477,
									"end": 478,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 472,
									"end": 475,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 468,
									"end": 479,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 462,
									"end": 480,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 458,
									"end": 459,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 453,
									"end": 456,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 449,
									"end": 460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 442,
									"end": 481,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 414,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 411,
									"end": 412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 407,
									"end": 417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 525,
									"end": 526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 522,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 511,
									"end": 514,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 507,
									"end": 523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 500,
									"end": 527,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 349,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 539,
									"end": 641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 633,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 627,
									"end": 634,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 615,
									"end": 620,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 611,
									"end": 625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 607,
									"end": 635,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 796,
									"end": 801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 763,
									"end": 802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 880,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 818,
									"end": 889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 818,
									"end": 889,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 956,
									"end": 962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 951,
									"end": 954,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 944,
									"end": 948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 937,
									"end": 942,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 933,
									"end": 949,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 898,
									"end": 963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 898,
									"end": 963,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1010,
									"end": 1016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 988,
									"end": 1017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 983,
									"end": 986,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 979,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 739,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1143,
									"end": 1147,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1179,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1184,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1220,
									"end": 1240,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1214,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1218,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1241,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1331,
									"end": 1335,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1328,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1258,
									"end": 1336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2996,
									"end": 3138,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5ed93e95691d32c86a2d4d0cd32d2b20060dd3e6249aecc09dc6ecd13630a2b64736f6c63430008110033",
									".code": [
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "C2985578"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3076,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "666F6F0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3117,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2939,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_14_合约_继承_多重继承与线性化.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo()": "c2985578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"foo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":\"A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":{\"keccak256\":\"0x387376c64b3aa140286eed11f381daae871f8b02c20fe8495ef59f4f566cec33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://149cdd459980daaf88bd5c9c56d8a978fd3ffe1771e281cf1cdfff7e07b8964b\",\"dweb:/ipfs/QmcCTGzToVGvMYg7SSPuUodzW2HBhiN5KJh8VfDitNdMaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "合约/_14_合约_继承_多重继承与线性化.sol:A",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"B": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "foo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3142:3376  contract B is A {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3165:3217  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2817:2827  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2806  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2828  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  tag_7\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4120636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3046  log */\n  shl(0x20, tag_8)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3190:3209  log(\"B constrctor\") */\n  tag_10\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4220636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3190:3193  log */\n  shl(0x20, tag_8)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3190:3209  log(\"B constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3142:3376  contract B is A {... */\n  jump(tag_11)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\ntag_8:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n  dup2\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  mload(0x40)\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_15:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:281   */\ntag_16:\n    /* \"#utility.yul\":196:207   */\n  0x00\n    /* \"#utility.yul\":230:236   */\n  dup3\n    /* \"#utility.yul\":225:228   */\n  dup3\n    /* \"#utility.yul\":218:237   */\n  mstore\n    /* \"#utility.yul\":270:274   */\n  0x20\n    /* \"#utility.yul\":265:268   */\n  dup3\n    /* \"#utility.yul\":261:275   */\n  add\n    /* \"#utility.yul\":246:275   */\n  swap1\n  pop\n    /* \"#utility.yul\":112:281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":287:533   */\ntag_17:\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":378:491   */\ntag_24:\n    /* \"#utility.yul\":392:398   */\n  dup4\n    /* \"#utility.yul\":389:390   */\n  dup2\n    /* \"#utility.yul\":386:399   */\n  lt\n    /* \"#utility.yul\":378:491   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":477:478   */\n  dup1\n    /* \"#utility.yul\":472:475   */\n  dup3\n    /* \"#utility.yul\":468:479   */\n  add\n    /* \"#utility.yul\":462:480   */\n  mload\n    /* \"#utility.yul\":458:459   */\n  dup2\n    /* \"#utility.yul\":453:456   */\n  dup5\n    /* \"#utility.yul\":449:460   */\n  add\n    /* \"#utility.yul\":442:481   */\n  mstore\n    /* \"#utility.yul\":414:416   */\n  0x20\n    /* \"#utility.yul\":411:412   */\n  dup2\n    /* \"#utility.yul\":407:417   */\n  add\n    /* \"#utility.yul\":402:417   */\n  swap1\n  pop\n    /* \"#utility.yul\":378:491   */\n  jump(tag_24)\ntag_26:\n    /* \"#utility.yul\":525:526   */\n  0x00\n    /* \"#utility.yul\":516:522   */\n  dup5\n    /* \"#utility.yul\":511:514   */\n  dup5\n    /* \"#utility.yul\":507:523   */\n  add\n    /* \"#utility.yul\":500:527   */\n  mstore\n    /* \"#utility.yul\":349:533   */\n  pop\n    /* \"#utility.yul\":287:533   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":539:641   */\ntag_18:\n    /* \"#utility.yul\":580:586   */\n  0x00\n    /* \"#utility.yul\":631:633   */\n  0x1f\n    /* \"#utility.yul\":627:634   */\n  not\n    /* \"#utility.yul\":622:624   */\n  0x1f\n    /* \"#utility.yul\":615:620   */\n  dup4\n    /* \"#utility.yul\":611:625   */\n  add\n    /* \"#utility.yul\":607:635   */\n  and\n    /* \"#utility.yul\":597:635   */\n  swap1\n  pop\n    /* \"#utility.yul\":539:641   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":647:1024   */\ntag_19:\n    /* \"#utility.yul\":735:738   */\n  0x00\n    /* \"#utility.yul\":763:802   */\n  tag_29\n    /* \"#utility.yul\":796:801   */\n  dup3\n    /* \"#utility.yul\":763:802   */\n  tag_15\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":818:889   */\n  tag_30\n    /* \"#utility.yul\":882:888   */\n  dup2\n    /* \"#utility.yul\":877:880   */\n  dup6\n    /* \"#utility.yul\":818:889   */\n  tag_16\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":811:889   */\n  swap4\n  pop\n    /* \"#utility.yul\":898:963   */\n  tag_31\n    /* \"#utility.yul\":956:962   */\n  dup2\n    /* \"#utility.yul\":951:954   */\n  dup6\n    /* \"#utility.yul\":944:948   */\n  0x20\n    /* \"#utility.yul\":937:942   */\n  dup7\n    /* \"#utility.yul\":933:949   */\n  add\n    /* \"#utility.yul\":898:963   */\n  tag_17\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":988:1017   */\n  tag_32\n    /* \"#utility.yul\":1010:1016   */\n  dup2\n    /* \"#utility.yul\":988:1017   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":983:986   */\n  dup5\n    /* \"#utility.yul\":979:1018   */\n  add\n    /* \"#utility.yul\":972:1018   */\n  swap2\n  pop\n    /* \"#utility.yul\":739:1024   */\n  pop\n    /* \"#utility.yul\":647:1024   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1030:1343   */\ntag_14:\n    /* \"#utility.yul\":1143:1147   */\n  0x00\n    /* \"#utility.yul\":1181:1183   */\n  0x20\n    /* \"#utility.yul\":1170:1179   */\n  dup3\n    /* \"#utility.yul\":1166:1184   */\n  add\n    /* \"#utility.yul\":1158:1184   */\n  swap1\n  pop\n    /* \"#utility.yul\":1230:1239   */\n  dup2\n    /* \"#utility.yul\":1224:1228   */\n  dup2\n    /* \"#utility.yul\":1220:1240   */\n  sub\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1205:1214   */\n  dup4\n    /* \"#utility.yul\":1201:1218   */\n  add\n    /* \"#utility.yul\":1194:1241   */\n  mstore\n    /* \"#utility.yul\":1258:1336   */\n  tag_34\n    /* \"#utility.yul\":1331:1335   */\n  dup2\n    /* \"#utility.yul\":1322:1328   */\n  dup5\n    /* \"#utility.yul\":1258:1336   */\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1250:1336   */\n  swap1\n  pop\n    /* \"#utility.yul\":1030:1343   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3142:3376  contract B is A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3142:3376  contract B is A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc2985578\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3223:3373  function foo() public virtual override {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3303:3318  log(\"B before\") */\n      tag_7\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x42206265666f7265000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3303:3306  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3303:3318  log(\"B before\") */\n      jump\t// in\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3329:3340  super.foo() */\n      tag_9\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3329:3338  super.foo */\n      tag_10\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3329:3340  super.foo() */\n      jump\t// in\n    tag_9:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3351:3365  log(\"B after\") */\n      tag_11\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4220616674657200000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3351:3354  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3351:3365  log(\"B after\") */\n      jump\t// in\n    tag_11:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3223:3373  function foo() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n      pop\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n    tag_10:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      tag_16\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x666f6f0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3120  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      jump\t// in\n    tag_16:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_17:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_18:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_19:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_26:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_26)\n    tag_28:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_20:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_21:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_31\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_17\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":818:889   */\n      tag_32\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_18\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_33\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_19\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":988:1017   */\n      tag_34\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_20\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_14:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_36\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_21\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d190eff0f5368c509b1a00795dc85e0ad48706a6f537339ffa5fc99cf6f9da8f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 222,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100956040518060400160405280600c81526020017f4120636f6e73747263746f7200000000000000000000000000000000000000008152506100de60201b60201c565b6100d96040518060400160405280600c81526020017f4220636f6e73747263746f7200000000000000000000000000000000000000008152506100de60201b60201c565b6101ca565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab8160405161010d91906101a8565b60405180910390a150565b600081519050919050565b600082825260208201905092915050565b60005b83811015610152578082015181840152602081019050610137565b60008484015250505050565b6000601f19601f8301169050919050565b600061017a82610118565b6101848185610123565b9350610194818560208601610134565b61019d8161015e565b840191505092915050565b600060208201905081810360008301526101c2818461016f565b905092915050565b610222806101d96000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600881526020017f42206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600781526020017f42206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef91906101ca565b60405180910390a150565b6101386040518060400160405280600381526020017f666f6f00000000000000000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b83811015610174578082015181840152602081019050610159565b60008484015250505050565b6000601f19601f8301169050919050565b600061019c8261013a565b6101a68185610145565b93506101b6818560208601610156565b6101bf81610180565b840191505092915050565b600060208201905081810360008301526101e48184610191565b90509291505056fea2646970667358221220d190eff0f5368c509b1a00795dc85e0ad48706a6f537339ffa5fc99cf6f9da8f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x95 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4120636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xDE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xD9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4220636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xDE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x152 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x137 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A DUP3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x184 DUP2 DUP6 PUSH2 0x123 JUMP JUMPDEST SWAP4 POP PUSH2 0x194 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x19D DUP2 PUSH2 0x15E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C2 DUP2 DUP5 PUSH2 0x16F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x222 DUP1 PUSH2 0x1D9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4220616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP3 PUSH2 0x13A JUMP JUMPDEST PUSH2 0x1A6 DUP2 DUP6 PUSH2 0x145 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x1BF DUP2 PUSH2 0x180 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E4 DUP2 DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 SWAP1 0xEF CREATE CREATE2 CALLDATASIZE DUP13 POP SWAP12 BYTE STOP PUSH26 0x5DC85E0AD48706A6F537339FFA5FC99CF6F9DA8F64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3142:234:0:-:0;;;3165:52;;;;;;;;;;2817:10;2801:5;;:27;;;;;;;;;;;;;;;;;;3043:19;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3190;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3142:234;;2878:81;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;3142:234:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@foo_49": {
									"entryPoint": 250,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@foo_78": {
									"entryPoint": 58,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 192,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600881526020017f42206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600781526020017f42206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef91906101ca565b60405180910390a150565b6101386040518060400160405280600381526020017f666f6f00000000000000000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b83811015610174578082015181840152602081019050610159565b60008484015250505050565b6000601f19601f8301169050919050565b600061019c8261013a565b6101a68185610145565b93506101b6818560208601610156565b6101bf81610180565b840191505092915050565b600060208201905081810360008301526101e48184610191565b90509291505056fea2646970667358221220d190eff0f5368c509b1a00795dc85e0ad48706a6f537339ffa5fc99cf6f9da8f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4220616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP3 PUSH2 0x13A JUMP JUMPDEST PUSH2 0x1A6 DUP2 DUP6 PUSH2 0x145 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x1BF DUP2 PUSH2 0x180 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E4 DUP2 DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 SWAP1 0xEF CREATE CREATE2 CALLDATASIZE DUP13 POP SWAP12 BYTE STOP PUSH26 0x5DC85E0AD48706A6F537339FFA5FC99CF6F9DA8F64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3142:234:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3223:150;;;:::i;:::-;;;3303:15;;;;;;;;;;;;;;;;;;:3;:15::i;:::-;3329:11;:9;:11::i;:::-;3351:14;;;;;;;;;;;;;;;;;;:3;:14::i;:::-;3223:150::o;2878:81::-;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;3076:59::-;3117:10;;;;;;;;;;;;;;;;;;:3;:10::i;:::-;3076:59::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "109200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"foo()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3142,
									"end": 3376,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3217,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2817,
									"end": 2827,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "4120636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "4220636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3190,
									"end": 3193,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3190,
									"end": 3193,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
								},
								{
									"begin": 2943,
									"end": 2950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2939,
									"end": 2951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 112,
									"end": 281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 196,
									"end": 207,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 236,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 225,
									"end": 228,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 218,
									"end": 237,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 270,
									"end": 274,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 265,
									"end": 268,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 261,
									"end": 275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 287,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 392,
									"end": 398,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 389,
									"end": 390,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 477,
									"end": 478,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 472,
									"end": 475,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 468,
									"end": 479,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 462,
									"end": 480,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 458,
									"end": 459,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 453,
									"end": 456,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 449,
									"end": 460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 442,
									"end": 481,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 414,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 411,
									"end": 412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 407,
									"end": 417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 525,
									"end": 526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 522,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 511,
									"end": 514,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 507,
									"end": 523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 500,
									"end": 527,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 349,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 539,
									"end": 641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 633,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 627,
									"end": 634,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 615,
									"end": 620,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 611,
									"end": 625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 607,
									"end": 635,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 796,
									"end": 801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 763,
									"end": 802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 880,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 818,
									"end": 889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 818,
									"end": 889,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 956,
									"end": 962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 951,
									"end": 954,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 944,
									"end": 948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 937,
									"end": 942,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 933,
									"end": 949,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 898,
									"end": 963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 898,
									"end": 963,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1010,
									"end": 1016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 988,
									"end": 1017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 983,
									"end": 986,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 979,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 739,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1143,
									"end": 1147,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1179,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1184,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1220,
									"end": 1240,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1214,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1218,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1241,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1331,
									"end": 1335,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1328,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1258,
									"end": 1336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3142,
									"end": 3376,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d190eff0f5368c509b1a00795dc85e0ad48706a6f537339ffa5fc99cf6f9da8f64736f6c63430008110033",
									".code": [
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "C2985578"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3223,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "42206265666F7265000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3303,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3329,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3329,
											"end": 3340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3340,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3329,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "4220616674657200000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3351,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2939,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "666F6F0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3117,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_14_合约_继承_多重继承与线性化.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo()": "c2985578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"foo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":\"B\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":{\"keccak256\":\"0x387376c64b3aa140286eed11f381daae871f8b02c20fe8495ef59f4f566cec33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://149cdd459980daaf88bd5c9c56d8a978fd3ffe1771e281cf1cdfff7e07b8964b\",\"dweb:/ipfs/QmcCTGzToVGvMYg7SSPuUodzW2HBhiN5KJh8VfDitNdMaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "合约/_14_合约_继承_多重继承与线性化.sol:B",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"C": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "foo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3618:3852  contract C is E {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3641:3693  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2817:2827  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2806  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2828  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  tag_8\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4120636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3046  log */\n  shl(0x20, tag_9)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3428:3447  log(\"E constrctor\") */\n  tag_11\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4520636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3428:3431  log */\n  shl(0x20, tag_9)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3428:3447  log(\"E constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3666:3685  log(\"C constrctor\") */\n  tag_13\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4320636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3666:3669  log */\n  shl(0x20, tag_9)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3666:3685  log(\"C constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3618:3852  contract C is E {... */\n  jump(tag_14)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\ntag_9:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n  dup2\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  mload(0x40)\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:281   */\ntag_19:\n    /* \"#utility.yul\":196:207   */\n  0x00\n    /* \"#utility.yul\":230:236   */\n  dup3\n    /* \"#utility.yul\":225:228   */\n  dup3\n    /* \"#utility.yul\":218:237   */\n  mstore\n    /* \"#utility.yul\":270:274   */\n  0x20\n    /* \"#utility.yul\":265:268   */\n  dup3\n    /* \"#utility.yul\":261:275   */\n  add\n    /* \"#utility.yul\":246:275   */\n  swap1\n  pop\n    /* \"#utility.yul\":112:281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":287:533   */\ntag_20:\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":378:491   */\ntag_27:\n    /* \"#utility.yul\":392:398   */\n  dup4\n    /* \"#utility.yul\":389:390   */\n  dup2\n    /* \"#utility.yul\":386:399   */\n  lt\n    /* \"#utility.yul\":378:491   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":477:478   */\n  dup1\n    /* \"#utility.yul\":472:475   */\n  dup3\n    /* \"#utility.yul\":468:479   */\n  add\n    /* \"#utility.yul\":462:480   */\n  mload\n    /* \"#utility.yul\":458:459   */\n  dup2\n    /* \"#utility.yul\":453:456   */\n  dup5\n    /* \"#utility.yul\":449:460   */\n  add\n    /* \"#utility.yul\":442:481   */\n  mstore\n    /* \"#utility.yul\":414:416   */\n  0x20\n    /* \"#utility.yul\":411:412   */\n  dup2\n    /* \"#utility.yul\":407:417   */\n  add\n    /* \"#utility.yul\":402:417   */\n  swap1\n  pop\n    /* \"#utility.yul\":378:491   */\n  jump(tag_27)\ntag_29:\n    /* \"#utility.yul\":525:526   */\n  0x00\n    /* \"#utility.yul\":516:522   */\n  dup5\n    /* \"#utility.yul\":511:514   */\n  dup5\n    /* \"#utility.yul\":507:523   */\n  add\n    /* \"#utility.yul\":500:527   */\n  mstore\n    /* \"#utility.yul\":349:533   */\n  pop\n    /* \"#utility.yul\":287:533   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":539:641   */\ntag_21:\n    /* \"#utility.yul\":580:586   */\n  0x00\n    /* \"#utility.yul\":631:633   */\n  0x1f\n    /* \"#utility.yul\":627:634   */\n  not\n    /* \"#utility.yul\":622:624   */\n  0x1f\n    /* \"#utility.yul\":615:620   */\n  dup4\n    /* \"#utility.yul\":611:625   */\n  add\n    /* \"#utility.yul\":607:635   */\n  and\n    /* \"#utility.yul\":597:635   */\n  swap1\n  pop\n    /* \"#utility.yul\":539:641   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":647:1024   */\ntag_22:\n    /* \"#utility.yul\":735:738   */\n  0x00\n    /* \"#utility.yul\":763:802   */\n  tag_32\n    /* \"#utility.yul\":796:801   */\n  dup3\n    /* \"#utility.yul\":763:802   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":818:889   */\n  tag_33\n    /* \"#utility.yul\":882:888   */\n  dup2\n    /* \"#utility.yul\":877:880   */\n  dup6\n    /* \"#utility.yul\":818:889   */\n  tag_19\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":811:889   */\n  swap4\n  pop\n    /* \"#utility.yul\":898:963   */\n  tag_34\n    /* \"#utility.yul\":956:962   */\n  dup2\n    /* \"#utility.yul\":951:954   */\n  dup6\n    /* \"#utility.yul\":944:948   */\n  0x20\n    /* \"#utility.yul\":937:942   */\n  dup7\n    /* \"#utility.yul\":933:949   */\n  add\n    /* \"#utility.yul\":898:963   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":988:1017   */\n  tag_35\n    /* \"#utility.yul\":1010:1016   */\n  dup2\n    /* \"#utility.yul\":988:1017   */\n  tag_21\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":983:986   */\n  dup5\n    /* \"#utility.yul\":979:1018   */\n  add\n    /* \"#utility.yul\":972:1018   */\n  swap2\n  pop\n    /* \"#utility.yul\":739:1024   */\n  pop\n    /* \"#utility.yul\":647:1024   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1030:1343   */\ntag_17:\n    /* \"#utility.yul\":1143:1147   */\n  0x00\n    /* \"#utility.yul\":1181:1183   */\n  0x20\n    /* \"#utility.yul\":1170:1179   */\n  dup3\n    /* \"#utility.yul\":1166:1184   */\n  add\n    /* \"#utility.yul\":1158:1184   */\n  swap1\n  pop\n    /* \"#utility.yul\":1230:1239   */\n  dup2\n    /* \"#utility.yul\":1224:1228   */\n  dup2\n    /* \"#utility.yul\":1220:1240   */\n  sub\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1205:1214   */\n  dup4\n    /* \"#utility.yul\":1201:1218   */\n  add\n    /* \"#utility.yul\":1194:1241   */\n  mstore\n    /* \"#utility.yul\":1258:1336   */\n  tag_37\n    /* \"#utility.yul\":1331:1335   */\n  dup2\n    /* \"#utility.yul\":1322:1328   */\n  dup5\n    /* \"#utility.yul\":1258:1336   */\n  tag_22\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1250:1336   */\n  swap1\n  pop\n    /* \"#utility.yul\":1030:1343   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3618:3852  contract C is E {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3618:3852  contract C is E {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc2985578\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3699:3849  function foo() public virtual override {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3779:3794  log(\"C before\") */\n      tag_7\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x43206265666f7265000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3779:3782  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3779:3794  log(\"C before\") */\n      jump\t// in\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3805:3816  super.foo() */\n      tag_9\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3805:3814  super.foo */\n      tag_10\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3805:3816  super.foo() */\n      jump\t// in\n    tag_9:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3827:3841  log(\"C after\") */\n      tag_11\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4320616674657200000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3827:3830  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3827:3841  log(\"C after\") */\n      jump\t// in\n    tag_11:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3699:3849  function foo() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n      pop\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3461:3611  function foo() public virtual override {... */\n    tag_10:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3541:3556  log(\"E before\") */\n      tag_16\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x45206265666f7265000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3541:3544  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3541:3556  log(\"E before\") */\n      jump\t// in\n    tag_16:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3567:3578  super.foo() */\n      tag_17\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3567:3576  super.foo */\n      tag_18\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3567:3578  super.foo() */\n      jump\t// in\n    tag_17:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3589:3603  log(\"E after\") */\n      tag_19\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4520616674657200000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3589:3592  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3589:3603  log(\"E after\") */\n      jump\t// in\n    tag_19:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3461:3611  function foo() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n    tag_18:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      tag_21\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x666f6f0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3120  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      jump\t// in\n    tag_21:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_22:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_23:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_24:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_31:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_31)\n    tag_33:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_25:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_26:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_36\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_22\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":818:889   */\n      tag_37\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_23\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_38\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_24\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":988:1017   */\n      tag_39\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_25\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_14:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_41\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_26\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c36dc6392eece3db7caa81ac49e21d25e19daf455fa05767dc934c9dba3c4e2464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_118": {
									"entryPoint": null,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_89": {
									"entryPoint": null,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 290,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100956040518060400160405280600c81526020017f4120636f6e73747263746f72000000000000000000000000000000000000000081525061012260201b60201c565b6100d96040518060400160405280600c81526020017f4520636f6e73747263746f72000000000000000000000000000000000000000081525061012260201b60201c565b61011d6040518060400160405280600c81526020017f4320636f6e73747263746f72000000000000000000000000000000000000000081525061012260201b60201c565b61020e565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab8160405161015191906101ec565b60405180910390a150565b600081519050919050565b600082825260208201905092915050565b60005b8381101561019657808201518184015260208101905061017b565b60008484015250505050565b6000601f19601f8301169050919050565b60006101be8261015c565b6101c88185610167565b93506101d8818560208601610178565b6101e1816101a2565b840191505092915050565b6000602082019050818103600083015261020681846101b3565b905092915050565b6102a88061021d6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600881526020017f43206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600781526020017f43206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef9190610250565b60405180910390a150565b6101386040518060400160405280600881526020017f45206265666f72650000000000000000000000000000000000000000000000008152506100c0565b610140610180565b61017e6040518060400160405280600781526020017f45206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b6101be6040518060400160405280600381526020017f666f6f00000000000000000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156101fa5780820151818401526020810190506101df565b60008484015250505050565b6000601f19601f8301169050919050565b6000610222826101c0565b61022c81856101cb565b935061023c8185602086016101dc565b61024581610206565b840191505092915050565b6000602082019050818103600083015261026a8184610217565b90509291505056fea2646970667358221220c36dc6392eece3db7caa81ac49e21d25e19daf455fa05767dc934c9dba3c4e2464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x95 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4120636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x122 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xD9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4520636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x122 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4320636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x122 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x20E JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x196 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE DUP3 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1C8 DUP2 DUP6 PUSH2 0x167 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178 JUMP JUMPDEST PUSH2 0x1E1 DUP2 PUSH2 0x1A2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x206 DUP2 DUP5 PUSH2 0x1B3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A8 DUP1 PUSH2 0x21D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4320616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4520616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222 DUP3 PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x22C DUP2 DUP6 PUSH2 0x1CB JUMP JUMPDEST SWAP4 POP PUSH2 0x23C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC JUMP JUMPDEST PUSH2 0x245 DUP2 PUSH2 0x206 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A DUP2 DUP5 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 PUSH14 0xC6392EECE3DB7CAA81AC49E21D25 0xE1 SWAP14 0xAF GASLIMIT 0x5F LOG0 JUMPI PUSH8 0xDC934C9DBA3C4E24 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3618:234:0:-:0;;;3641:52;;;;;;;;;;2817:10;2801:5;;:27;;;;;;;;;;;;;;;;;;3043:19;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3428;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3666;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3618:234;;2878:81;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;3618:234:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@foo_107": {
									"entryPoint": 250,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@foo_136": {
									"entryPoint": 58,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@foo_49": {
									"entryPoint": 384,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 192,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600881526020017f43206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600781526020017f43206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef9190610250565b60405180910390a150565b6101386040518060400160405280600881526020017f45206265666f72650000000000000000000000000000000000000000000000008152506100c0565b610140610180565b61017e6040518060400160405280600781526020017f45206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b6101be6040518060400160405280600381526020017f666f6f00000000000000000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156101fa5780820151818401526020810190506101df565b60008484015250505050565b6000601f19601f8301169050919050565b6000610222826101c0565b61022c81856101cb565b935061023c8185602086016101dc565b61024581610206565b840191505092915050565b6000602082019050818103600083015261026a8184610217565b90509291505056fea2646970667358221220c36dc6392eece3db7caa81ac49e21d25e19daf455fa05767dc934c9dba3c4e2464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4320616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4520616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222 DUP3 PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x22C DUP2 DUP6 PUSH2 0x1CB JUMP JUMPDEST SWAP4 POP PUSH2 0x23C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC JUMP JUMPDEST PUSH2 0x245 DUP2 PUSH2 0x206 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A DUP2 DUP5 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 PUSH14 0xC6392EECE3DB7CAA81AC49E21D25 0xE1 SWAP14 0xAF GASLIMIT 0x5F LOG0 JUMPI PUSH8 0xDC934C9DBA3C4E24 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3618:234:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3699:150;;;:::i;:::-;;;3779:15;;;;;;;;;;;;;;;;;;:3;:15::i;:::-;3805:11;:9;:11::i;:::-;3827:14;;;;;;;;;;;;;;;;;;:3;:14::i;:::-;3699:150::o;2878:81::-;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;3461:150::-;3541:15;;;;;;;;;;;;;;;;;;:3;:15::i;:::-;3567:11;:9;:11::i;:::-;3589:14;;;;;;;;;;;;;;;;;;:3;:14::i;:::-;3461:150::o;3076:59::-;3117:10;;;;;;;;;;;;;;;;;;:3;:10::i;:::-;3076:59::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"foo()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3618,
									"end": 3852,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3641,
									"end": 3693,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2817,
									"end": 2827,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "4120636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "4520636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3428,
									"end": 3431,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3428,
									"end": 3431,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "4320636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3666,
									"end": 3669,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3666,
									"end": 3669,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
								},
								{
									"begin": 2943,
									"end": 2950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2939,
									"end": 2951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 196,
									"end": 207,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 236,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 225,
									"end": 228,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 218,
									"end": 237,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 270,
									"end": 274,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 265,
									"end": 268,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 261,
									"end": 275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 287,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 392,
									"end": 398,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 389,
									"end": 390,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 477,
									"end": 478,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 472,
									"end": 475,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 468,
									"end": 479,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 462,
									"end": 480,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 458,
									"end": 459,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 453,
									"end": 456,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 449,
									"end": 460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 442,
									"end": 481,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 414,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 411,
									"end": 412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 407,
									"end": 417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 525,
									"end": 526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 522,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 511,
									"end": 514,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 507,
									"end": 523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 500,
									"end": 527,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 349,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 539,
									"end": 641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 633,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 627,
									"end": 634,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 615,
									"end": 620,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 611,
									"end": 625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 607,
									"end": 635,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 796,
									"end": 801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 763,
									"end": 802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 880,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 818,
									"end": 889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 818,
									"end": 889,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 956,
									"end": 962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 951,
									"end": 954,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 944,
									"end": 948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 937,
									"end": 942,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 933,
									"end": 949,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 898,
									"end": 963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 898,
									"end": 963,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1010,
									"end": 1016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 988,
									"end": 1017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 983,
									"end": 986,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 979,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 739,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1143,
									"end": 1147,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1179,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1184,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1220,
									"end": 1240,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1214,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1218,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1241,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1331,
									"end": 1335,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1328,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1258,
									"end": 1336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3618,
									"end": 3852,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c36dc6392eece3db7caa81ac49e21d25e19daf455fa05767dc934c9dba3c4e2464736f6c63430008110033",
									".code": [
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "C2985578"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3852,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3699,
											"end": 3849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "43206265666F7265000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3779,
											"end": 3794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3805,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3805,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3816,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3805,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "4320616674657200000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3827,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2939,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "45206265666F7265000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3541,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3567,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3567,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "4520616674657200000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3589,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "666F6F0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3117,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_14_合约_继承_多重继承与线性化.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo()": "c2985578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"foo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":\"C\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":{\"keccak256\":\"0x387376c64b3aa140286eed11f381daae871f8b02c20fe8495ef59f4f566cec33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://149cdd459980daaf88bd5c9c56d8a978fd3ffe1771e281cf1cdfff7e07b8964b\",\"dweb:/ipfs/QmcCTGzToVGvMYg7SSPuUodzW2HBhiN5KJh8VfDitNdMaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "合约/_14_合约_继承_多重继承与线性化.sol:C",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"D": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "foo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3858:4151  contract D is B, C {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3884:3963  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2817:2827  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2806  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2828  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  tag_10\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4120636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3046  log */\n  shl(0x20, tag_11)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3190:3209  log(\"B constrctor\") */\n  tag_13\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4220636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3190:3193  log */\n  shl(0x20, tag_11)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3190:3209  log(\"B constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3428:3447  log(\"E constrctor\") */\n  tag_15\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4520636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3428:3431  log */\n  shl(0x20, tag_11)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3428:3447  log(\"E constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3666:3685  log(\"C constrctor\") */\n  tag_17\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4320636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3666:3669  log */\n  shl(0x20, tag_11)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3666:3685  log(\"C constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3909:3928  log(\"D constrctor\") */\n  tag_19\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4420636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3909:3912  log */\n  shl(0x20, tag_11)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3909:3928  log(\"D constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3858:4151  contract D is B, C {... */\n  jump(tag_20)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\ntag_11:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n  dup2\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  mload(0x40)\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_24:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:281   */\ntag_25:\n    /* \"#utility.yul\":196:207   */\n  0x00\n    /* \"#utility.yul\":230:236   */\n  dup3\n    /* \"#utility.yul\":225:228   */\n  dup3\n    /* \"#utility.yul\":218:237   */\n  mstore\n    /* \"#utility.yul\":270:274   */\n  0x20\n    /* \"#utility.yul\":265:268   */\n  dup3\n    /* \"#utility.yul\":261:275   */\n  add\n    /* \"#utility.yul\":246:275   */\n  swap1\n  pop\n    /* \"#utility.yul\":112:281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":287:533   */\ntag_26:\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":378:491   */\ntag_33:\n    /* \"#utility.yul\":392:398   */\n  dup4\n    /* \"#utility.yul\":389:390   */\n  dup2\n    /* \"#utility.yul\":386:399   */\n  lt\n    /* \"#utility.yul\":378:491   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":477:478   */\n  dup1\n    /* \"#utility.yul\":472:475   */\n  dup3\n    /* \"#utility.yul\":468:479   */\n  add\n    /* \"#utility.yul\":462:480   */\n  mload\n    /* \"#utility.yul\":458:459   */\n  dup2\n    /* \"#utility.yul\":453:456   */\n  dup5\n    /* \"#utility.yul\":449:460   */\n  add\n    /* \"#utility.yul\":442:481   */\n  mstore\n    /* \"#utility.yul\":414:416   */\n  0x20\n    /* \"#utility.yul\":411:412   */\n  dup2\n    /* \"#utility.yul\":407:417   */\n  add\n    /* \"#utility.yul\":402:417   */\n  swap1\n  pop\n    /* \"#utility.yul\":378:491   */\n  jump(tag_33)\ntag_35:\n    /* \"#utility.yul\":525:526   */\n  0x00\n    /* \"#utility.yul\":516:522   */\n  dup5\n    /* \"#utility.yul\":511:514   */\n  dup5\n    /* \"#utility.yul\":507:523   */\n  add\n    /* \"#utility.yul\":500:527   */\n  mstore\n    /* \"#utility.yul\":349:533   */\n  pop\n    /* \"#utility.yul\":287:533   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":539:641   */\ntag_27:\n    /* \"#utility.yul\":580:586   */\n  0x00\n    /* \"#utility.yul\":631:633   */\n  0x1f\n    /* \"#utility.yul\":627:634   */\n  not\n    /* \"#utility.yul\":622:624   */\n  0x1f\n    /* \"#utility.yul\":615:620   */\n  dup4\n    /* \"#utility.yul\":611:625   */\n  add\n    /* \"#utility.yul\":607:635   */\n  and\n    /* \"#utility.yul\":597:635   */\n  swap1\n  pop\n    /* \"#utility.yul\":539:641   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":647:1024   */\ntag_28:\n    /* \"#utility.yul\":735:738   */\n  0x00\n    /* \"#utility.yul\":763:802   */\n  tag_38\n    /* \"#utility.yul\":796:801   */\n  dup3\n    /* \"#utility.yul\":763:802   */\n  tag_24\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":818:889   */\n  tag_39\n    /* \"#utility.yul\":882:888   */\n  dup2\n    /* \"#utility.yul\":877:880   */\n  dup6\n    /* \"#utility.yul\":818:889   */\n  tag_25\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":811:889   */\n  swap4\n  pop\n    /* \"#utility.yul\":898:963   */\n  tag_40\n    /* \"#utility.yul\":956:962   */\n  dup2\n    /* \"#utility.yul\":951:954   */\n  dup6\n    /* \"#utility.yul\":944:948   */\n  0x20\n    /* \"#utility.yul\":937:942   */\n  dup7\n    /* \"#utility.yul\":933:949   */\n  add\n    /* \"#utility.yul\":898:963   */\n  tag_26\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":988:1017   */\n  tag_41\n    /* \"#utility.yul\":1010:1016   */\n  dup2\n    /* \"#utility.yul\":988:1017   */\n  tag_27\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":983:986   */\n  dup5\n    /* \"#utility.yul\":979:1018   */\n  add\n    /* \"#utility.yul\":972:1018   */\n  swap2\n  pop\n    /* \"#utility.yul\":739:1024   */\n  pop\n    /* \"#utility.yul\":647:1024   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1030:1343   */\ntag_23:\n    /* \"#utility.yul\":1143:1147   */\n  0x00\n    /* \"#utility.yul\":1181:1183   */\n  0x20\n    /* \"#utility.yul\":1170:1179   */\n  dup3\n    /* \"#utility.yul\":1166:1184   */\n  add\n    /* \"#utility.yul\":1158:1184   */\n  swap1\n  pop\n    /* \"#utility.yul\":1230:1239   */\n  dup2\n    /* \"#utility.yul\":1224:1228   */\n  dup2\n    /* \"#utility.yul\":1220:1240   */\n  sub\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1205:1214   */\n  dup4\n    /* \"#utility.yul\":1201:1218   */\n  add\n    /* \"#utility.yul\":1194:1241   */\n  mstore\n    /* \"#utility.yul\":1258:1336   */\n  tag_43\n    /* \"#utility.yul\":1331:1335   */\n  dup2\n    /* \"#utility.yul\":1322:1328   */\n  dup5\n    /* \"#utility.yul\":1258:1336   */\n  tag_28\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1250:1336   */\n  swap1\n  pop\n    /* \"#utility.yul\":1030:1343   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3858:4151  contract D is B, C {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3858:4151  contract D is B, C {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc2985578\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3991:4109  function foo() public override(B, C) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":4039:4054  log(\"D before\") */\n      tag_7\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x44206265666f7265000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":4039:4042  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":4039:4054  log(\"D before\") */\n      jump\t// in\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":4065:4076  super.foo() */\n      tag_9\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":4065:4074  super.foo */\n      tag_10\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":4065:4076  super.foo() */\n      jump\t// in\n    tag_9:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":4087:4101  log(\"D after\") */\n      tag_11\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4420616674657200000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":4087:4090  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":4087:4101  log(\"D after\") */\n      jump\t// in\n    tag_11:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3991:4109  function foo() public override(B, C) {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n      pop\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3699:3849  function foo() public virtual override {... */\n    tag_10:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3779:3794  log(\"C before\") */\n      tag_16\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x43206265666f7265000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3779:3782  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3779:3794  log(\"C before\") */\n      jump\t// in\n    tag_16:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3805:3816  super.foo() */\n      tag_17\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3805:3814  super.foo */\n      tag_18\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3805:3816  super.foo() */\n      jump\t// in\n    tag_17:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3827:3841  log(\"C after\") */\n      tag_19\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4320616674657200000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3827:3830  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3827:3841  log(\"C after\") */\n      jump\t// in\n    tag_19:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3699:3849  function foo() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3461:3611  function foo() public virtual override {... */\n    tag_18:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3541:3556  log(\"E before\") */\n      tag_21\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x45206265666f7265000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3541:3544  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3541:3556  log(\"E before\") */\n      jump\t// in\n    tag_21:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3567:3578  super.foo() */\n      tag_22\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3567:3576  super.foo */\n      tag_23\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3567:3578  super.foo() */\n      jump\t// in\n    tag_22:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3589:3603  log(\"E after\") */\n      tag_24\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4520616674657200000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3589:3592  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3589:3603  log(\"E after\") */\n      jump\t// in\n    tag_24:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3461:3611  function foo() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3223:3373  function foo() public virtual override {... */\n    tag_23:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3303:3318  log(\"B before\") */\n      tag_26\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x42206265666f7265000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3303:3306  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3303:3318  log(\"B before\") */\n      jump\t// in\n    tag_26:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3329:3340  super.foo() */\n      tag_27\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3329:3338  super.foo */\n      tag_28\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3329:3340  super.foo() */\n      jump\t// in\n    tag_27:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3351:3365  log(\"B after\") */\n      tag_29\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4220616674657200000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3351:3354  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3351:3365  log(\"B after\") */\n      jump\t// in\n    tag_29:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3223:3373  function foo() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n    tag_28:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      tag_31\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x666f6f0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3120  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      jump\t// in\n    tag_31:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_32:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_33:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_34:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_41:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_41)\n    tag_43:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_35:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_36:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_46\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_32\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":818:889   */\n      tag_47\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_33\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_48\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_34\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":988:1017   */\n      tag_49\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_35\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_14:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_51\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_36\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220028896498a638e936cb2f2ed02d573194411b5739644b47250ceaa7bbb5e12e964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_118": {
									"entryPoint": null,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_89": {
									"entryPoint": null,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 426,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100956040518060400160405280600c81526020017f4120636f6e73747263746f7200000000000000000000000000000000000000008152506101aa60201b60201c565b6100d96040518060400160405280600c81526020017f4220636f6e73747263746f7200000000000000000000000000000000000000008152506101aa60201b60201c565b61011d6040518060400160405280600c81526020017f4520636f6e73747263746f7200000000000000000000000000000000000000008152506101aa60201b60201c565b6101616040518060400160405280600c81526020017f4320636f6e73747263746f7200000000000000000000000000000000000000008152506101aa60201b60201c565b6101a56040518060400160405280600c81526020017f4420636f6e73747263746f7200000000000000000000000000000000000000008152506101aa60201b60201c565b610296565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516101d99190610274565b60405180910390a150565b600081519050919050565b600082825260208201905092915050565b60005b8381101561021e578082015181840152602081019050610203565b60008484015250505050565b6000601f19601f8301169050919050565b6000610246826101e4565b61025081856101ef565b9350610260818560208601610200565b6102698161022a565b840191505092915050565b6000602082019050818103600083015261028e818461023b565b905092915050565b6103b4806102a56000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600881526020017f44206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600781526020017f44206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef919061035c565b60405180910390a150565b6101386040518060400160405280600881526020017f43206265666f72650000000000000000000000000000000000000000000000008152506100c0565b610140610180565b61017e6040518060400160405280600781526020017f43206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b6101be6040518060400160405280600881526020017f45206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6101c6610206565b6102046040518060400160405280600781526020017f45206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b6102446040518060400160405280600881526020017f42206265666f72650000000000000000000000000000000000000000000000008152506100c0565b61024c61028c565b61028a6040518060400160405280600781526020017f42206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b6102ca6040518060400160405280600381526020017f666f6f00000000000000000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156103065780820151818401526020810190506102eb565b60008484015250505050565b6000601f19601f8301169050919050565b600061032e826102cc565b61033881856102d7565b93506103488185602086016102e8565b61035181610312565b840191505092915050565b600060208201905081810360008301526103768184610323565b90509291505056fea2646970667358221220028896498a638e936cb2f2ed02d573194411b5739644b47250ceaa7bbb5e12e964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x95 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4120636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xD9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4220636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4520636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x161 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4320636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4420636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x203 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x250 DUP2 DUP6 PUSH2 0x1EF JUMP JUMPDEST SWAP4 POP PUSH2 0x260 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E DUP2 DUP5 PUSH2 0x23B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B4 DUP1 PUSH2 0x2A5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4420616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4320616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x204 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4520616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x244 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x28C JUMP JUMPDEST PUSH2 0x28A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4220616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x306 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E DUP3 PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x338 DUP2 DUP6 PUSH2 0x2D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x348 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x351 DUP2 PUSH2 0x312 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x376 DUP2 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL DUP9 SWAP7 0x49 DUP11 PUSH4 0x8E936CB2 CALLCODE 0xED MUL 0xD5 PUSH20 0x194411B5739644B47250CEAA7BBB5E12E964736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "3858:293:0:-:0;;;3884:79;;;;;;;;;;2817:10;2801:5;;:27;;;;;;;;;;;;;;;;;;3043:19;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3190;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3428;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3666;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3909;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3858:293;;2878:81;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;3858:293:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@foo_107": {
									"entryPoint": 384,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@foo_136": {
									"entryPoint": 250,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@foo_169": {
									"entryPoint": 58,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@foo_49": {
									"entryPoint": 652,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@foo_78": {
									"entryPoint": 518,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 192,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600881526020017f44206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600781526020017f44206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef919061035c565b60405180910390a150565b6101386040518060400160405280600881526020017f43206265666f72650000000000000000000000000000000000000000000000008152506100c0565b610140610180565b61017e6040518060400160405280600781526020017f43206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b6101be6040518060400160405280600881526020017f45206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6101c6610206565b6102046040518060400160405280600781526020017f45206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b6102446040518060400160405280600881526020017f42206265666f72650000000000000000000000000000000000000000000000008152506100c0565b61024c61028c565b61028a6040518060400160405280600781526020017f42206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b6102ca6040518060400160405280600381526020017f666f6f00000000000000000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b838110156103065780820151818401526020810190506102eb565b60008484015250505050565b6000601f19601f8301169050919050565b600061032e826102cc565b61033881856102d7565b93506103488185602086016102e8565b61035181610312565b840191505092915050565b600060208201905081810360008301526103768184610323565b90509291505056fea2646970667358221220028896498a638e936cb2f2ed02d573194411b5739644b47250ceaa7bbb5e12e964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4420616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4320616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x204 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4520616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x244 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x28C JUMP JUMPDEST PUSH2 0x28A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4220616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x306 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E DUP3 PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x338 DUP2 DUP6 PUSH2 0x2D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x348 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x351 DUP2 PUSH2 0x312 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x376 DUP2 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL DUP9 SWAP7 0x49 DUP11 PUSH4 0x8E936CB2 CALLCODE 0xED MUL 0xD5 PUSH20 0x194411B5739644B47250CEAA7BBB5E12E964736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "3858:293:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3991:118;;;:::i;:::-;;;4039:15;;;;;;;;;;;;;;;;;;:3;:15::i;:::-;4065:11;:9;:11::i;:::-;4087:14;;;;;;;;;;;;;;;;;;:3;:14::i;:::-;3991:118::o;2878:81::-;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;3699:150::-;3779:15;;;;;;;;;;;;;;;;;;:3;:15::i;:::-;3805:11;:9;:11::i;:::-;3827:14;;;;;;;;;;;;;;;;;;:3;:14::i;:::-;3699:150::o;3461:::-;3541:15;;;;;;;;;;;;;;;;;;:3;:15::i;:::-;3567:11;:9;:11::i;:::-;3589:14;;;;;;;;;;;;;;;;;;:3;:14::i;:::-;3461:150::o;3223:::-;3303:15;;;;;;;;;;;;;;;;;;:3;:15::i;:::-;3329:11;:9;:11::i;:::-;3351:14;;;;;;;;;;;;;;;;;;:3;:14::i;:::-;3223:150::o;3076:59::-;3117:10;;;;;;;;;;;;;;;;;;:3;:10::i;:::-;3076:59::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "189600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"foo()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3858,
									"end": 4151,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2817,
									"end": 2827,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "4120636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "4220636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3190,
									"end": 3193,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3190,
									"end": 3193,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3190,
									"end": 3209,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "4520636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3428,
									"end": 3431,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3428,
									"end": 3431,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "4320636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3666,
									"end": 3669,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3666,
									"end": 3669,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 3666,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "PUSH",
									"source": 0,
									"value": "4420636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3909,
									"end": 3912,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3909,
									"end": 3912,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 3909,
									"end": 3928,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
								},
								{
									"begin": 2943,
									"end": 2950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2939,
									"end": 2951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 112,
									"end": 281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 196,
									"end": 207,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 236,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 225,
									"end": 228,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 218,
									"end": 237,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 270,
									"end": 274,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 265,
									"end": 268,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 261,
									"end": 275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 287,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 392,
									"end": 398,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 389,
									"end": 390,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 477,
									"end": 478,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 472,
									"end": 475,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 468,
									"end": 479,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 462,
									"end": 480,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 458,
									"end": 459,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 453,
									"end": 456,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 449,
									"end": 460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 442,
									"end": 481,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 414,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 411,
									"end": 412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 407,
									"end": 417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 525,
									"end": 526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 522,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 511,
									"end": 514,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 507,
									"end": 523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 500,
									"end": 527,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 349,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 539,
									"end": 641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 633,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 627,
									"end": 634,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 615,
									"end": 620,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 611,
									"end": 625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 607,
									"end": 635,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 796,
									"end": 801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 763,
									"end": 802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 880,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 818,
									"end": 889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 818,
									"end": 889,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 956,
									"end": 962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 951,
									"end": 954,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 944,
									"end": 948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 937,
									"end": 942,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 933,
									"end": 949,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 898,
									"end": 963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 898,
									"end": 963,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1010,
									"end": 1016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 988,
									"end": 1017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 983,
									"end": 986,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 979,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 739,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1143,
									"end": 1147,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1179,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1184,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1220,
									"end": 1240,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1214,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1218,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1241,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1331,
									"end": 1335,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1328,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1258,
									"end": 1336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3858,
									"end": 4151,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220028896498a638e936cb2f2ed02d573194411b5739644b47250ceaa7bbb5e12e964736f6c63430008110033",
									".code": [
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "C2985578"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 4151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4109,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3991,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3991,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3991,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4109,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3991,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4109,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4109,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3991,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "44206265666F7265000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4039,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4039,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4065,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4065,
											"end": 4076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4076,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4065,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "4420616674657200000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4087,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2939,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3699,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 0,
											"value": "43206265666F7265000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3779,
											"end": 3794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3805,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3805,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3816,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3805,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "4320616674657200000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3827,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "45206265666F7265000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3541,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3567,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3567,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "4520616674657200000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3589,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3223,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "42206265666F7265000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3303,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3329,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3329,
											"end": 3340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3340,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3329,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "4220616674657200000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3351,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3351,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "666F6F0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3117,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_14_合约_继承_多重继承与线性化.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo()": "c2985578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"foo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":\"D\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":{\"keccak256\":\"0x387376c64b3aa140286eed11f381daae871f8b02c20fe8495ef59f4f566cec33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://149cdd459980daaf88bd5c9c56d8a978fd3ffe1771e281cf1cdfff7e07b8964b\",\"dweb:/ipfs/QmcCTGzToVGvMYg7SSPuUodzW2HBhiN5KJh8VfDitNdMaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "合约/_14_合约_继承_多重继承与线性化.sol:D",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"E": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "foo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3380:3614  contract E is A {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3403:3455  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2817:2827  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2806  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2828  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  tag_7\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4120636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3046  log */\n  shl(0x20, tag_8)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3043:3062  log(\"A constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3428:3447  log(\"E constrctor\") */\n  tag_10\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4520636f6e73747263746f720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3428:3431  log */\n  shl(0x20, tag_8)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3428:3447  log(\"E constrctor\") */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3380:3614  contract E is A {... */\n  jump(tag_11)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\ntag_8:\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n  dup2\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n  mload(0x40)\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_15:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:281   */\ntag_16:\n    /* \"#utility.yul\":196:207   */\n  0x00\n    /* \"#utility.yul\":230:236   */\n  dup3\n    /* \"#utility.yul\":225:228   */\n  dup3\n    /* \"#utility.yul\":218:237   */\n  mstore\n    /* \"#utility.yul\":270:274   */\n  0x20\n    /* \"#utility.yul\":265:268   */\n  dup3\n    /* \"#utility.yul\":261:275   */\n  add\n    /* \"#utility.yul\":246:275   */\n  swap1\n  pop\n    /* \"#utility.yul\":112:281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":287:533   */\ntag_17:\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":378:491   */\ntag_24:\n    /* \"#utility.yul\":392:398   */\n  dup4\n    /* \"#utility.yul\":389:390   */\n  dup2\n    /* \"#utility.yul\":386:399   */\n  lt\n    /* \"#utility.yul\":378:491   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":477:478   */\n  dup1\n    /* \"#utility.yul\":472:475   */\n  dup3\n    /* \"#utility.yul\":468:479   */\n  add\n    /* \"#utility.yul\":462:480   */\n  mload\n    /* \"#utility.yul\":458:459   */\n  dup2\n    /* \"#utility.yul\":453:456   */\n  dup5\n    /* \"#utility.yul\":449:460   */\n  add\n    /* \"#utility.yul\":442:481   */\n  mstore\n    /* \"#utility.yul\":414:416   */\n  0x20\n    /* \"#utility.yul\":411:412   */\n  dup2\n    /* \"#utility.yul\":407:417   */\n  add\n    /* \"#utility.yul\":402:417   */\n  swap1\n  pop\n    /* \"#utility.yul\":378:491   */\n  jump(tag_24)\ntag_26:\n    /* \"#utility.yul\":525:526   */\n  0x00\n    /* \"#utility.yul\":516:522   */\n  dup5\n    /* \"#utility.yul\":511:514   */\n  dup5\n    /* \"#utility.yul\":507:523   */\n  add\n    /* \"#utility.yul\":500:527   */\n  mstore\n    /* \"#utility.yul\":349:533   */\n  pop\n    /* \"#utility.yul\":287:533   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":539:641   */\ntag_18:\n    /* \"#utility.yul\":580:586   */\n  0x00\n    /* \"#utility.yul\":631:633   */\n  0x1f\n    /* \"#utility.yul\":627:634   */\n  not\n    /* \"#utility.yul\":622:624   */\n  0x1f\n    /* \"#utility.yul\":615:620   */\n  dup4\n    /* \"#utility.yul\":611:625   */\n  add\n    /* \"#utility.yul\":607:635   */\n  and\n    /* \"#utility.yul\":597:635   */\n  swap1\n  pop\n    /* \"#utility.yul\":539:641   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":647:1024   */\ntag_19:\n    /* \"#utility.yul\":735:738   */\n  0x00\n    /* \"#utility.yul\":763:802   */\n  tag_29\n    /* \"#utility.yul\":796:801   */\n  dup3\n    /* \"#utility.yul\":763:802   */\n  tag_15\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":818:889   */\n  tag_30\n    /* \"#utility.yul\":882:888   */\n  dup2\n    /* \"#utility.yul\":877:880   */\n  dup6\n    /* \"#utility.yul\":818:889   */\n  tag_16\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":811:889   */\n  swap4\n  pop\n    /* \"#utility.yul\":898:963   */\n  tag_31\n    /* \"#utility.yul\":956:962   */\n  dup2\n    /* \"#utility.yul\":951:954   */\n  dup6\n    /* \"#utility.yul\":944:948   */\n  0x20\n    /* \"#utility.yul\":937:942   */\n  dup7\n    /* \"#utility.yul\":933:949   */\n  add\n    /* \"#utility.yul\":898:963   */\n  tag_17\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":988:1017   */\n  tag_32\n    /* \"#utility.yul\":1010:1016   */\n  dup2\n    /* \"#utility.yul\":988:1017   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":983:986   */\n  dup5\n    /* \"#utility.yul\":979:1018   */\n  add\n    /* \"#utility.yul\":972:1018   */\n  swap2\n  pop\n    /* \"#utility.yul\":739:1024   */\n  pop\n    /* \"#utility.yul\":647:1024   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1030:1343   */\ntag_14:\n    /* \"#utility.yul\":1143:1147   */\n  0x00\n    /* \"#utility.yul\":1181:1183   */\n  0x20\n    /* \"#utility.yul\":1170:1179   */\n  dup3\n    /* \"#utility.yul\":1166:1184   */\n  add\n    /* \"#utility.yul\":1158:1184   */\n  swap1\n  pop\n    /* \"#utility.yul\":1230:1239   */\n  dup2\n    /* \"#utility.yul\":1224:1228   */\n  dup2\n    /* \"#utility.yul\":1220:1240   */\n  sub\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1205:1214   */\n  dup4\n    /* \"#utility.yul\":1201:1218   */\n  add\n    /* \"#utility.yul\":1194:1241   */\n  mstore\n    /* \"#utility.yul\":1258:1336   */\n  tag_34\n    /* \"#utility.yul\":1331:1335   */\n  dup2\n    /* \"#utility.yul\":1322:1328   */\n  dup5\n    /* \"#utility.yul\":1258:1336   */\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1250:1336   */\n  swap1\n  pop\n    /* \"#utility.yul\":1030:1343   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3380:3614  contract E is A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3380:3614  contract E is A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc2985578\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3461:3611  function foo() public virtual override {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3541:3556  log(\"E before\") */\n      tag_7\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x45206265666f7265000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3541:3544  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3541:3556  log(\"E before\") */\n      jump\t// in\n    tag_7:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3567:3578  super.foo() */\n      tag_9\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3567:3576  super.foo */\n      tag_10\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3567:3578  super.foo() */\n      jump\t// in\n    tag_9:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3589:3603  log(\"E after\") */\n      tag_11\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x4520616674657200000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3589:3592  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3589:3603  log(\"E after\") */\n      jump\t// in\n    tag_11:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3461:3611  function foo() public virtual override {... */\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2943:2950  message */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2939:2951  Log(message) */\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2878:2959  function log(string memory message) internal {... */\n      pop\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n    tag_10:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      tag_16\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x666f6f0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3120  log */\n      tag_8\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3117:3127  log(\"foo\") */\n      jump\t// in\n    tag_16:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":3076:3135  function foo() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_17:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_18:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_19:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_26:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_26)\n    tag_28:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_20:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_21:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_31\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_17\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":818:889   */\n      tag_32\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_18\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_33\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_19\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":988:1017   */\n      tag_34\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_20\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_14:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_36\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_21\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d755ee9a8203ccd750bde41665cb742b1301329f3b71f44ef5a7303cc8695ca164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_89": {
									"entryPoint": null,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 222,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100956040518060400160405280600c81526020017f4120636f6e73747263746f7200000000000000000000000000000000000000008152506100de60201b60201c565b6100d96040518060400160405280600c81526020017f4520636f6e73747263746f7200000000000000000000000000000000000000008152506100de60201b60201c565b6101ca565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab8160405161010d91906101a8565b60405180910390a150565b600081519050919050565b600082825260208201905092915050565b60005b83811015610152578082015181840152602081019050610137565b60008484015250505050565b6000601f19601f8301169050919050565b600061017a82610118565b6101848185610123565b9350610194818560208601610134565b61019d8161015e565b840191505092915050565b600060208201905081810360008301526101c2818461016f565b905092915050565b610222806101d96000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600881526020017f45206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600781526020017f45206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef91906101ca565b60405180910390a150565b6101386040518060400160405280600381526020017f666f6f00000000000000000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b83811015610174578082015181840152602081019050610159565b60008484015250505050565b6000601f19601f8301169050919050565b600061019c8261013a565b6101a68185610145565b93506101b6818560208601610156565b6101bf81610180565b840191505092915050565b600060208201905081810360008301526101e48184610191565b90509291505056fea2646970667358221220d755ee9a8203ccd750bde41665cb742b1301329f3b71f44ef5a7303cc8695ca164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x95 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4120636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xDE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xD9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4520636F6E73747263746F720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xDE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x152 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x137 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A DUP3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x184 DUP2 DUP6 PUSH2 0x123 JUMP JUMPDEST SWAP4 POP PUSH2 0x194 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x19D DUP2 PUSH2 0x15E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C2 DUP2 DUP5 PUSH2 0x16F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x222 DUP1 PUSH2 0x1D9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4520616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP3 PUSH2 0x13A JUMP JUMPDEST PUSH2 0x1A6 DUP2 DUP6 PUSH2 0x145 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x1BF DUP2 PUSH2 0x180 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E4 DUP2 DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SSTORE 0xEE SWAP11 DUP3 SUB 0xCC 0xD7 POP 0xBD 0xE4 AND PUSH6 0xCB742B130132 SWAP16 EXTCODESIZE PUSH18 0xF44EF5A7303CC8695CA164736F6C63430008 GT STOP CALLER ",
							"sourceMap": "3380:234:0:-:0;;;3403:52;;;;;;;;;;2817:10;2801:5;;:27;;;;;;;;;;;;;;;;;;3043:19;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3428;;;;;;;;;;;;;;;;;;:3;;;:19;;:::i;:::-;3380:234;;2878:81;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;3380:234:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@foo_107": {
									"entryPoint": 58,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@foo_49": {
									"entryPoint": 250,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log_28": {
									"entryPoint": 192,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1346:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c298557814610030575b600080fd5b61003861003a565b005b6100786040518060400160405280600881526020017f45206265666f72650000000000000000000000000000000000000000000000008152506100c0565b6100806100fa565b6100be6040518060400160405280600781526020017f45206166746572000000000000000000000000000000000000000000000000008152506100c0565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040516100ef91906101ca565b60405180910390a150565b6101386040518060400160405280600381526020017f666f6f00000000000000000000000000000000000000000000000000000000008152506100c0565b565b600081519050919050565b600082825260208201905092915050565b60005b83811015610174578082015181840152602081019050610159565b60008484015250505050565b6000601f19601f8301169050919050565b600061019c8261013a565b6101a68185610145565b93506101b6818560208601610156565b6101bf81610180565b840191505092915050565b600060208201905081810360008301526101e48184610191565b90509291505056fea2646970667358221220d755ee9a8203ccd750bde41665cb742b1301329f3b71f44ef5a7303cc8695ca164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45206265666F7265000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4520616674657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB DUP2 PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x138 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x666F6F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xC0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP3 PUSH2 0x13A JUMP JUMPDEST PUSH2 0x1A6 DUP2 DUP6 PUSH2 0x145 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x1BF DUP2 PUSH2 0x180 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E4 DUP2 DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SSTORE 0xEE SWAP11 DUP3 SUB 0xCC 0xD7 POP 0xBD 0xE4 AND PUSH6 0xCB742B130132 SWAP16 EXTCODESIZE PUSH18 0xF44EF5A7303CC8695CA164736F6C63430008 GT STOP CALLER ",
							"sourceMap": "3380:234:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3461:150;;;:::i;:::-;;;3541:15;;;;;;;;;;;;;;;;;;:3;:15::i;:::-;3567:11;:9;:11::i;:::-;3589:14;;;;;;;;;;;;;;;;;;:3;:14::i;:::-;3461:150::o;2878:81::-;2939:12;2943:7;2939:12;;;;;;:::i;:::-;;;;;;;;2878:81;:::o;3076:59::-;3117:10;;;;;;;;;;;;;;;;;;:3;:10::i;:::-;3076:59::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "109200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"foo()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3380,
									"end": 3614,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3403,
									"end": 3455,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2817,
									"end": 2827,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "4120636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3046,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "4520636F6E73747263746F720000000000000000000000000000000000000000"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3428,
									"end": 3431,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3428,
									"end": 3431,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3428,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
								},
								{
									"begin": 2943,
									"end": 2950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2939,
									"end": 2951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2939,
									"end": 2951,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 112,
									"end": 281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 196,
									"end": 207,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 236,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 225,
									"end": 228,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 218,
									"end": 237,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 270,
									"end": 274,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 265,
									"end": 268,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 261,
									"end": 275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 246,
									"end": 275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 287,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 392,
									"end": 398,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 389,
									"end": 390,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 477,
									"end": 478,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 472,
									"end": 475,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 468,
									"end": 479,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 462,
									"end": 480,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 458,
									"end": 459,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 453,
									"end": 456,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 449,
									"end": 460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 442,
									"end": 481,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 414,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 411,
									"end": 412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 407,
									"end": 417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 402,
									"end": 417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 378,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 378,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 525,
									"end": 526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 522,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 511,
									"end": 514,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 507,
									"end": 523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 500,
									"end": 527,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 349,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 287,
									"end": 533,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 539,
									"end": 641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 633,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 627,
									"end": 634,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 615,
									"end": 620,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 611,
									"end": 625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 607,
									"end": 635,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 597,
									"end": 635,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 641,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 796,
									"end": 801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 763,
									"end": 802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 763,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 763,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 880,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 818,
									"end": 889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 818,
									"end": 889,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 818,
									"end": 889,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 811,
									"end": 889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 956,
									"end": 962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 951,
									"end": 954,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 944,
									"end": 948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 937,
									"end": 942,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 933,
									"end": 949,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 898,
									"end": 963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 963,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 898,
									"end": 963,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1010,
									"end": 1016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 988,
									"end": 1017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 988,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 983,
									"end": 986,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 979,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 972,
									"end": 1018,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 739,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 1024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1143,
									"end": 1147,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1179,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1184,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1220,
									"end": 1240,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1214,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1218,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1241,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1331,
									"end": 1335,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1328,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1258,
									"end": 1336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1258,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1336,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3614,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d755ee9a8203ccd750bde41665cb742b1301329f3b71f44ef5a7303cc8695ca164736f6c63430008110033",
									".code": [
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "C2985578"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3461,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3461,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "45206265666F7265000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3541,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3567,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3567,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "4520616674657200000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3589,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3589,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2939,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3076,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "666F6F0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3117,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_14_合约_继承_多重继承与线性化.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo()": "c2985578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"foo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":\"E\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":{\"keccak256\":\"0x387376c64b3aa140286eed11f381daae871f8b02c20fe8495ef59f4f566cec33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://149cdd459980daaf88bd5c9c56d8a978fd3ffe1771e281cf1cdfff7e07b8964b\",\"dweb:/ipfs/QmcCTGzToVGvMYg7SSPuUodzW2HBhiN5KJh8VfDitNdMaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "合约/_14_合约_继承_多重继承与线性化.sol:E",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"O": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2758:2992  contract O {... */\n  mstore(0x40, 0x80)\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2776:2836  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2817:2827  msg.sender */\n  caller\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2806  owner */\n  0x00\n  dup1\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2801:2828  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2758:2992  contract O {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_14_\\xe5\\x90\\x88\\xe7\\xba\\xa6_\\xe7\\xbb\\xa7\\xe6\\x89\\xbf_\\xe5\\xa4\\x9a\\xe9\\x87\\x8d\\xe7\\xbb\\xa7\\xe6\\x89\\xbf\\xe4\\xb8\\x8e\\xe7\\xba\\xbf\\xe6\\x80\\xa7\\xe5\\x8c\\x96.sol\":2758:2992  contract O {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209a404c3d1aa1c5098479826ff92f14e3b52bfda6d0cb213031df0640ff56409264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea26469706673582212209a404c3d1aa1c5098479826ff92f14e3b52bfda6d0cb213031df0640ff56409264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 BLOCKHASH 0x4C RETURNDATASIZE BYTE LOG1 0xC5 MULMOD DUP5 PUSH26 0x826FF92F14E3B52BFDA6D0CB213031DF0640FF56409264736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "2758:234:0:-:0;;;2776:60;;;;;;;;;;2817:10;2801:5;;:27;;;;;;;;;;;;;;;;;;2758:234;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212209a404c3d1aa1c5098479826ff92f14e3b52bfda6d0cb213031df0640ff56409264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 BLOCKHASH 0x4C RETURNDATASIZE BYTE LOG1 0xC5 MULMOD DUP5 PUSH26 0x826FF92F14E3B52BFDA6D0CB213031DF0640FF56409264736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "2758:234:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "24332",
								"totalCost": "36932"
							},
							"internal": {
								"log(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2758,
									"end": 2992,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2758,
									"end": 2992,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2758,
									"end": 2992,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2836,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2817,
									"end": 2827,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2801,
									"end": 2806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2758,
									"end": 2992,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2758,
									"end": 2992,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2758,
									"end": 2992,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2758,
									"end": 2992,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2758,
									"end": 2992,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2758,
									"end": 2992,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2758,
									"end": 2992,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a404c3d1aa1c5098479826ff92f14e3b52bfda6d0cb213031df0640ff56409264736f6c63430008110033",
									".code": [
										{
											"begin": 2758,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2758,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2992,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"合约/_14_合约_继承_多重继承与线性化.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"\\u5728\\u591a\\u91cd\\u7ee7\\u627f\\u4e2d, \\u4e00\\u4e2a\\u5b50\\u7c7b\\u53ef\\u4ee5\\u6709\\u591a\\u4e2a\\u7236\\u7c7b, \\u7236\\u7c7b\\u6709\\u53ef\\u4ee5\\u6709\\u591a\\u4e2a\\u7236\\u7c7b, \\u6700\\u7ec8\\u6784\\u6210\\u4e00\\u4e2aDAG\\u56fe \\u5982\\u4e0b\\u56fe:  O A -> O B -> O C -> O K1 -> B, A K2 -> C, A Z -> K2, K1 1. \\u5728\\u6784\\u9020\\u7684\\u65f6\\u5019, \\u4e0d\\u80fd\\u540c\\u65f6\\u6784\\u9020\\u4e24\\u4e2a\\u540c\\u5c42\\u7ea7\\u7684\\u7236\\u7c7b, \\u90a3\\u4e48\\u5e94\\u8be5\\u6309\\u7167\\u4ec0\\u4e48\\u987a\\u5e8f\\u6765\\u6784\\u9020\\u7236\\u7c7b\\u5bf9\\u8c61 2. \\u5728\\u8c03\\u7528super.foo()\\u7684\\u65f6\\u5019, \\u8fd9\\u91cc\\u7684super\\u5230\\u5e95\\u662f\\u6307\\u7684\\u54ea\\u4e00\\u4e2a 3. \\u90a3\\u4e48\\u5728\\u8c03\\u7528\\u65b9\\u6cd5\\u7684\\u65f6\\u5019, \\u5b50\\u7c7b\\u5f80\\u4e0a\\u5bfb\\u627e\\u7236\\u7c7b\\u65b9\\u6cd5\\u7684\\u987a\\u5e8f\\u662f\\u4ec0\\u4e48\\uff1f \\u5728python\\u4e2d\\u4f7f\\u7528C3 \\u7ebf\\u6027\\u5316\\u6765\\u786e\\u5b9a\\u65b9\\u6cd5\\u7684\\u8c03\\u7528\\u987a\\u5e8f\\uff0c\\u4e5f\\u53eb\\u65b9\\u6cd5\\u89e3\\u6790\\u987a\\u5e8f\\uff08Method Resolution Order\\uff0cMRO\\uff09 \\u7ea6\\u5b9a\\u4ee5\\u4e0b\\u7b26\\u53f7 - \\u5982\\u679cA\\u7ee7\\u627f\\u81eaB,C, \\u8bb0\\u4e3aA->B, C - merge()\\u8868\\u793amerge\\u7b97\\u6cd5 - L(A)\\u8868\\u793aA\\u7684\\u7ebf\\u6027\\u5316\\u7ed3\\u679c\\u7684\\u7b80\\u5199 - [B, C, D] : \\u67d0\\u4e2a\\u7c7b\\u7684\\u7ebf\\u6027\\u5316\\u7ed3\\u679c\\u7684\\u5177\\u4f53\\u503c \\u5229\\u7528\\u4ee5\\u4e0a\\u7b26\\u53f7\\uff0c\\u8be5\\u7b97\\u6cd5\\u5f52\\u7eb3\\u5982\\u4e0b\\uff1a - \\u5bf9\\u4e8e\\u7ee7\\u627f\\u5355\\u4e2a\\u57fa\\u7c7b\\u7684\\u60c5\\u51b5 A->B, \\u5219\\u6709L(A) = [A, B] - \\u5bf9\\u4e8e\\u7ee7\\u627f\\u591a\\u4e2a\\u57fa\\u7c7b\\u7684\\u60c5\\u51b5 A->B,C,D,\\u5219\\u6709 L(A) = [A] + merge(L(B), L(C), L(D) , [B,C,D]) - \\u5bf9\\u4e8emerge([X], [Y], [Z]),\\u904d\\u5386XYZ\\u5e8f\\u5217\\u7684\\u7b2c\\u4e00\\u4e2a\\u5143\\u7d20\\uff0c\\u82e5\\u8be5\\u5143\\u7d20\\u662f\\u5176\\u4ed6\\u5e8f\\u5217\\u4e2d\\u7684\\u7b2c\\u4e00\\u4e2a\\u5143\\u7d20\\uff0c\\u6216\\u4e0d\\u5728\\u5176\\u4ed6\\u5e8f\\u5217\\u51fa\\u73b0\\uff0c \\u5219\\u4ece\\u6240\\u6709\\u5e8f\\u5217\\u4e2d\\u5220\\u9664\\u8fd9\\u4e2a\\u5143\\u7d20\\uff0c\\u5408\\u5e76\\u5230MRO\\u4e2d\\uff0c\\u7ee7\\u7eed\\u904d\\u5386X\\u7684\\u4e0b\\u4e00\\u4e2a\\u5143\\u7d20\\uff1b\\u5426\\u5219\\u4fdd\\u7559\\u8be5\\u5143\\u7d20\\uff0c\\u5e76\\u67e5\\u770b\\u4e0b\\u4e00\\u4e2a\\u5e8f\\u5217\\u7684\\u7b2c\\u4e00\\u4e2a\\u5143\\u7d20\\u662f\\u5426\\u7b26\\u5408\\u89c4\\u5219\\u3002 - \\u76f4\\u5230merge\\u64cd\\u4f5c\\u7684\\u5e8f\\u5217\\u4e3a\\u7a7a - \\u5982\\u679cmerge\\u64cd\\u4f5c\\u7684\\u5e8f\\u5217\\u65e0\\u6cd5\\u4e3a\\u7a7a\\uff0c\\u5219\\u8bf4\\u660e\\u4e0d\\u5408\\u6cd5\\u3002 \\u5728python\\u4e2d, \\u786e\\u5b9aZ\\u7684\\u7236\\u7c7b\\u65b9\\u6cd5\\u8c03\\u7528\\u987a\\u5e8f\\u7684\\u7b97\\u6cd5\\u8ba1\\u7b97\\u5982\\u4e0b: L(O) := [O] L(A) := [A] + merge(L(O), [O]) = [A] + merge([O], [O]) = [A, O] L(B) := [B, O]//\\u8ba1\\u7b97\\u8fc7\\u7a0b\\u7c7b\\u4f3cL(A) L(C) := [C, O]//\\u8ba1\\u7b97\\u8fc7\\u7a0b\\u7c7b\\u4f3cL(A) L(K1) := [K1] + merge(L(B), L(A), [B, A]) = [K1] + merge([B, O], [A, O], [B, A]) //\\u53d6\\u4e00\\u4e2a\\u5e8f\\u5217\\u7684\\u7b2c\\u4e00\\u4e2a\\u5143\\u7d20\\uff0c\\u662f\\u5176\\u4ed6\\u5e8f\\u5217\\u4e2d\\u7684\\u7b2c\\u4e00\\u4e2a\\u5143\\u7d20\\uff0c\\u6216\\u4e0d\\u5728\\u5176\\u4ed6\\u5e8f\\u5217\\u51fa\\u73b0\\uff0c\\u7b26\\u5408\\u6761\\u4ef6\\u662fB = [K1, B] + merge([O], [A, O], [A]) = [K1, B, A] + merge([O], [O]) = [K1, B, A, O] L(K2) := [K2, C, A, O]//\\u8ba1\\u7b97\\u8fc7\\u7a0b\\u7c7b\\u4f3cL(K1) L(Z) := [Z] + merge(L(K2), L(K1), [K2, K1]) = [Z] + merge([K2, C, A, O], [K1, B, A, O], [K2, K1]) = [Z, K2] + merge([C, A, O], [K1, B, A, O], [K1]) = [Z, K2, C] + merge([A, O], [K1, B, A, O], [K1]) = [Z, K2, C, K1] + merge([A, O], [B, A, O]) = [Z, K2, C, K1, B] + merge([A, O], [A, O]) = [Z, K2, C, K1, B, A] + merge([O], [O]) = [Z, K2, C, K1, B, A, O]\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":\"O\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_14_\\u5408\\u7ea6_\\u7ee7\\u627f_\\u591a\\u91cd\\u7ee7\\u627f\\u4e0e\\u7ebf\\u6027\\u5316.sol\":{\"keccak256\":\"0x387376c64b3aa140286eed11f381daae871f8b02c20fe8495ef59f4f566cec33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://149cdd459980daaf88bd5c9c56d8a978fd3ffe1771e281cf1cdfff7e07b8964b\",\"dweb:/ipfs/QmcCTGzToVGvMYg7SSPuUodzW2HBhiN5KJh8VfDitNdMaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "合约/_14_合约_继承_多重继承与线性化.sol:O",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "在多重继承中, 一个子类可以有多个父类, 父类有可以有多个父类, 最终构成一个DAG图 如下图:  O A -> O B -> O C -> O K1 -> B, A K2 -> C, A Z -> K2, K1 1. 在构造的时候, 不能同时构造两个同层级的父类, 那么应该按照什么顺序来构造父类对象 2. 在调用super.foo()的时候, 这里的super到底是指的哪一个 3. 那么在调用方法的时候, 子类往上寻找父类方法的顺序是什么？ 在python中使用C3 线性化来确定方法的调用顺序，也叫方法解析顺序（Method Resolution Order，MRO） 约定以下符号 - 如果A继承自B,C, 记为A->B, C - merge()表示merge算法 - L(A)表示A的线性化结果的简写 - [B, C, D] : 某个类的线性化结果的具体值 利用以上符号，该算法归纳如下： - 对于继承单个基类的情况 A->B, 则有L(A) = [A, B] - 对于继承多个基类的情况 A->B,C,D,则有 L(A) = [A] + merge(L(B), L(C), L(D) , [B,C,D]) - 对于merge([X], [Y], [Z]),遍历XYZ序列的第一个元素，若该元素是其他序列中的第一个元素，或不在其他序列出现， 则从所有序列中删除这个元素，合并到MRO中，继续遍历X的下一个元素；否则保留该元素，并查看下一个序列的第一个元素是否符合规则。 - 直到merge操作的序列为空 - 如果merge操作的序列无法为空，则说明不合法。 在python中, 确定Z的父类方法调用顺序的算法计算如下: L(O) := [O] L(A) := [A] + merge(L(O), [O]) = [A] + merge([O], [O]) = [A, O] L(B) := [B, O]//计算过程类似L(A) L(C) := [C, O]//计算过程类似L(A) L(K1) := [K1] + merge(L(B), L(A), [B, A]) = [K1] + merge([B, O], [A, O], [B, A]) //取一个序列的第一个元素，是其他序列中的第一个元素，或不在其他序列出现，符合条件是B = [K1, B] + merge([O], [A, O], [A]) = [K1, B, A] + merge([O], [O]) = [K1, B, A, O] L(K2) := [K2, C, A, O]//计算过程类似L(K1) L(Z) := [Z] + merge(L(K2), L(K1), [K2, K1]) = [Z] + merge([K2, C, A, O], [K1, B, A, O], [K2, K1]) = [Z, K2] + merge([C, A, O], [K1, B, A, O], [K1]) = [Z, K2, C] + merge([A, O], [K1, B, A, O], [K1]) = [Z, K2, C, K1] + merge([A, O], [B, A, O]) = [Z, K2, C, K1, B] + merge([A, O], [A, O]) = [Z, K2, C, K1, B, A] + merge([O], [O]) = [Z, K2, C, K1, B, A, O]",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"合约/_14_合约_继承_多重继承与线性化.sol": {
				"ast": {
					"absolutePath": "合约/_14_合约_继承_多重继承与线性化.sol",
					"exportedSymbols": {
						"A": [
							50
						],
						"B": [
							79
						],
						"C": [
							137
						],
						"D": [
							170
						],
						"E": [
							108
						],
						"O": [
							31
						]
					},
					"id": 171,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "O",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:2688:0",
								"text": "在多重继承中, 一个子类可以有多个父类, 父类有可以有多个父类, 最终构成一个DAG图\n如下图:  O\nA -> O\nB -> O\nC -> O\nK1 -> B, A\nK2 -> C, A\nZ -> K2, K1\n1. 在构造的时候, 不能同时构造两个同层级的父类, 那么应该按照什么顺序来构造父类对象\n2. 在调用super.foo()的时候, 这里的super到底是指的哪一个\n3. 那么在调用方法的时候, 子类往上寻找父类方法的顺序是什么？\n在python中使用C3 线性化来确定方法的调用顺序，也叫方法解析顺序（Method Resolution Order，MRO）\n约定以下符号\n- 如果A继承自B,C, 记为A->B, C\n- merge()表示merge算法\n- L(A)表示A的线性化结果的简写\n- [B, C, D] : 某个类的线性化结果的具体值\n利用以上符号，该算法归纳如下：\n- 对于继承单个基类的情况 A->B, 则有L(A) = [A, B]\n- 对于继承多个基类的情况 A->B,C,D,则有 L(A) = [A] + merge(L(B), L(C), L(D) , [B,C,D])\n- 对于merge([X], [Y], [Z]),遍历XYZ序列的第一个元素，若该元素是其他序列中的第一个元素，或不在其他序列出现，\n则从所有序列中删除这个元素，合并到MRO中，继续遍历X的下一个元素；否则保留该元素，并查看下一个序列的第一个元素是否符合规则。\n- 直到merge操作的序列为空\n- 如果merge操作的序列无法为空，则说明不合法。\n在python中, 确定Z的父类方法调用顺序的算法计算如下:\nL(O) := [O]\nL(A) := [A] + merge(L(O), [O])\n= [A] + merge([O], [O])\n= [A, O]\nL(B) := [B, O]//计算过程类似L(A)\nL(C) := [C, O]//计算过程类似L(A)\nL(K1) := [K1] + merge(L(B), L(A), [B, A])\n= [K1] + merge([B, O], [A, O], [B, A])\n//取一个序列的第一个元素，是其他序列中的第一个元素，或不在其他序列出现，符合条件是B\n= [K1, B] + merge([O], [A, O], [A])\n= [K1, B, A] + merge([O], [O])\n= [K1, B, A, O]\nL(K2) := [K2, C, A, O]//计算过程类似L(K1)\nL(Z) := [Z] + merge(L(K2), L(K1), [K2, K1])\n= [Z] + merge([K2, C, A, O], [K1, B, A, O], [K2, K1])\n= [Z, K2] + merge([C, A, O], [K1, B, A, O], [K1])\n= [Z, K2, C] + merge([A, O], [K1, B, A, O], [K1])\n= [Z, K2, C, K1] + merge([A, O], [B, A, O])\n= [Z, K2, C, K1, B] + merge([A, O], [A, O])\n= [Z, K2, C, K1, B, A] + merge([O], [O])\n= [Z, K2, C, K1, B, A, O]"
							},
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "O",
							"nameLocation": "2767:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "2790:46:0",
										"statements": [
											{
												"expression": {
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 8,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2817:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2821:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2817:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 7,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2809:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 6,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2809:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2809:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2801:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "2801:27:0"
											}
										]
									},
									"id": 14,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2787:2:0"
									},
									"returnParameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2790:0:0"
									},
									"scope": 31,
									"src": "2776:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
									"id": 18,
									"name": "Log",
									"nameLocation": "2850:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2861:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "2854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 15,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2854:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2853:16:0"
									},
									"src": "2844:26:0"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "2923:36:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 24,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "2943:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 23,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "2939:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2939:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "EmitStatement",
												"src": "2934:17:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log",
									"nameLocation": "2887:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2905:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "2891:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 19,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2891:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:23:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2923:0:0"
									},
									"scope": 31,
									"src": "2878:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "2983:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 31,
									"src": "2967:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 29,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2967:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 171,
							"src": "2758:234:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 32,
										"name": "O",
										"nameLocations": [
											"3010:1:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 31,
										"src": "3010:1:0"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "3010:1:0"
								}
							],
							"canonicalName": "A",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 50,
							"linearizedBaseContracts": [
								50,
								31
							],
							"name": "A",
							"nameLocation": "3005:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "3032:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4120636f6e73747263746f72",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3047:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dd950b2549da70e34400075c2e50e04f67de2ef4ed05bef25f0cee5738c1c0c",
																"typeString": "literal_string \"A constrctor\""
															},
															"value": "A constrctor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_8dd950b2549da70e34400075c2e50e04f67de2ef4ed05bef25f0cee5738c1c0c",
																"typeString": "literal_string \"A constrctor\""
															}
														],
														"id": 36,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3043:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3043:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "3043:19:0"
											}
										]
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3032:0:0"
									},
									"scope": 50,
									"src": "3019:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "3106:29:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "666f6f",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3121:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41b1a0649752af1b28b3dc29a1556eee781e4a4c3a1f7f53f90fa834de098c4d",
																"typeString": "literal_string \"foo\""
															},
															"value": "foo"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_41b1a0649752af1b28b3dc29a1556eee781e4a4c3a1f7f53f90fa834de098c4d",
																"typeString": "literal_string \"foo\""
															}
														],
														"id": 44,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3117:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "3117:10:0"
											}
										]
									},
									"functionSelector": "c2985578",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "3085:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3088:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3106:0:0"
									},
									"scope": 50,
									"src": "3076:59:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 171,
							"src": "2996:142:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "A",
										"nameLocations": [
											"3156:1:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 50,
										"src": "3156:1:0"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "3156:1:0"
								}
							],
							"canonicalName": "B",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 79,
							"linearizedBaseContracts": [
								79,
								50,
								31
							],
							"name": "B",
							"nameLocation": "3151:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "3179:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4220636f6e73747263746f72",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3194:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b2a9fd56e456a1267bbf65e06ad73173e2c3131ababb6b6615ac101bd2a604fc",
																"typeString": "literal_string \"B constrctor\""
															},
															"value": "B constrctor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_b2a9fd56e456a1267bbf65e06ad73173e2c3131ababb6b6615ac101bd2a604fc",
																"typeString": "literal_string \"B constrctor\""
															}
														],
														"id": 55,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3190:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3190:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "3190:19:0"
											}
										]
									},
									"id": 60,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3176:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:0"
									},
									"scope": 79,
									"src": "3165:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "3262:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "42206265666f7265",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3307:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a112dbe90bfc9e6f732ab7261d81b07f8f881e6786da6de5020979966aa47e7",
																"typeString": "literal_string \"B before\""
															},
															"value": "B before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6a112dbe90bfc9e6f732ab7261d81b07f8f881e6786da6de5020979966aa47e7",
																"typeString": "literal_string \"B before\""
															}
														],
														"id": 64,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3303:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3303:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "3303:15:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 68,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3329:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_B_$79_$",
																"typeString": "type(contract super B)"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3335:3:0",
														"memberName": "foo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "3329:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3329:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "3329:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "42206166746572",
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3355:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe7191f38f1ad83f02abef90beddd019c35bdb98199093e5e3ba8438b6418e32",
																"typeString": "literal_string \"B after\""
															},
															"value": "B after"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_fe7191f38f1ad83f02abef90beddd019c35bdb98199093e5e3ba8438b6418e32",
																"typeString": "literal_string \"B after\""
															}
														],
														"id": 73,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3351:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "3351:14:0"
											}
										]
									},
									"functionSelector": "c2985578",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "3232:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 62,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3253:8:0"
									},
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3235:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:0:0"
									},
									"scope": 79,
									"src": "3223:150:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 171,
							"src": "3142:234:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "A",
										"nameLocations": [
											"3394:1:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 50,
										"src": "3394:1:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3394:1:0"
								}
							],
							"canonicalName": "E",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108,
								50,
								31
							],
							"name": "E",
							"nameLocation": "3389:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "3417:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4520636f6e73747263746f72",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3432:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae3aab32ebf04828153fb03265db3f751aa676f2313703911bdfb3e687d901d0",
																"typeString": "literal_string \"E constrctor\""
															},
															"value": "E constrctor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_ae3aab32ebf04828153fb03265db3f751aa676f2313703911bdfb3e687d901d0",
																"typeString": "literal_string \"E constrctor\""
															}
														],
														"id": 84,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3428:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3428:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "3428:19:0"
											}
										]
									},
									"id": 89,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3414:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3417:0:0"
									},
									"scope": 108,
									"src": "3403:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "3500:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "45206265666f7265",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3545:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29c079f3e2c7a5a2d8069822babc420d5fb78d96089e46ff64a0f9de95841a10",
																"typeString": "literal_string \"E before\""
															},
															"value": "E before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_29c079f3e2c7a5a2d8069822babc420d5fb78d96089e46ff64a0f9de95841a10",
																"typeString": "literal_string \"E before\""
															}
														],
														"id": 93,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3541:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3541:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "3541:15:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 97,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3567:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_E_$108_$",
																"typeString": "type(contract super E)"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3573:3:0",
														"memberName": "foo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "3567:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3567:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "3567:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "45206166746572",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3593:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3071d3a870c3ce23034802157230878f78a22b0ecf96ca33764c5b408617aa47",
																"typeString": "literal_string \"E after\""
															},
															"value": "E after"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3071d3a870c3ce23034802157230878f78a22b0ecf96ca33764c5b408617aa47",
																"typeString": "literal_string \"E after\""
															}
														],
														"id": 102,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3589:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3589:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "3589:14:0"
											}
										]
									},
									"functionSelector": "c2985578",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "3470:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 91,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3491:8:0"
									},
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3473:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:0"
									},
									"scope": 108,
									"src": "3461:150:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 171,
							"src": "3380:234:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "E",
										"nameLocations": [
											"3632:1:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 108,
										"src": "3632:1:0"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "3632:1:0"
								}
							],
							"canonicalName": "C",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 137,
							"linearizedBaseContracts": [
								137,
								108,
								50,
								31
							],
							"name": "C",
							"nameLocation": "3627:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "3655:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4320636f6e73747263746f72",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3670:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_65caad337690a820830581b645c9f028f9c64f8f8f4db525057a50831a913e95",
																"typeString": "literal_string \"C constrctor\""
															},
															"value": "C constrctor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_65caad337690a820830581b645c9f028f9c64f8f8f4db525057a50831a913e95",
																"typeString": "literal_string \"C constrctor\""
															}
														],
														"id": 113,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3666:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3666:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3666:19:0"
											}
										]
									},
									"id": 118,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3652:2:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3655:0:0"
									},
									"scope": 137,
									"src": "3641:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										107
									],
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3738:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "43206265666f7265",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3783:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd64ff4f627033460d6e587326f8ed5845a930fe43516d0a63099d55c3cbd57e",
																"typeString": "literal_string \"C before\""
															},
															"value": "C before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_bd64ff4f627033460d6e587326f8ed5845a930fe43516d0a63099d55c3cbd57e",
																"typeString": "literal_string \"C before\""
															}
														],
														"id": 122,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3779:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3779:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "3779:15:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 126,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3805:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_C_$137_$",
																"typeString": "type(contract super C)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3811:3:0",
														"memberName": "foo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "3805:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3805:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "3805:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "43206166746572",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0e00395bddb2000d243f4956064617f62e9bc2ccd71936744c2b499cc026b25",
																"typeString": "literal_string \"C after\""
															},
															"value": "C after"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c0e00395bddb2000d243f4956064617f62e9bc2ccd71936744c2b499cc026b25",
																"typeString": "literal_string \"C after\""
															}
														],
														"id": 131,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3827:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3827:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3827:14:0"
											}
										]
									},
									"functionSelector": "c2985578",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "3708:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3729:8:0"
									},
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3711:2:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3738:0:0"
									},
									"scope": 137,
									"src": "3699:150:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 171,
							"src": "3618:234:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "B",
										"nameLocations": [
											"3872:1:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 79,
										"src": "3872:1:0"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "3872:1:0"
								},
								{
									"baseName": {
										"id": 140,
										"name": "C",
										"nameLocations": [
											"3875:1:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 137,
										"src": "3875:1:0"
									},
									"id": 141,
									"nodeType": "InheritanceSpecifier",
									"src": "3875:1:0"
								}
							],
							"canonicalName": "D",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170,
								137,
								108,
								79,
								50,
								31
							],
							"name": "D",
							"nameLocation": "3867:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "3898:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4420636f6e73747263746f72",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3913:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a937586b67f272b0af975baa93b862ad173aebc2f0dbd1343eda05a61e7ebc77",
																"typeString": "literal_string \"D constrctor\""
															},
															"value": "D constrctor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_a937586b67f272b0af975baa93b862ad173aebc2f0dbd1343eda05a61e7ebc77",
																"typeString": "literal_string \"D constrctor\""
															}
														],
														"id": 144,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3909:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3909:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "3909:19:0"
											}
										]
									},
									"id": 149,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3895:2:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3898:0:0"
									},
									"scope": 170,
									"src": "3884:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										78,
										136
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4028:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44206265666f7265",
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4043:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36abc2e5d7f02f2a40081a1b3fe87d27d202a66a7782a661189ba20c673a8379",
																"typeString": "literal_string \"D before\""
															},
															"value": "D before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_36abc2e5d7f02f2a40081a1b3fe87d27d202a66a7782a661189ba20c673a8379",
																"typeString": "literal_string \"D before\""
															}
														],
														"id": 155,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "4039:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4039:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "4039:15:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 159,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_D_$170_$",
																"typeString": "type(contract super D)"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4071:3:0",
														"memberName": "foo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 136,
														"src": "4065:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "4065:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44206166746572",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4091:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a5fc8ffe090e3abd9f20edffa4e666846fee3af5c26e4b724912b36fdef2ad7",
																"typeString": "literal_string \"D after\""
															},
															"value": "D after"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3a5fc8ffe090e3abd9f20edffa4e666846fee3af5c26e4b724912b36fdef2ad7",
																"typeString": "literal_string \"D after\""
															}
														],
														"id": 164,
														"name": "log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "4087:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4087:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "4087:14:0"
											}
										]
									},
									"functionSelector": "c2985578",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "4000:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 151,
												"name": "B",
												"nameLocations": [
													"4022:1:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 79,
												"src": "4022:1:0"
											},
											{
												"id": 152,
												"name": "C",
												"nameLocations": [
													"4025:1:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 137,
												"src": "4025:1:0"
											}
										],
										"src": "4013:14:0"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4003:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4028:0:0"
									},
									"scope": 170,
									"src": "3991:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 171,
							"src": "3858:293:0",
							"usedErrors": []
						}
					],
					"src": "38:4113:0"
				},
				"id": 0
			}
		}
	}
}