{
	"id": "1766ba3dbf9c841b4f0dff70cef54625",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"合约/_12_错误与异常处理_assert和require.sol": {
				"content": "// SPDX-License-Identifier:GPL-3.0\r\n\r\npragma solidity ^0.8.17;\r\n\r\ncontract A {\r\n    /**\r\n        - 在EVM内部定义了两个内建的error, 分别是Panic(uint256)和Error(string)\r\n            Panic这类error的含义与java中的RuntimeException类似, 即正常的函数代码永远不会产生 Panic , \r\n            甚至是基于一个无效的外部输入时。如果发生了，那就说明出现了一个需要你修复的 bug。\r\n            Error这类error的含义与java中的非RuntimeException类似\r\n\r\n        - EVM中提供了assert来产生Panic异常, require产生Error异常\r\n     */\r\n    function requireTest(uint256 a, uint256 b) public pure {\r\n        require(a < b, \"error message\"); // 如果表达式成立, 会抛出一个Error异常\r\n    }\r\n    function div(uint256 a, uint256 b) public pure returns (uint256) {\r\n        assert(b != 0); // 触发要求除数不能为0, 如果表达式成立, 会抛出一个Panic异常\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n        - 以下是一些产生Panic的操作\r\n            0x00: 用于常规编译器插入的Panic。\r\n            0x01: 如果你调用 assert 的参数（表达式）结果为 false 。\r\n            0x11: 在 unchecked { ... } 外，如果算术运算结果向上或向下溢出。\r\n            0x12; 如果你用零当除数做除法或模运算（例如 5 / 0 或 23 % 0 ）。\r\n            0x21: 如果你将一个太大的数或负数值转换为一个枚举类型。\r\n            0x22: 如果你访问一个没有正确编码的存储byte数组.\r\n            0x31: 如果在空数组上 .pop() 。\r\n            0x32: 如果你访问 bytesN 数组（或切片）的索引太大或为负数。(例如： x[i] 而 i >= x.length 或 i < 0).\r\n            0x41: 如果你分配了太多的内内存或创建了太大的数组。\r\n            0x51: 如果你调用了零初始化内部函数类型变量。\r\n        - 以下是一些上升Error的情况\r\n            如果你调用 require(x) ，而 x 结果为 false \r\n            如果你使用 revert() 或者 revert(\"description\")\r\n            如果你在不包含代码的合约上执行外部函数调用。\r\n            如果你通过合约接收以太币，而又没有 payable 修饰符的公有函数（包括构造函数和 fallback 函数）。\r\n            如果你的合约通过公有 getter 函数接收 Ether \r\n     */\r\n}\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"合约/_12_错误与异常处理_assert和require.sol": {
				"A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "div",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "requireTest",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":66:2389  contract A {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":66:2389  contract A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88f8eda3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa391c15b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":613:771  function requireTest(uint256 a, uint256 b) public pure {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":777:981  function div(uint256 a, uint256 b) public pure returns (uint256) {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_10:\n      tag_11\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":613:771  function requireTest(uint256 a, uint256 b) public pure {... */\n    tag_8:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":691:692  b */\n      dup1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":687:688  a */\n      dup3\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":687:692  a < b */\n      lt\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":679:710  require(a < b, \"error message\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":613:771  function requireTest(uint256 a, uint256 b) public pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":777:981  function div(uint256 a, uint256 b) public pure returns (uint256) {... */\n    tag_11:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":833:840  uint256 */\n      0x00\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":865:866  0 */\n      dup1\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":860:861  b */\n      dup3\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":860:866  b != 0 */\n      sub\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":853:867  assert(b != 0) */\n      tag_19\n      jumpi\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n    tag_19:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":972:973  b */\n      dup2\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":968:969  a */\n      dup4\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":968:973  a / b */\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":961:973  return a / b */\n      swap1\n      pop\n        /* \"\\xe5\\x90\\x88\\xe7\\xba\\xa6/_12_\\xe9\\x94\\x99\\xe8\\xaf\\xaf\\xe4\\xb8\\x8e\\xe5\\xbc\\x82\\xe5\\xb8\\xb8\\xe5\\xa4\\x84\\xe7\\x90\\x86_assert\\xe5\\x92\\x8crequire.sol\":777:981  function div(uint256 a, uint256 b) public pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_25:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_27:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_28:\n        /* \"#utility.yul\":490:514   */\n      tag_42\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_27\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_43\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_43:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_29:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_45\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_28\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_7:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_48\n      tag_25\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":783:902   */\n    tag_47:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_49\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_29\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_50\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_29\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1288   */\n    tag_30:\n        /* \"#utility.yul\":1257:1281   */\n      tag_52\n        /* \"#utility.yul\":1275:1280   */\n      dup2\n        /* \"#utility.yul\":1257:1281   */\n      tag_27\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1252:1255   */\n      dup3\n        /* \"#utility.yul\":1245:1282   */\n      mstore\n        /* \"#utility.yul\":1170:1288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1516   */\n    tag_13:\n        /* \"#utility.yul\":1387:1391   */\n      0x00\n        /* \"#utility.yul\":1425:1427   */\n      0x20\n        /* \"#utility.yul\":1414:1423   */\n      dup3\n        /* \"#utility.yul\":1410:1428   */\n      add\n        /* \"#utility.yul\":1402:1428   */\n      swap1\n      pop\n        /* \"#utility.yul\":1438:1509   */\n      tag_54\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1495:1504   */\n      dup4\n        /* \"#utility.yul\":1491:1508   */\n      add\n        /* \"#utility.yul\":1482:1488   */\n      dup5\n        /* \"#utility.yul\":1438:1509   */\n      tag_30\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1294:1516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1691   */\n    tag_31:\n        /* \"#utility.yul\":1606:1617   */\n      0x00\n        /* \"#utility.yul\":1640:1646   */\n      dup3\n        /* \"#utility.yul\":1635:1638   */\n      dup3\n        /* \"#utility.yul\":1628:1647   */\n      mstore\n        /* \"#utility.yul\":1680:1684   */\n      0x20\n        /* \"#utility.yul\":1675:1678   */\n      dup3\n        /* \"#utility.yul\":1671:1685   */\n      add\n        /* \"#utility.yul\":1656:1685   */\n      swap1\n      pop\n        /* \"#utility.yul\":1522:1691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1697:1860   */\n    tag_32:\n        /* \"#utility.yul\":1837:1852   */\n      0x6572726f72206d65737361676500000000000000000000000000000000000000\n        /* \"#utility.yul\":1833:1834   */\n      0x00\n        /* \"#utility.yul\":1825:1831   */\n      dup3\n        /* \"#utility.yul\":1821:1835   */\n      add\n        /* \"#utility.yul\":1814:1853   */\n      mstore\n        /* \"#utility.yul\":1697:1860   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1866:2232   */\n    tag_33:\n        /* \"#utility.yul\":2008:2011   */\n      0x00\n        /* \"#utility.yul\":2029:2096   */\n      tag_58\n        /* \"#utility.yul\":2093:2095   */\n      0x0d\n        /* \"#utility.yul\":2088:2091   */\n      dup4\n        /* \"#utility.yul\":2029:2096   */\n      tag_31\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2022:2096   */\n      swap2\n      pop\n        /* \"#utility.yul\":2105:2198   */\n      tag_59\n        /* \"#utility.yul\":2194:2197   */\n      dup3\n        /* \"#utility.yul\":2105:2198   */\n      tag_32\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2223:2225   */\n      0x20\n        /* \"#utility.yul\":2218:2221   */\n      dup3\n        /* \"#utility.yul\":2214:2226   */\n      add\n        /* \"#utility.yul\":2207:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":1866:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2657   */\n    tag_17:\n        /* \"#utility.yul\":2404:2408   */\n      0x00\n        /* \"#utility.yul\":2442:2444   */\n      0x20\n        /* \"#utility.yul\":2431:2440   */\n      dup3\n        /* \"#utility.yul\":2427:2445   */\n      add\n        /* \"#utility.yul\":2419:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2491:2500   */\n      dup2\n        /* \"#utility.yul\":2485:2489   */\n      dup2\n        /* \"#utility.yul\":2481:2501   */\n      sub\n        /* \"#utility.yul\":2477:2478   */\n      0x00\n        /* \"#utility.yul\":2466:2475   */\n      dup4\n        /* \"#utility.yul\":2462:2479   */\n      add\n        /* \"#utility.yul\":2455:2502   */\n      mstore\n        /* \"#utility.yul\":2519:2650   */\n      tag_61\n        /* \"#utility.yul\":2645:2649   */\n      dup2\n        /* \"#utility.yul\":2519:2650   */\n      tag_33\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2511:2650   */\n      swap1\n      pop\n        /* \"#utility.yul\":2238:2657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2843   */\n    tag_21:\n        /* \"#utility.yul\":2711:2788   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2708:2709   */\n      0x00\n        /* \"#utility.yul\":2701:2789   */\n      mstore\n        /* \"#utility.yul\":2808:2812   */\n      0x01\n        /* \"#utility.yul\":2805:2806   */\n      0x04\n        /* \"#utility.yul\":2798:2813   */\n      mstore\n        /* \"#utility.yul\":2832:2836   */\n      0x24\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2822:2837   */\n      revert\n        /* \"#utility.yul\":2849:3029   */\n    tag_34:\n        /* \"#utility.yul\":2897:2974   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2975   */\n      mstore\n        /* \"#utility.yul\":2994:2998   */\n      0x12\n        /* \"#utility.yul\":2991:2992   */\n      0x04\n        /* \"#utility.yul\":2984:2999   */\n      mstore\n        /* \"#utility.yul\":3018:3022   */\n      0x24\n        /* \"#utility.yul\":3015:3016   */\n      0x00\n        /* \"#utility.yul\":3008:3023   */\n      revert\n        /* \"#utility.yul\":3221:3406   */\n    tag_23:\n        /* \"#utility.yul\":3261:3262   */\n      0x00\n        /* \"#utility.yul\":3278:3298   */\n      tag_66\n        /* \"#utility.yul\":3296:3297   */\n      dup3\n        /* \"#utility.yul\":3278:3298   */\n      tag_27\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":3273:3298   */\n      swap2\n      pop\n        /* \"#utility.yul\":3312:3332   */\n      tag_67\n        /* \"#utility.yul\":3330:3331   */\n      dup4\n        /* \"#utility.yul\":3312:3332   */\n      tag_27\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":3307:3332   */\n      swap3\n      pop\n        /* \"#utility.yul\":3351:3352   */\n      dup3\n        /* \"#utility.yul\":3341:3376   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":3356:3374   */\n      tag_69\n      tag_34\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":3341:3376   */\n    tag_68:\n        /* \"#utility.yul\":3398:3399   */\n      dup3\n        /* \"#utility.yul\":3395:3396   */\n      dup3\n        /* \"#utility.yul\":3391:3400   */\n      div\n        /* \"#utility.yul\":3386:3400   */\n      swap1\n      pop\n        /* \"#utility.yul\":3221:3406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201dc92282a40d83233532d458200979d27da6340916161f3ddfc70d0e013d175064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102da806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806388f8eda31461003b578063a391c15b14610057575b600080fd5b6100556004803603810190610050919061012e565b610087565b005b610071600480360381019061006c919061012e565b6100cd565b60405161007e919061017d565b60405180910390f35b8082106100c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c0906101f5565b60405180910390fd5b5050565b60008082036100df576100de610215565b5b81836100eb9190610273565b905092915050565b600080fd5b6000819050919050565b61010b816100f8565b811461011657600080fd5b50565b60008135905061012881610102565b92915050565b60008060408385031215610145576101446100f3565b5b600061015385828601610119565b925050602061016485828601610119565b9150509250929050565b610177816100f8565b82525050565b6000602082019050610192600083018461016e565b92915050565b600082825260208201905092915050565b7f6572726f72206d65737361676500000000000000000000000000000000000000600082015250565b60006101df600d83610198565b91506101ea826101a9565b602082019050919050565b6000602082019050818103600083015261020e816101d2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061027e826100f8565b9150610289836100f8565b92508261029957610298610244565b5b82820490509291505056fea26469706673582212201dc92282a40d83233532d458200979d27da6340916161f3ddfc70d0e013d175064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88F8EDA3 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA391C15B EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x12E JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 DUP3 LT PUSH2 0xC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0 SWAP1 PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xDF JUMPI PUSH2 0xDE PUSH2 0x215 JUMP JUMPDEST JUMPDEST DUP2 DUP4 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x273 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP2 EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x128 DUP2 PUSH2 0x102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145 JUMPI PUSH2 0x144 PUSH2 0xF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x153 DUP6 DUP3 DUP7 ADD PUSH2 0x119 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x164 DUP6 DUP3 DUP7 ADD PUSH2 0x119 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x177 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6572726F72206D65737361676500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF PUSH1 0xD DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA DUP3 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E DUP2 PUSH2 0x1D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27E DUP3 PUSH2 0xF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x289 DUP4 PUSH2 0xF8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x299 JUMPI PUSH2 0x298 PUSH2 0x244 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xC9 0x22 DUP3 LOG4 0xD DUP4 0x23 CALLDATALOAD ORIGIN 0xD4 PC KECCAK256 MULMOD PUSH26 0xD27DA6340916161F3DDFC70D0E013D175064736F6C6343000811 STOP CALLER ",
							"sourceMap": "66:2323:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@div_37": {
									"entryPoint": 205,
									"id": 37,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@requireTest_17": {
									"entryPoint": 135,
									"id": 17,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3409:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1235:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1252:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1275:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1257:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1257:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1223:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1230:3:1",
														"type": ""
													}
												],
												"src": "1170:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1414:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1402:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1506:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1491:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1438:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1438:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1364:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1376:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1387:4:1",
														"type": ""
													}
												],
												"src": "1294:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1618:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1635:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1640:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1656:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1675:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1680:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1656:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1590:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1606:11:1",
														"type": ""
													}
												],
												"src": "1522:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1803:57:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1825:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1833:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1821:14:1"
																	},
																	{
																		"hexValue": "6572726f72206d657373616765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1837:15:1",
																		"type": "",
																		"value": "error message"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1814:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1814:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1795:6:1",
														"type": ""
													}
												],
												"src": "1697:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2012:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2022:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2088:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2029:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2029:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2022:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2194:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75",
																	"nodeType": "YulIdentifier",
																	"src": "2105:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2105:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2105:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2218:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2214:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2214:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2207:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2000:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2008:3:1",
														"type": ""
													}
												],
												"src": "1866:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2409:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2419:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2431:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2442:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2419:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2466:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2477:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2462:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2462:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2485:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2455:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2455:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2511:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2645:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2519:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2511:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2389:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2404:4:1",
														"type": ""
													}
												],
												"src": "2238:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2691:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2708:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2711:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2701:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2701:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2808:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2798:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2829:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2832:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "2663:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2877:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2897:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2887:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2991:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2994:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2984:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2984:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3015:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3018:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3008:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3008:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2849:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3063:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3080:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3083:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3073:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3177:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3180:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3170:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3201:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3204:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3194:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3035:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3273:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3296:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3278:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3273:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3307:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3312:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3307:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3354:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3356:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3356:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3356:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3351:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:9:1"
															},
															"nodeType": "YulIf",
															"src": "3341:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3386:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3395:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3398:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3391:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3386:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3252:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3255:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3261:1:1",
														"type": ""
													}
												],
												"src": "3221:185:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75(memPtr) {\n\n        mstore(add(memPtr, 0), \"error message\")\n\n    }\n\n    function abi_encode_t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806388f8eda31461003b578063a391c15b14610057575b600080fd5b6100556004803603810190610050919061012e565b610087565b005b610071600480360381019061006c919061012e565b6100cd565b60405161007e919061017d565b60405180910390f35b8082106100c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c0906101f5565b60405180910390fd5b5050565b60008082036100df576100de610215565b5b81836100eb9190610273565b905092915050565b600080fd5b6000819050919050565b61010b816100f8565b811461011657600080fd5b50565b60008135905061012881610102565b92915050565b60008060408385031215610145576101446100f3565b5b600061015385828601610119565b925050602061016485828601610119565b9150509250929050565b610177816100f8565b82525050565b6000602082019050610192600083018461016e565b92915050565b600082825260208201905092915050565b7f6572726f72206d65737361676500000000000000000000000000000000000000600082015250565b60006101df600d83610198565b91506101ea826101a9565b602082019050919050565b6000602082019050818103600083015261020e816101d2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061027e826100f8565b9150610289836100f8565b92508261029957610298610244565b5b82820490509291505056fea26469706673582212201dc92282a40d83233532d458200979d27da6340916161f3ddfc70d0e013d175064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88F8EDA3 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA391C15B EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x12E JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 DUP3 LT PUSH2 0xC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0 SWAP1 PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xDF JUMPI PUSH2 0xDE PUSH2 0x215 JUMP JUMPDEST JUMPDEST DUP2 DUP4 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x273 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP2 EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x128 DUP2 PUSH2 0x102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145 JUMPI PUSH2 0x144 PUSH2 0xF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x153 DUP6 DUP3 DUP7 ADD PUSH2 0x119 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x164 DUP6 DUP3 DUP7 ADD PUSH2 0x119 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x177 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6572726F72206D65737361676500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF PUSH1 0xD DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA DUP3 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E DUP2 PUSH2 0x1D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27E DUP3 PUSH2 0xF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x289 DUP4 PUSH2 0xF8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x299 JUMPI PUSH2 0x298 PUSH2 0x244 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xC9 0x22 DUP3 LOG4 0xD DUP4 0x23 CALLDATALOAD ORIGIN 0xD4 PC KECCAK256 MULMOD PUSH26 0xD27DA6340916161F3DDFC70D0E013D175064736F6C6343000811 STOP CALLER ",
							"sourceMap": "66:2323:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;777:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;613:158;691:1;687;:5;679:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;613:158;;:::o;777:204::-;833:7;865:1;860;:6;853:14;;;;:::i;:::-;;972:1;968;:5;;;;:::i;:::-;961:12;;777:204;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:222::-;1387:4;1425:2;1414:9;1410:18;1402:26;;1438:71;1506:1;1495:9;1491:17;1482:6;1438:71;:::i;:::-;1294:222;;;;:::o;1522:169::-;1606:11;1640:6;1635:3;1628:19;1680:4;1675:3;1671:14;1656:29;;1522:169;;;;:::o;1697:163::-;1837:15;1833:1;1825:6;1821:14;1814:39;1697:163;:::o;1866:366::-;2008:3;2029:67;2093:2;2088:3;2029:67;:::i;:::-;2022:74;;2105:93;2194:3;2105:93;:::i;:::-;2223:2;2218:3;2214:12;2207:19;;1866:366;;;:::o;2238:419::-;2404:4;2442:2;2431:9;2427:18;2419:26;;2491:9;2485:4;2481:20;2477:1;2466:9;2462:17;2455:47;2519:131;2645:4;2519:131;:::i;:::-;2511:139;;2238:419;;;:::o;2663:180::-;2711:77;2708:1;2701:88;2808:4;2805:1;2798:15;2832:4;2829:1;2822:15;2849:180;2897:77;2894:1;2887:88;2994:4;2991:1;2984:15;3018:4;3015:1;3008:15;3221:185;3261:1;3278:20;3296:1;3278:20;:::i;:::-;3273:25;;3312:20;3330:1;3312:20;:::i;:::-;3307:25;;3351:1;3341:35;;3356:18;;:::i;:::-;3341:35;3398:1;3395;3391:9;3386:14;;3221:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "146000",
								"executionCost": "190",
								"totalCost": "146190"
							},
							"external": {
								"div(uint256,uint256)": "infinite",
								"requireTest(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 2389,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 2389,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201dc92282a40d83233532d458200979d27da6340916161f3ddfc70d0e013d175064736f6c63430008110033",
									".code": [
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "88F8EDA3"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "A391C15B"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 613,
											"end": 771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 613,
											"end": 771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 613,
											"end": 771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 613,
											"end": 771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 613,
											"end": 771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 613,
											"end": 771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 613,
											"end": 771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 777,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 777,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 777,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 613,
											"end": 771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 687,
											"end": 688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 687,
											"end": 692,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 679,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 679,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 613,
											"end": 771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 777,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 860,
											"end": 866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 853,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 853,
											"end": 867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 853,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 853,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 867,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 853,
											"end": 867,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 853,
											"end": 867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 968,
											"end": 973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 968,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 968,
											"end": 973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 961,
											"end": 973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 961,
											"end": 973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1257,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1438,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1691,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1522,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1697,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "6572726F72206D65737361676500000000000000000000000000000000000000"
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1866,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 2088,
											"end": 2091,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2029,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2029,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2194,
											"end": 2197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2105,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2198,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2105,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2657,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2238,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2501,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2645,
											"end": 2649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2519,
											"end": 2650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2650,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2519,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2843,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2663,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2798,
											"end": 2813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 3029,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2974,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 2998,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2991,
											"end": 2992,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2984,
											"end": 2999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3018,
											"end": 3022,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3015,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3406,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3221,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3296,
											"end": 3297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3278,
											"end": 3298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3330,
											"end": 3331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3312,
											"end": 3332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3332,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3312,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3332,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3356,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"合约/_12_错误与异常处理_assert和require.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"div(uint256,uint256)": "a391c15b",
							"requireTest(uint256,uint256)": "88f8eda3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"div\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"requireTest\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"requireTest(uint256,uint256)\":{\"notice\":\"- \\u5728EVM\\u5185\\u90e8\\u5b9a\\u4e49\\u4e86\\u4e24\\u4e2a\\u5185\\u5efa\\u7684error, \\u5206\\u522b\\u662fPanic(uint256)\\u548cError(string) Panic\\u8fd9\\u7c7berror\\u7684\\u542b\\u4e49\\u4e0ejava\\u4e2d\\u7684RuntimeException\\u7c7b\\u4f3c, \\u5373\\u6b63\\u5e38\\u7684\\u51fd\\u6570\\u4ee3\\u7801\\u6c38\\u8fdc\\u4e0d\\u4f1a\\u4ea7\\u751f Panic ,  \\u751a\\u81f3\\u662f\\u57fa\\u4e8e\\u4e00\\u4e2a\\u65e0\\u6548\\u7684\\u5916\\u90e8\\u8f93\\u5165\\u65f6\\u3002\\u5982\\u679c\\u53d1\\u751f\\u4e86\\uff0c\\u90a3\\u5c31\\u8bf4\\u660e\\u51fa\\u73b0\\u4e86\\u4e00\\u4e2a\\u9700\\u8981\\u4f60\\u4fee\\u590d\\u7684 bug\\u3002 Error\\u8fd9\\u7c7berror\\u7684\\u542b\\u4e49\\u4e0ejava\\u4e2d\\u7684\\u975eRuntimeException\\u7c7b\\u4f3c - EVM\\u4e2d\\u63d0\\u4f9b\\u4e86assert\\u6765\\u4ea7\\u751fPanic\\u5f02\\u5e38, require\\u4ea7\\u751fError\\u5f02\\u5e38\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6/_12_\\u9519\\u8bef\\u4e0e\\u5f02\\u5e38\\u5904\\u7406_assert\\u548crequire.sol\":\"A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6/_12_\\u9519\\u8bef\\u4e0e\\u5f02\\u5e38\\u5904\\u7406_assert\\u548crequire.sol\":{\"keccak256\":\"0xa3d34473f27b3345d1030075fd4d88e40199721b8c1955baf47bbaaa44d388cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5faf7352dd21ad1adee50cc682b3c4b0c744e06b590d52e48f0c72073145c108\",\"dweb:/ipfs/QmapAYtrNBp1SkS4xJABit5nZyzqMUJsyHPg2wcEdfT1my\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"requireTest(uint256,uint256)": {
								"notice": "- 在EVM内部定义了两个内建的error, 分别是Panic(uint256)和Error(string) Panic这类error的含义与java中的RuntimeException类似, 即正常的函数代码永远不会产生 Panic ,  甚至是基于一个无效的外部输入时。如果发生了，那就说明出现了一个需要你修复的 bug。 Error这类error的含义与java中的非RuntimeException类似 - EVM中提供了assert来产生Panic异常, require产生Error异常"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"合约/_12_错误与异常处理_assert和require.sol": {
				"ast": {
					"absolutePath": "合约/_12_错误与异常处理_assert和require.sol",
					"exportedSymbols": {
						"A": [
							38
						]
					},
					"id": 39,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "A",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "A",
							"nameLocation": "75:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "668:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 10,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "687:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 11,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "691:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "687:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6572726f72206d657373616765",
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "694:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75",
																"typeString": "literal_string \"error message\""
															},
															"value": "error message"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_73b10761bc1699037e81de762471f18df3332ad0042f761fdadd73f56b1a6f75",
																"typeString": "literal_string \"error message\""
															}
														],
														"id": 9,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "679:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "679:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "679:31:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "84:523:0",
										"text": "- 在EVM内部定义了两个内建的error, 分别是Panic(uint256)和Error(string)\nPanic这类error的含义与java中的RuntimeException类似, 即正常的函数代码永远不会产生 Panic , \n甚至是基于一个无效的外部输入时。如果发生了，那就说明出现了一个需要你修复的 bug。\nError这类error的含义与java中的非RuntimeException类似\n- EVM中提供了assert来产生Panic异常, require产生Error异常"
									},
									"functionSelector": "88f8eda3",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requireTest",
									"nameLocation": "622:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "642:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "634:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "653:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "645:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:22:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:0:0"
									},
									"scope": 38,
									"src": "613:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "842:139:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "860:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "865:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "860:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 26,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "853:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "853:14:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 32,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 33,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "972:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "968:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 25,
												"id": 35,
												"nodeType": "Return",
												"src": "961:12:0"
											}
										]
									},
									"functionSelector": "a391c15b",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "786:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "798:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "809:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "801:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:22:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "833:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:9:0"
									},
									"scope": 38,
									"src": "777:204:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 39,
							"src": "66:2323:0",
							"usedErrors": []
						}
					],
					"src": "38:2357:0"
				},
				"id": 0
			}
		}
	}
}