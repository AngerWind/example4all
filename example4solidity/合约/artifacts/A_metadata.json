{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "a_",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "a",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "- 构造函数是使用 constructor 关键字声明的一个可选函数, 它在创建合约时执行, 可以在其中运行合约初始化代码。 - 构造函数运行后, 将合约的最终代码部署到区块链。代码的部署需要 gas 与代码的长度线性相关。  此代码包括所有函数部分是公有接口以及可以通过函数调用访问的所有函数。 它不包括构造函数代码或仅从构造函数调用的内部函数。 - 如果没有构造函数, 合约将假定采用默认构造函数, 它等效于 constructor() {} 。 - 在 0.7.0 版本之前, 你需要通过 internal 或 public 指定构造函数的可见性。",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"合约/_09_合约_构造函数.sol": "A"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"合约/_09_合约_构造函数.sol": {
			"keccak256": "0x9ea8ea5cdc93a4c99c5c2ecb1dc556fa091afc7411aa1abd57e8dc58d6e73994",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://bb6d5bb44ff65cfd63aa949280736bea16e747a84708423044931596e01448e8",
				"dweb:/ipfs/QmaideCTTiRzsWZASaMbok9cm9NW9LYcxWcDttkjLUpHeL"
			]
		}
	},
	"version": 1
}